{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5e8f\u8a00","text":"<p>\u5728\u8fd9\u91cc\u67e5\u770b\u5b8c\u6574\u6587\u6863 mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <p>=== \"C\"</p> <pre><code>C language\n</code></pre> <p>=== \"C++\"</p> <pre><code>C++ Language\n</code></pre>"},{"location":"env/","title":"\u5f00\u53d1\u73af\u5883\u914d\u7f6e","text":"<p>\u5728\u8fd9\u90e8\u5206\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u5c06\u5411\u540c\u5b66\u4eec\u4ecb\u7ecd Linux \u53d1\u884c\u7248\uff0c\u4ee5\u5907\u540e\u7eed\u5b9e\u9a8c\u3002</p> <p>Linux\u662f\u4e00\u4e2a\u514d\u8d39\u53ef\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u975e\u5e38\u9002\u7528\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 Ubuntu 24.04 LTS \u4f5c\u4e3a\u6807\u51c6\u7684\u5b9e\u9a8c\u73af\u5883\u3002</p> <p>Warning</p> <p>\u5373\u4fbf\u90e8\u5206\u540c\u5b66\u4eec\u5df2\u7ecf\u62e5\u6709\u4e00\u4e2a\u8fd0\u884c\u7740 Linux \u53d1\u884c\u7248\u7684\u7269\u7406\u673a\u6216\u865a\u62df\u673a\u73af\u5883\uff0c\u6211\u4eec\u4f9d\u7136\u8981\u6c42\u8bf8\u4f4d\u540c\u5b66\u53c2\u7167\u4e0b\u8ff0\u6587\u6863\u4e3a\u8fd9\u95e8\u8bfe\u51c6\u5907\u4e00\u4e2a\u65b0\u7684\u6807\u51c6\u73af\u5883\uff0c\u4ee5\u51cf\u5c11\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\u3002</p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u8981\u6c42\u5404\u4f4d\u540c\u5b66\u5728\u7cfb\u7edf\u540d\u4e2d\u8bbe\u7f6e\u81ea\u5df1\u7684\u5b66\u53f7\uff0c\u4ee5\u5907Lab\u5b9e\u9a8c\u6216\u8bfe\u7a0b\u4f5c\u4e1a\u9700\u8981\u63d0\u4ea4\u622a\u56fe\u3002</p>"},{"location":"env/#linux","title":"\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684 Linux \u53d1\u884c\u7248","text":"<p>\u5982\u679c\u4f60\u6070\u597d\u6709\u5174\u8da3\uff0c\u5e76\u4e14\u62e5\u6709\u8db3\u591f\u7684\u8d44\u6e90\u914d\u7f6e\u4e00\u53f0\u8fd0\u884cLinux\u53d1\u884c\u7248\u7684\u7269\u7406\u673a\uff0c\u90a3\u4e48\u9009\u62e9\u4ec0\u4e48\u6837\u7684Linux \u53d1\u884c\u7248\u662f\u4e00\u4e2a\u5341\u5206\u81ea\u7136\u7684\u95ee\u9898\u3002</p> <p>\u4e0d\u5b58\u5728\u6700\u597d\u7684 Linux \u53d1\u884c\u7248\u3002\u5f53\u4f60\u5c1d\u8bd5\u4ece\u4f17\u591a\u53ef\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u65f6(Ubuntu, Debian, CentOS, Fedora, openSUSE, ArchLinux...)\uff0c\u8fd9\u5728\u76f8\u5f53\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u4f60\u7684\u4e2a\u4eba\u5174\u8da3\u3002</p> <p>\u5982\u679c\u4f60\u6b64\u524d\u5b8c\u5168\u4e0d\u4e86\u89e3 Linux\uff0c\u90a3\u4e48 Ubuntu \u662f\u6211\u4eec\u6240\u6700\u4e3a\u63a8\u8350\u7684\uff0c\u6211\u4eec\u5728\u540e\u7eed\u5b9e\u9a8c\u4e2d\u6240\u5c55\u793a\u7684\u547d\u4ee4\u53ca\u5b9e\u9a8c\u5747\u9488\u5bf9 Ubuntu\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8003\u8651 Fedora \u6216\u8005 openSUSE\u3002\u6211\u4eec\u5728\u4e0b\u9762\u5217\u51fa\u7684\u6587\u6863\u5c06\u5411\u540c\u5b66\u4eec\u4ecb\u7ecd\u5982\u4f55 \u5728\u7269\u7406\u673a\u4e0a \u5b89\u88c5\u8fd9\u4e9bLinux\u53d1\u884c\u7248\u3002</p> <ul> <li>Install Ubuntu Desktop\uff1a https://ubuntu.com/tutorials/install-ubuntu-desktop#1-overview</li> <li>Install openSUSE Tumbleweed\uff1a https://www.opensuse.org/</li> <li>Install Fedora Workstation\uff1a https://fedoraproject.org/</li> </ul> <p>\u4e0d\u540c\u7684 Linux \u53d1\u884c\u7248\u6709\u4e0d\u540c\u7684\u5305\u7ba1\u7406\u5de5\u5177\u548c\u7cfb\u7edf\u7ba1\u7406\u754c\u9762\u3002 \u4e0d\u8fc7\uff0c\u4ed6\u4eec\u5927\u591a\u9075\u5b88\u7c7b\u4f3c\u7684\u201c\u54f2\u5b66\u201d\u548c\u8bbe\u8ba1\u7406\u5ff5\uff0c\u56e0\u800c\u5c06\u4f60\u5728\u4e00\u4e2aLinux \u53d1\u884c\u7248\u4e0a\u5b66\u5230\u7684\u4e1c\u897f\u5e94\u7528\u5230\u53e6\u4e00\u4e2a\u4e0a\u5e76\u975e\u96be\u4e8b\u3002</p> <p>\u4e3a\u4e86\u5e94\u5bf9\u540e\u7eed\u7684\u5b9e\u9a8c\uff0c\u6211\u4eec\u63a8\u8350\u540c\u5b66\u4eec\u9009\u62e9 Ubuntu Desktop\u3001openSUSE Tumbleweed \u6216\u8005 Fedora workstation\u3002 \u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5 Ubuntu server\u3001openSUSE Leap \u548c Fedora server\uff0c\u4f46\u8981\u8bb0\u5f97\u5b89\u88c5\u4e00\u4e2a\u76f8\u5e94\u7684\u56fe\u5f62\u5316\u64cd\u4f5c\u754c\u9762\u3002</p>"},{"location":"env/#linux_1","title":"\u642d\u5efa Linux \u865a\u62df\u73af\u5883","text":"<p>\u5728Windows\u6216\u8005Mac\u4e0a\u8fd0\u884c\u4e00\u4e2aLinux\u865a\u62df\u673a\u540c\u6837\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5411\u540c\u5b66\u4eec\u63a8\u8350\u4e24\u4e2a\u76f8\u5173\u8f6f\u4ef6\u3002\u4ed6\u4eec\u90fd\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u8981\u3002</p> <ul> <li>VMware\uff1a https://www.vmware.com/products/desktop-hypervisor.html</li> <li>Virtual Box\uff1a https://www.virtualbox.org/wiki/Downloads</li> </ul> <p>\u5728\u5b89\u88c5\u597d\u5177\u4f53\u7684\u8f6f\u4ef6\u540e\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u76f8\u5e94\u6559\u7a0b\u4ee5\u5728\u8f6f\u4ef6\u4e2d\u5b89\u88c5\u5fc3\u4eea\u7684 Linux \u53d1\u884c\u7248\u3002 \u7531\u4e8e\u79cd\u7c7b\u7e41\u6742\u4e14\u76f8\u5e94\u8d44\u6e90\u5728\u4e92\u8054\u7f51\u4e0a\u5341\u5206\u4e30\u5bcc\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8fd9\u91cc\u4e0d\u505a\u63a8\u8350\u3002</p> <p>\u4e3a\u5e94\u5bf9\u540e\u7eed\u5b9e\u9a8c\uff0c\u5728\u5177\u4f53\u5b89\u88c5\u865a\u62df\u673a\u65f6\uff0c2 vCPU/4G RAM/20G Disk\u5c31\u53ef\u4ee5\u6ee1\u8db3\u9700\u8981\u4e86\u3002</p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4efd\u5df2\u7ecf\u5b89\u88c5\u597d\u73af\u5883\u7684 Ubuntu 24.04 LTS \u865a\u62df\u673a\u955c\u50cf\uff1a</p> <p>Note</p> <p>\u8bf7\u540c\u5b66\u4eec\u5728\u5b89\u88c5\u7cfb\u7edf\u65f6\u989d\u5916\u6ee1\u8db3\u5982\u4e0b\u8981\u6c42\uff1a</p> <ol> <li>\u5728\u8bbe\u5b9a\u7684\u7cfb\u7edf\u540d\u4e2d\u5305\u542b\u4f60\u7684\u5b66\u53f7\u3002</li> <li>\u8bed\u8a00\u5c3d\u91cf\u9009\u62e9\u82f1\u6587\uff0c\u4e2d\u6587\u8def\u5f84\u53ef\u80fd\u5bfc\u81f4\u90e8\u5206\u5b9e\u9a8c\u5185\u5bb9\u65e0\u6cd5\u987a\u5229\u5b8c\u6210\u3002</li> </ol> <p>Maybe we can add a simple tutorial like installing Ubuntu after installing VMware on Windows?</p>"},{"location":"env/#_2","title":"\u4f7f\u7528\u5bb9\u5668\u6784\u5efa\u5f00\u53d1\u73af\u5883","text":"<p>\u540c\u5b66\u4eec\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5728 Windows \u6216\u8005 MacOS \u4e0a\u901a\u8fc7\u8fd0\u884c\u5bb9\u5668\u6765\u5b8c\u6210\u5b9e\u9a8c\uff0c\u4f46\u6211\u4eec\u9700\u8981\u4e8b\u5148\u63d0\u9192\u5404\u4f4d\uff0c\u540e\u7eed\u6587\u6863\u4e2d\u6240\u63d0\u4f9b\u7684\u6307\u4ee4\u5728\u8fd9\u7c7b\u60c5\u5883\u4e0b\u4e0d\u4e00\u5b9a\u6709\u6548\u3002</p> <p>\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u57fa\u4e8e Windows WSL 2.0 \u7684\u65b9\u6848\uff1a</p>"},{"location":"env/helloworld/","title":"\u8fd0\u884c Hello World","text":""},{"location":"env/helloworld/#_1","title":"\u7f16\u8bd1\u4e0e\u8fd0\u884c\u5185\u6838","text":"<p>\u514b\u9686\u5185\u6838\u4ee3\u7801\u548c\u7528\u6237\u7a0b\u5e8f\u4ee3\u7801\u4ed3\u5e93\uff1a</p> <pre><code>$ git clone https://github.com/yuk1i/uCore-VisionFive2\n$ cd uCore-VisionFive2\n$ git clone https://github.com/yuk1i/uCore-VF2-user.git user\n</code></pre> <p>\u7f16\u8bd1\u7528\u6237\u7a0b\u5e8f\uff1a</p> <pre><code>make CH_TESTS=usershell user\n</code></pre> <p>\u7f16\u8bd1\u5185\u6838:</p> <pre><code>make\n</code></pre> <p>\u5728 QEMU \u4e2d\u8fd0\u884c\u5185\u6838\uff1a</p> <pre><code>make run\n</code></pre> <p>\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u5c06\u80fd\u591f\u770b\u5230\uff1a</p> <pre><code>OpenSBI v1.3\n   ____                    _____ ____ _____\n  / __ \\                  / ____|  _ \\_   _|\n | |  | |_ __   ___ _ __ | (___ | |_) || |\n | |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n | |__| | |_) |  __/ | | |____) | |_) || |_\n  \\____/| .__/ \\___|_| |_|_____/|___/_____|\n        | |\n        |_|\n\nPlatform Name             : riscv-virtio,qemu\nPlatform Features         : medeleg\nPlatform HART Count       : 1\nPlatform IPI Device       : aclint-mswi\nPlatform Timer Device     : aclint-mtimer @ 10000000Hz\nPlatform Console Device   : uart8250\nPlatform HSM Device       : ---\nPlatform PMU Device       : ---\nPlatform Reboot Device    : sifive_test\nPlatform Shutdown Device  : sifive_test\nPlatform Suspend Device   : ---\nPlatform CPPC Device      : ---\nFirmware Base             : 0x80000000\nFirmware Size             : 322 KB\nFirmware RW Offset        : 0x40000\nFirmware RW Size          : 66 KB\nFirmware Heap Offset      : 0x48000\nFirmware Heap Size        : 34 KB (total), 2 KB (reserved), 9 KB (used), 22 KB (free)\nFirmware Scratch Size     : 4096 B (total), 760 B (used), 3336 B (free)\nRuntime SBI Version       : 1.0\n\nDomain0 Name              : root\nDomain0 Boot HART         : 0\nDomain0 HARTs             : 0*\nDomain0 Region00          : 0x0000000002000000-0x000000000200ffff M: (I,R,W) S/U: ()\nDomain0 Region01          : 0x0000000080040000-0x000000008005ffff M: (R,W) S/U: ()\nDomain0 Region02          : 0x0000000080000000-0x000000008003ffff M: (R,X) S/U: ()\nDomain0 Region03          : 0x0000000000000000-0xffffffffffffffff M: (R,W,X) S/U: (R,W,X)\nDomain0 Next Address      : 0x0000000080200000\nDomain0 Next Arg1         : 0x0000000087e00000\nDomain0 Next Mode         : S-mode\nDomain0 SysReset          : yes\nDomain0 SysSuspend        : yes\n\nBoot HART ID              : 0\nBoot HART Domain          : root\nBoot HART Priv Version    : v1.12\nBoot HART Base ISA        : rv64imafdch\nBoot HART ISA Extensions  : time,sstc\nBoot HART PMP Count       : 16\nBoot HART PMP Granularity : 4\nBoot HART PMP Address Bits: 54\nBoot HART MHPM Count      : 16\nBoot HART MIDELEG         : 0x0000000000001666\nBoot HART MEDELEG         : 0x0000000000f0b509\netext: 0x0000000080205000\nKernel is initializing...\nproc_init done!\ntrap_init done!\nkvm_init done!\napplist:\n        usershell\nloader done!\ntimer_init done!\nC user shell\n&gt;&gt; \n</code></pre>"},{"location":"env/setup/","title":"\u5728 Ubuntu \u4e2d\u914d\u7f6e\u5f00\u53d1\u73af\u5883","text":"<p>\u5230\u8fd9\u4e00\u6b65\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u914d\u7f6e\u597d Linux \u73af\u5883\uff0c\u80fd\u6253\u5f00\u4e00\u4e2a Terminal \u6267\u884c\u547d\u4ee4\u3002</p> <p>Warning</p> <p>\u8bf7\u4f7f\u7528\u5c3d\u53ef\u80fd\u65b0\u7684\u53d1\u884c\u7248\u672c\u3002\u4ee5\u4e0b\u4ee3\u7801\u5747\u5df2 Ubuntu 24.04 LTS \u4e3a\u57fa\u51c6\u3002</p>"},{"location":"env/setup/#gcc-qemu","title":"\u5b89\u88c5 gcc \u5de5\u5177\u94fe\u4ee5\u53ca QEMU","text":"<p>\u4f7f\u7528\u5305\u7ba1\u7406\u5668 apt \u5b89\u88c5\u4f9d\u8d56\uff1a</p> <pre><code>sudo apt update &amp;&amp; sudo apt install gcc-riscv64-unknown-elf qemu-system-misc git make cmake python3-pip elfutils gdb-multiarch\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c <code>riscv64-unknown-elf-gcc --version</code>\uff0c<code>qemu-system-riscv64 --version</code> \u548c <code>gdb-multiarch --version</code> \u68c0\u67e5\u7248\u672c\uff1a</p> <pre><code>$ riscv64-unknown-elf-gcc --version\nriscv64-unknown-elf-gcc (13.2.0-11ubuntu1+12) 13.2.0\nCopyright (C) 2023 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n$ qemu-system-riscv64 --version\nQEMU emulator version 8.2.2 (Debian 1:8.2.2+ds-0ubuntu1)\nCopyright (c) 2003-2023 Fabrice Bellard and the QEMU Project developers\n\n$ gdb-multiarch --version\nGNU gdb (Ubuntu 15.0.50.20240403-0ubuntu1) 15.0.50.20240403-git\nCopyright (C) 2024 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n</code></pre> <p>\u8bf7\u786e\u4fdd gcc \u7248\u672c &gt;= 13.0.0\uff0cqemu-system-riscv64 \u7248\u672c &gt;= 8.0.0\uff0cgdb-multiarch \u7248\u672c &gt;= 15</p> <p>\u5982\u679c\u4f60\u5747\u5b89\u88c5\u597d\u4e86\u4ee5\u4e0a\u4f9d\u8d56\uff0c\u8bf7\u5c1d\u8bd5\u7f16\u8bd1\u5e76\u8fd0\u884c Hello World</p>"},{"location":"env/setup/#_1","title":"\u4f7f\u7528\u81ea\u7f16\u8bd1\u7684\u5de5\u5177\u94fe","text":"<p>Warning</p> <p>\u5982\u6709\u53ef\u80fd\uff0c\u8bf7\u5c3d\u91cf\u4f7f\u7528\u53d1\u884c\u7248\u81ea\u5e26\u7684\u5de5\u5177\u94fe/QEMU \u7b49\u3002</p> <p>\u5982\u679c\u4f60\u5728\u4f7f\u7528\u53d1\u884c\u7248\u7684 gcc/qemu \u65f6\u9047\u5230\u95ee\u9898\uff0c\u5e76\u4e14\u4f60\u786e\u5b9a\u662f\u73af\u5883\u4e0d\u4e00\u81f4\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u4f60\u53ef\u4ee5\u53c2\u7167\u8be5\u6587\u6863\u4ece\u96f6\u7f16\u8bd1\u6574\u4e2a\u5de5\u5177\u94fe\u3002</p>"},{"location":"env/setup/#risc-v","title":"\u5b89\u88c5RISC-V\u5de5\u5177\u94fe","text":"<p>\u53c2\u7167 https://github.com/riscv-collab/riscv-gnu-toolchain\uff1a</p> <pre><code>$ sudo -i\n$ git clone https://github.com/riscv/riscv-gnu-toolchain\n$ sudo apt-get install autoconf automake autotools-dev curl python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev ninja-build git cmake libglib2.0-dev libslirp-dev\n$ mkdir -p /opt/riscv\n$ ./configure --prefix=/opt/riscv\n$ make\n</code></pre>"},{"location":"lab/lab1/","title":"Lab1 - \u4e86\u89e3 Linux \u7cfb\u7edf\u548c\u5bb9\u5668","text":""},{"location":"qrh/c-static-linking/","title":"\u9759\u6001\u94fe\u63a5","text":""},{"location":"qrh/gdb/","title":"GDB","text":""},{"location":"qrh/git/","title":"Git","text":"<p>\u50cf Git \u8fd9\u6837\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u663e\u7740\u5f71\u54cd\u4e86\u73b0\u4ee3\u8f6f\u4ef6\u5f00\u53d1\uff0c\u8fd9\u9700\u8981\u5408\u4f5c\u548c\u5feb\u901f\u8fed\u4ee3\u3002 \u4f60\u4eec\u5e94\u8be5\u5728\u6b64\u524d\u7684\u8bf8\u591a\u8bfe\u7a0b\u4e2d\u4e0e Git \u4ea4\u624b\u8fc7\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u4f1a\u4f7f\u7528 GitLab\u3002</p>"},{"location":"qrh/nav/","title":"\u5feb\u901f\u53c2\u8003\u624b\u518c","text":"<p>\u672c\u624b\u518c\u4f1a\u8bb0\u5f55\u4f60\u5728\u8fdb\u884c\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u6216\u8005\u9700\u8981\u5b66\u4e60\u7684\u524d\u7f6e\u77e5\u8bc6</p> <ul> <li>GDB \u6559\u7a0b</li> <li>Git \u6559\u7a0b</li> </ul>"},{"location":"zh/env/","title":"\u642d\u5efa Linux \u73af\u5883","text":"<p>GNU/Linux \u662f\u4e00\u79cd\u81ea\u7531\u548c\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u800c Ubuntu \u662f\u4e00\u4e2a\u57fa\u4e8e Debian \u7684 GNU/Linux \u53d1\u884c\u7248\u3002</p> <p>\u5728\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 Ubuntu 24.04 LTS \u4f5c\u4e3a\u6807\u51c6\u7684\u5b9e\u9a8c\u73af\u5883\u3002</p> <p>Warning</p> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u5728\u4f7f\u7528\u5176\u4ed6 Linux \u53d1\u884c\u7248\uff0c\u8bf7\u786e\u4fdd\u4f60\u719f\u6089\u4f60\u6240\u4f7f\u7528\u7684\u53d1\u884c\u7248\u4e0e Ubuntu \u7684\u533a\u522b\uff0c\u5982\u5305\u7ba1\u7406\u5668\u3002\u5e76\u786e\u4fdd\u4f60\u6709\u80fd\u529b\u81ea\u5df1\u89e3\u51b3\u53d1\u884c\u7248\u4e0d\u4e00\u81f4\u5e26\u6765\u7684\u73af\u5883\u95ee\u9898\u3002</p> <p>\u5982\u679c\u4f60\u5728\u4f7f\u7528\u4f4e\u7248\u672c\u7684 Ubuntu \uff0c\u5982 18.04 LTS\uff0c\u5efa\u8bae\u4f60\u4f7f\u7528 Ubuntu 24.04 LTS \u4ee5\u907f\u514d gcc/qemu \u7248\u672c\u8fc7\u4f4e\u7684\u95ee\u9898\u3002</p> <p>\u5982\u679c\u4f60\u4f7f\u7528 Windows / macOS \u7cfb\u7edf\uff0c\u8bf7\u4f7f\u7528\u865a\u62df\u673a\u8f6f\u4ef6\u8fd0\u884c Ubuntu \u7cfb\u7edf\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4efd\u5df2\u7ecf\u5b89\u88c5\u597d\u73af\u5883\u7684 Ubuntu 24.04 LTS \u865a\u62df\u673a\u955c\u50cf\uff0c\u8bf7\u53c2\u7167 \u865a\u62df\u673a\u8bbe\u7f6e \u4e00\u8282\u8fdb\u884c\u8bbe\u7f6e\u3002</p> <p>\u6211\u4eec\u4e5f\u63d0\u4f9b\u4e86\u57fa\u4e8e Windows WSL 2.0 \u7684\u65b9\u6848\uff0c\u8bf7\u53c2\u8003 \u865a\u62df\u673a\u8bbe\u7f6e \u8bbe\u7f6e\u3002</p>"},{"location":"zh/lab/lab1/","title":"Syscall","text":"<p>what is syscall?</p> <p>how to use strace to trace syscall?</p> <p>how to write a minimal program.</p>"},{"location":"zh/lab/lab2/","title":"Lab1 - \u9759\u6001\u94fe\u63a5","text":"<p>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5c06\u4e86\u89e3\u9759\u6001\u94fe\u63a5\u548cC\u8bed\u8a00\u4e2d\u7684\u5730\u5740\u5206\u914d\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002</p> <p>C \u8bed\u8a00\u57fa\u7840</p> <p>\u5982\u679c\u4f60\u6ca1\u6709\u5b66\u4e60\u8fc7 C \u8bed\u8a00\uff0c\u6211\u4eec \u975e\u5e38\u5efa\u8bae \u4f60\u63d0\u524d\u89c2\u770b\u4e8e\u8001\u5e08\u7684 C/C++ \u8bfe\u7a0b https://www.bilibili.com/video/BV1Vf4y1P7pq \uff0c\u89c2\u770b\u5230\u7b2c 6.5 \u7ae0\u8282\u6709\u52a9\u4e8e\u4f60\u4e86\u89e3\u57fa\u672c\u7684 C \u8bed\u8a00\u8bed\u6cd5\u3002</p> <p>RISC-V \u6c47\u7f16</p> <p>\u6211\u4eec\u671f\u671b\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86\u300a\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u300b\u8bfe\u7a0b\uff0c\u5e76\u4e86\u89e3 RISC-V \u6c47\u7f16\u7684\u57fa\u7840\u77e5\u8bc6\u3002</p> <p>\u6b64\u5916\uff0c\u8bf7\u5e38\u5907 \u300aThe RISC-V Instruction Set Manual, Volume I: User-Level ISA, Version 2.1\u300b(riscv-spec-v2.1.pdf) \u4e0e \u300aThe RISC-V Instruction Set Manual, Volume II: Privileged Architecture, Document Version 20211203\u300b(riscv-privileged-20211203.pdf) \u4f5c\u4e3a\u53c2\u8003 RISC-V \u6c47\u7f16\u7684\u53c2\u8003\u624b\u518c\u3002</p>"},{"location":"zh/lab/lab2/#_1","title":"\u7c7b\u578b","text":"<p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u6574\u6570\u7c7b\u578b\u6709 long, int, short, char \u7b49\u3002 \u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cint \u7c7b\u578b\u4e3a 32 \u4f4d\u957f\uff0c\u800c long \u7c7b\u578b\u7684\u957f\u5ea6\u53d6\u51b3\u4e8e ABI\uff08Application Binary Interface\uff0c\u5728\u7f16\u8bd1\u65f6\u7531\u7528\u6237\u6307\u5b9a\uff09\u3002 \u4e3a\u4e86\u907f\u514d\u7f16\u8bd1\u76ee\u6807\u67b6\u6784\u7684\u4e0d\u540c\u800c\u5bfc\u81f4 long\u3001int \u7b49\u7c7b\u578b\u5b9e\u9645\u957f\u5ea6\u4e0e\u6211\u4eec\u9884\u60f3\u7684\u4e0d\u4e00\u81f4\uff0c\u5728\u7cfb\u7edf\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u5b9a\u957f\u7684\u6574\u5f62\uff0c\u5982 uint64_t, int32_t \u7b49\u3002 \u5728\u4e0d\u540c\u7684ABI/\u7f16\u8bd1\u5668\u73af\u5883\u4e0b\uff0c\u4f7f\u7528\u8fd9\u4e00\u4e9b\u7c7b\u578b\u4fdd\u8bc1\u4e86\u5b83\u4eec\u7edd\u5bf9\u662f\u6307\u5b9a\u957f\u5ea6\u7684\u3002</p> <p>\u4f8b\u5982\uff0c\u5728 <code>os/types.h</code> \u4e2d\uff1a</p> os/types.h<pre><code>typedef unsigned int uint;\ntypedef unsigned short ushort;\ntypedef unsigned char uchar;\ntypedef unsigned char uint8;\ntypedef unsigned short uint16;\ntypedef unsigned int uint32;\ntypedef unsigned long uint64;\n</code></pre> <p>\u6211\u4eec\u5b9a\u4e49\u4e86 <code>uint64</code>, <code>uint32</code> \u7b49\u7c7b\u578b\u5206\u522b\u4e3a <code>unsigned long</code> \u548c <code>unsigned int</code>\u3002 \u7531\u4e8e\u6211\u4eec\u9762\u5411 riscv64 \u67b6\u6784\u8fdb\u884c\u7f16\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u4fdd\u5728\u6211\u4eec\u7684 uCore \u4e2d\uff0c\u5b83\u4eec\u662f 64 / 32 \u4f4d\u7684\u3002</p>"},{"location":"zh/lab/lab2/#_2","title":"\u7f16\u8bd1\u7cfb\u7edf","text":"<p>\u5728\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u7b80\u8981\u7684\u4ecb\u7ecd\u4e86 C \u8bed\u8a00\u7684\u7f16\u8bd1\u7cfb\u7edf\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u7f16\u8bd1\u4e00\u4e2a\u7a0b\u5e8f\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a</p> <p></p> <ul> <li>\u6e90\u4ee3\u7801 .c \u6587\u4ef6\u7ecf\u8fc7 Pre-processor \u9884\u5904\u7406 cpp \u5f97\u5230 .i \u6587\u4ef6</li> <li>.i \u6587\u4ef6\u901a\u8fc7\u7f16\u8bd1\u5668 cc1 \u7f16\u8bd1\u5668\u5f97\u5230\u6c47\u7f16\u6587\u4ef6 .s</li> <li>.s \u6587\u4ef6\u901a\u8fc7\u6c47\u7f16\u5668 as \u5f97\u5230 Relocatable objects (\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6) .o</li> <li>\u94fe\u63a5\u5668 ld \u94fe\u63a5\u6240\u6709 .o \u6587\u4ef6\u5f97\u5230\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6 </li> </ul> <p>Object \u6587\u4ef6\u6709\u4ee5\u4e0b\u5f62\u5f0f\uff1a</p> <ul> <li>Relocatable object file (\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6): \u8fd9\u4e9b\u6587\u4ef6\u662f\u7531\u7f16\u8bd1\u5668\u548c\u6c47\u7f16\u5668\u751f\u6210\uff0c\u5305\u542b\u4e86\u4e8c\u8fdb\u5236\u7684\u6570\u636e\u548c\u4ee3\u7801\u3002\u8fd9\u4e9b\u6587\u4ef6\u901a\u5e38\u548c\u5176\u4ed6 Relocatable object files \u4e00\u8d77\u88ab\u94fe\u63a5\u5668\u5904\u7406\uff0c\u4ee5\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</li> <li>Executable object file (\u53ef\u6267\u884c\u6587\u4ef6): \u8fd9\u4e9b\u6587\u4ef6\u662f\u7531\u94fe\u63a5\u5668\u751f\u6210\u7684\u3002\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u88ab\u590d\u5236\u5230\u5185\u5b58\u4e2d\u5e76\u6267\u884c\u3002</li> <li>Shared object file (\u5171\u4eab\u76ee\u6807\u6587\u4ef6): \u8fd9\u662f\u4e00\u79cd\u7531\u94fe\u63a5\u5668\u751f\u6210\u7684\u7279\u6b8a\u7684\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\uff0c\u4ed6\u4eec\u88ab\u52a0\u8f7d\u8fdb\u5185\u5b58\u4e2d\u65f6\u9700\u8981\u8fdb\u884c\u91cd\u5b9a\u4f4d\u3002\u901a\u5e38\u7528\u4e8e\u52a8\u6001\u94fe\u63a5\u3002</li> </ul> <p>\u5728 Linux \u7cfb\u7edf\u4e0a\uff0cObject \u6587\u4ef6\u901a\u5e38\u4ee5 ELF (Executable and Linkable Format) \u6587\u4ef6\u683c\u5f0f\u5b58\u50a8\u3002 ELF \u6587\u4ef6\u5206\u4e3a\u4e0d\u540c\u7684\u6bb5 Section\uff0c\u7528\u4e8e\u5b58\u50a8\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5982\u4ee3\u7801\uff08.text\uff09\u3001\u6570\u636e\uff08.data\uff09\u548c\u7b26\u53f7\u8868\uff08.symtab\uff09\uff0c\u6bcf\u4e2a\u6bb5\u90fd\u6709\u5176\u4e13\u95e8\u7684\u7528\u9014\u548c\u5c5e\u6027\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 binutils \u4e2d\u7684 readelf \u5de5\u5177\u6765\u5206\u6790 ELF \u6587\u4ef6\u3002</p> <p>\u901a\u5e38\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u7528\"\u7f16\u8bd1\u5668\"\u6765\u6307\u4ee3\u6574\u4e2a\u7f16\u8bd1\u4e0e\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u6240\u6709\u5de5\u5177\uff0c\u5c3d\u7ba1\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002\u7279\u522b\u7684\uff0c\u5f53\u6211\u4eec\u8ba8\u8bba\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u65f6\uff0c\u6211\u4eec\u4f1a\u5c06\u8fdb\u884c \u9884\u5904\u7406\u3001\u6c47\u7f16\u3001\u7f16\u8bd1 \u7b49\u6b65\u9aa4\u7684\u5de5\u5177\u96c6\u5408\u7edf\u79f0\u4e3a\u7f16\u8bd1\u5668\uff1b\u5c06\u6700\u540e\u7684\u94fe\u63a5\u6b65\u9aa4\u6240\u7528\u7684\u5de5\u5177\u79f0\u4e3a\u94fe\u63a5\u5668\u3002</p>"},{"location":"zh/lab/lab2/#definition-declaration","title":"Definition \u548c Declaration","text":"<p>Definition (\u5b9a\u4e49) \u548c Declaration (\u58f0\u660e) \u662f C \u8bed\u8a00\u4e2d\u975e\u5e38\u5bb9\u6613\u6df7\u6dc6\u7684\u4e24\u4e2a\u6982\u5ff5\u3002</p> <p>Declaration \u58f0\u660e\u4e86\u4e00\u4e2a\u7b26\u53f7\uff08\u53d8\u91cf\u3001\u51fd\u6570\u7b49\uff09\uff0c\u548c\u5b83\u7684\u7684\u4e00\u4e9b\u57fa\u7840\u4fe1\u606f\uff08\u5982\u53d8\u91cf\u7c7b\u578b\u3001\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u3001\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u7b49\uff09\u3002\u8fd9\u4f7f\u5f97\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u9636\u6bb5\u80fd\u627e\u5230\u8fd9\u4e9b\u7b26\u53f7\u3002 \u800c Definition \u5b9e\u9645\u4e0a\u4f1a\u4e3a\u8be5\u7b26\u53f7\u5206\u914d\u5730\u5740\u3002\u5728\u94fe\u63a5\u9636\u6bb5\uff0c\u94fe\u63a5\u5668\u4f1a\u4e3a\u8fd9\u4e9b\u7b26\u53f7\u5206\u914d\u5730\u5740\uff08\u5982\u51fd\u6570\u5730\u5740\u3001\u5168\u5c40\u53d8\u91cf\u5730\u5740\uff09\u3002</p> <p>Symbol (\u7b26\u53f7)</p> <p>\u5728 C \u8bed\u8a00\u4e2d\uff0c\u7b26\u53f7\uff08Symbol\uff09\u662f\u7f16\u8bd1\u5668\u7528\u6765\u8868\u793a\u7a0b\u5e8f\u4e2d\u5404\u79cd\u5b9e\u4f53\uff08\u5982\u53d8\u91cf\u3001\u51fd\u6570\u3001\u5b8f\u3001\u7c7b\u578b\u540d\u7b49\uff09\u7684\u540d\u79f0\u3002\u6bcf\u4e2a\u7b26\u53f7\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u88ab\u5173\u8054\u5230\u7279\u5b9a\u7684\u5185\u5b58\u5730\u5740\u6216\u5176\u4ed6\u8d44\u6e90\u3002\u5f53\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u4e3a\u8fd9\u4e9b\u7b26\u53f7\u521b\u5efa\u7b26\u53f7\u8868 (Symbol Table)\uff0c\u8bb0\u5f55\u5b83\u4eec\u7684\u540d\u79f0\u3001\u7c7b\u578b\u3001\u4f5c\u7528\u57df\u4ee5\u53ca\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740\u6216\u503c\u3002</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u7b26\u53f7\u662f\u7a0b\u5e8f\u4e2d\u4ee3\u8868\u5b9e\u4f53\u7684\u540d\u5b57\uff0c\u7f16\u8bd1\u5668\u901a\u8fc7\u7b26\u53f7\u8868\u6765\u7ba1\u7406\u548c\u89e3\u6790\u8fd9\u4e9b\u540d\u5b57\u3002</p> <p>\u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u5728\u5934\u6587\u4ef6\u4e2d (\u5982 a.h, header file) \u4e2d\u4f7f\u7528 <code>extern int a</code> \u6765 \u58f0\u660e \u4e00\u4e2a\u53d8\u91cf <code>a</code>\uff0c\u8fd9\u4f7f\u5f97\u6240\u6709\u5f15\u7528\u8be5\u5934\u6587\u4ef6 (<code>#include \"a.h\"</code>) \u7684 .c \u6587\u4ef6\u90fd\u80fd\u627e\u5230 <code>a</code> \u8fd9\u4e2a\u7b26\u53f7\u3002\u5e76\u4e14\u5728 a.c \u4e2d \u5b9a\u4e49 \u8fd9\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4f7f\u5f97\u94fe\u63a5\u5668\u4e3a\u8be5\u53d8\u91cf\u5206\u914d\u5185\u5b58\u5730\u5740\u3002</p> <p>\u989d\u5916\u7684\uff0c\u5f53\u7f16\u8bd1\u5668\u9047\u5230\u4e86\u58f0\u660e (Declaration) \u8fc7\u4f46\u662f\u6ca1\u6709\u5b9a\u4e49 (Definition) \u8fc7\u7684\u7b26\u53f7\u65f6 (\u5982 printf)\uff0c\u7f16\u8bd1\u5668\u4f1a\u5047\u5b9a\u8be5\u7b26\u53f7\u4f1a\u5728\u5176\u4ed6 Object \u6587\u4ef6\u4e2d\u88ab\u5b9a\u4e49\uff0c\u7559\u4e0b\u4e00\u4e9b\u4fe1\u606f\u540e\u4ea4\u7ed9\u94fe\u63a5\u5668\u5bfb\u627e\u8fd9\u4e2a\u7b26\u53f7\u3002</p> <p>\u5728\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u6211\u4eec\u8981\u786e\u4fdd\u53d8\u91cf\u540d\u662f\u552f\u4e00\u7684\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5b9a\u4e49\u4e00\u4e9b\u4ec5\u5c40\u90e8\u53ef\u89c1\u7684\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 .c \u6587\u4ef6\u4e2d\u4f7f\u7528 static \u5173\u952e\u5b57\u3002</p> <p>\u73b0\u5728\uff0c\u4f60\u662f\u5426\u7406\u89e3\u4e86\u94fe\u63a5\u4e2d\u5e38\u51fa\u73b0\u7684\u4e24\u79cd\u9519\u8bef\uff1amultiple definition \u548c undefined reference \u7684\u539f\u56e0\uff1f</p> <ul> <li><code>riscv64-unknown-elf-ld: build/os/proc.o:os/proc.c:14: multiple definition of 'idle'; build/os/main.o:os/main.c:7: first defined here</code><ul> <li>\u5728\u4e0d\u540c\u7684 .c \u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u591a\u6b21 <code>idle</code> \u53d8\u91cf\u3002</li> </ul> </li> <li><code>riscv64-unknown-elf-ld: build/os/proc.o: in function 'proc_init': os/proc.c:38:(.text+0xd0): undefined reference to 'idle'</code><ul> <li>\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u4e86 <code>idle</code> \u53d8\u91cf\uff0c\u4f46\u662f\u6ca1\u6709\u5b9a\u4e49\u5b83\u3002</li> </ul> </li> </ul>"},{"location":"zh/lab/lab2/#ucore","title":"\u7406\u89e3 uCore \u662f\u5982\u4f55\u6784\u5efa\u7684","text":"<p>\u5f53\u6211\u4eec\u5728 uCore \u76ee\u5f55\u4e0b\u6267\u884c <code>make</code> \u7f16\u8bd1\u5185\u6838\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf make \u5de5\u5177\u662f\u5982\u4f55\u8c03\u7528\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\uff1a</p> <pre><code>$ make\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/console.c -o build/os/console.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/kalloc.c -o build/os/kalloc.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/loader.c -o build/os/loader.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/main.c -o build/os/main.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/printf.c -o build/os/printf.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/proc.c -o build/os/proc.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/queue.c -o build/os/queue.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/sbi.c -o build/os/sbi.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/string.c -o build/os/string.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/syscall.c -o build/os/syscall.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/timer.c -o build/os/timer.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/trap.c -o build/os/trap.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/vm.c -o build/os/vm.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/entry.S -o build/os/entry.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/switch.S -o build/os/switch.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/trampoline.S -o build/os/trampoline.o\nriscv64-unknown-elf-gcc {Compiler_Flags} -c os/link_app.S -o build/os/link_app.o\nriscv64-unknown-elf-ld -z max-page-size=4096 -T os/kernel.ld -o build/kernel build/os/console.o build/os/kalloc.o build/os/loader.o build/os/main.o build/os/printf.o build/os/proc.o build/os/queue.o build/os/sbi.o build/os/string.o build/os/syscall.o build/os/timer.o build/os/trap.o build/os/vm.o build/os/entry.o build/os/switch.o build/os/trampoline.o build/os/link_app.o\nriscv64-unknown-elf-objcopy -O binary build/kernel build/kernel.bin\nriscv64-unknown-elf-objdump -S build/kernel &gt; build/kernel.asm\nriscv64-unknown-elf-objdump -t build/kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' &gt; build/kernel.sym\nBuild kernel done\n</code></pre> <p>\u9996\u5148\uff0cmake \u4f1a\u8c03\u7528 gcc \u5bf9\u6240\u6709\u7684 .c \u548c .S \u6e90\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1 (-c xxx.c)\uff0c\u751f\u6210 .o \u7684 Relocatable object file (-o xxx.o)\u3002 \u7136\u540e\uff0cmake \u4f1a\u8c03\u7528 ld \u94fe\u63a5\u6240\u6709\u7684 .o \u6587\u4ef6\uff0c\u5e76\u4e14\u6307\u5b9a\u4e86\u4f7f\u7528 os/kernel.ld \u4f5c\u4e3a\u94fe\u63a5\u811a\u672c\uff0c\u751f\u6210\u5185\u6838\u7684 ELF \u6587\u4ef6 kernel (-o build/kernel)\u3002</p> <p>\u94fe\u63a5\u811a\u672c (Linker Script) \u6307\u5b9a\u4e86\u94fe\u63a5\u5668 ld \u5e94\u8be5\u5982\u4f55\u6392\u5e03\u6240\u6709 Object File \u4e2d\u7684\u7b26\u53f7\uff0c\u5e76\u751f\u6210\u6700\u7ec8\u7684 ELF \u6587\u4ef6\u3002</p> <pre><code>OUTPUT_ARCH(riscv)\nENTRY(_entry)\nBASE_ADDRESS = 0x80200000;\n\nSECTIONS\n{\n    . = BASE_ADDRESS;\n    skernel = .;\n\n    s_text = .;\n    .text : {\n        *(.text.entry)\n        *(.text .text.*)\n        . = ALIGN(0x1000);\n        *(trampsec)\n        . = ALIGN(0x1000);\n    }\n\n    . = ALIGN(4K);\n    e_text = .;\n    s_rodata = .;\n    .rodata : {\n        *(.rodata .rodata.*)\n    }\n\n    . = ALIGN(4K);\n    e_rodata = .;\n    s_data = .;\n    .data : {\n        *(.data.apps)\n        *(.data .data.*)\n        *(.sdata .sdata.*)\n    }\n\n    . = ALIGN(4K);\n    e_data = .;\n    .bss : {\n        *(.bss.stack)\n        s_bss = .;\n        *(.bss .bss.*)\n        *(.sbss .sbss.*)\n    }\n\n    . = ALIGN(4K);\n    e_bss = .;\n    ekernel = .;\n\n    /DISCARD/ : {\n        *(.eh_frame)\n    }\n}\n</code></pre> <p>\u5728 Linker Script \u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6307\u5b9a\u4e86\u8f93\u51fa ELF \u7684\u67b6\u6784\u662f RISC-V \u67b6\u6784\uff0c\u5165\u53e3\u51fd\u6570\u4e3a _entry \u7b26\u53f7\uff0c\u5e76\u5b9a\u4e49\u4e86 ELF \u7684\u57fa\u5730\u5740\u4e3a 0x80200000\u3002</p> <p>\u5728\u540e\u7eed\u7684 SECTIONS \u4e2d\uff0c\u6211\u4eec\u9996\u5148\u6307\u5b9a\u4e86\u5f53\u524d\u4f4d\u7f6e\u4e3a BASE_ADDRESS\uff1a<code>. = BASE_ADDRESS;</code>\uff0c\u5e76\u5b9a\u4e49\u4e86 <code>skernel</code> \u8fd9\u4e2a\u7b26\u53f7\u6307\u5411\u5f53\u524d\u5730\u5740\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u6307\u5b9a\u4e86\u5982\u4f55\u6392\u5e03 text, rodata, data, bss \u7b49 Section\uff0c\u5e76\u5728\u4e0d\u540c\u7684 Section \u4e4b\u95f4\u4f7f\u7528 <code>. = ALIGN(4K)</code> \u786e\u4fddSection\u7684\u5f00\u59cb\u5730\u5740\u5bf9\u9f50\u5230\u4e86 4096 bytes \u7684\u8fb9\u754c\u3002\u6211\u4eec\u4e5f\u6307\u5b9a\u4e86 <code>skernel</code>\u3001<code>s_text</code>\u3001<code>e_text</code> \u7b49\u7b26\u53f7\u7684\u503c\uff0c\u8fd9\u4e9b\u503c\u5728\u540e\u7eed\u5185\u6838\u4e2d\u521d\u59cb\u5316\u5185\u6838\u7684\u9875\u8868\u4e2d\u4f1a\u88ab\u4f7f\u7528\u5230\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u5728 <code>.text</code> \u6bb5\u4e2d\u9996\u5148\u5305\u542b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684 Section <code>.text.entry</code>\uff0c\u8fd9\u4e2a section \u662f\u5728 <code>entry.S</code> \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff1a</p> <pre><code>    .section .text.entry\n    .globl _entry\n_entry:\n</code></pre> <p>\u6211\u4eec\u5728 <code>entry.S</code> \u6587\u4ef6\u4e2d\u6307\u5b9a <code>_entry</code> \u7b26\u53f7\u5e94\u8be5\u88ab\u653e\u7f6e\u5230 <code>.text.entry</code> \u6bb5\uff0c\u5e76\u5728\u94fe\u63a5\u811a\u672c\u4e2d\u6307\u5b9a\u8fd9\u4e2a\u6bb5\u4e3a\u5185\u6838\u7684\u5f00\u59cb\u5730\u5740\u3002\u8fd9\u6837\u6211\u4eec\u5373\u53ef\u786e\u4fdd _entry \u4f1a\u88ab\u653e\u7f6e\u5230\u5185\u6838\u8d77\u59cb\u5730\u5740\u3002\u5f53\u6211\u4eec\u542f\u52a8\u5185\u6838\u65f6\uff0c\u6211\u4eec\u4f1a\u4ece\u8fd9\u4e2a\u8d77\u59cb\u5730\u5740\u5f00\u59cb\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u6267\u884c\u4e86\u5185\u6838\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u7f16\u8bd1 <code>build/kernel</code> \u6765\u89c2\u5bdf\u8fd9\u4e00\u70b9\uff1a</p> <pre><code>$ riscv64-linux-gnu-objdump -d  build/kernel\nDisassembly of section .text:\n\n0000000080200000 &lt;_entry&gt;:\n    80200000:   0000100f                fence.i\n    80200004:   18001073                csrw    satp,zero\n    80200008:   00094117                auipc   sp,0x94\n    8020000c:   ff810113                addi    sp,sp,-8 # 80294000 &lt;idle&gt;\n    80200010:   00001097                auipc   ra,0x1\n    80200014:   a80080e7                jalr    -1408(ra) # 80200a90 &lt;main&gt;\n</code></pre>"},{"location":"zh/lab/lab2/#_3","title":"\u7406\u89e3\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668","text":"<p>\u63a8\u8350\u9605\u8bfb\uff1aCSAPP Chapter 7: Linking</p> <p>\u5728\u8fdb\u884c\u8fd9\u4e00\u5c0f\u8282\u7684\u5b66\u4e60\u524d\uff0c\u6211\u4eec\u975e\u5e38\u5efa\u8bae\u4f60\u9605\u8bfb CSAPP \u4e2d\u7684\u7b2c7\u7ae0 \u94fe\u63a5\u3002</p> <p>https://csapp.cs.cmu.edu/2e/ch7-preview.pdf</p> <p>\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684 printf \u4f8b\u5b50\u6765\u8bf4\u660e\u9759\u6001\u94fe\u63a5\u4e2d\uff0c\u94fe\u63a5\u5668\u662f\u5982\u4f55\u4e3a\u4e0d\u540c\u7684\u7b26\u53f7\u5206\u914d\u5730\u5740\u7684\uff0c\u4ee5\u53ca\u4ece\u6c47\u7f16\u5206\u6790\u4ee3\u7801\u662f\u5982\u4f55\u5f97\u5230\u7b26\u53f7\u7684\u5730\u5740 (Addressing)\u3002</p> <p>\u5728\u8ba1\u7b97\u673a\u7684\u4e16\u754c\u4e2d\uff0c\u6240\u6709\u53d8\u91cf\u3001\u5916\u8bbe\u5747\u662f\u5185\u5b58\u5730\u5740\u8bbf\u95ee\u7684\uff0cCPU \u53ea\u4e0d\u8fc7\u662f\u5728\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740\u4e0a\u5c06\u6570\u636e\u6765\u56de\u642c\u8fd0\u800c\u5df2\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u4e86\u89e3\u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\uff0cCPU \u662f\u5982\u4f55\u5f97\u5230\u67d0\u4e2a\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u7684\u3002</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50 (lab1-1.c) \u5b9a\u4e49\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf <code>a</code>\uff0c\u4e00\u4e2a <code>main</code> \u7684\u6808\u4e0a\u53d8\u91cf <code>b</code>\uff0c\u4e00\u4e2a <code>recursive</code> \u7684\u6808\u4e0a\u53d8\u91cf <code>c</code>\uff0c\u5e76\u6253\u5370\u5b83\u4eec\u7684\u5730\u5740\u3002</p> example.c<pre><code>#include &lt;stdio.h&gt;\n\nint a = 0;\n\nvoid recursive(int depth) {\n    int c;\n    if (depth == 5) return;\n    printf(\"[%d] c is at: %p\\n\", depth, &amp;c);\n    recursive(depth + 1);\n}\n\nint main() {\n    int b;\n    printf(\"main is at: %p\\n\", &amp;main);\n    printf(\"a is at: %p\\n\", &amp;a);\n    printf(\"b is at: %p\\n\", &amp;b);\n    recursive(0);\n}\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528 <code>riscv64-linux-gnu-gcc -O0 -g -static -march=rv64g -Wl,--no-relax lab1-1.c</code> \u7f16\u8bd1\u5b83\u3002<code>-O0</code> \u8868\u793a\u7981\u7528\u4efb\u4f55\u7f16\u8bd1\u5668\u4f18\u5316\uff1b<code>-g</code> \u8868\u793a\u751f\u6210\u7684 ELF \u6587\u4ef6\u5e26\u4e0a\u8c03\u8bd5\u4fe1\u606f\uff0c\u65b9\u4fbf objdump \u65f6\u9644\u5e26\u4e0a\u6e90\u4ee3\u7801\uff1b<code>-static</code> \u8868\u793a\u751f\u6210\u9759\u6001\u94fe\u63a5\u7684 ELF \u6587\u4ef6\uff1b<code>-march=rv64g</code> \u963b\u6b62\u4e86\u7f16\u8bd1\u5668\u751f\u6210 RISC-V Compressed \u77ed\u6307\u4ee4\u3002</p> <p>\u6211\u4eec\u8fd0\u884c\u7f16\u8bd1\u4ea7\u7269\uff1a</p> <pre><code>$ ./a.out\nmain is at: 0x105e0\na is at: 0x7e8d8\nb is at: 0x7f2c6f5ffb2c\n[0] c is at: 0x7f2c6f5ffb0c\n[1] c is at: 0x7f2c6f5ffadc\n[2] c is at: 0x7f2c6f5ffaac\n[3] c is at: 0x7f2c6f5ffa7c\n[4] c is at: 0x7f2c6f5ffa4c\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c<code>main</code>\u7684\u5730\u5740\u662f <code>0x105e0</code>\uff0c<code>a</code>\u7684\u5730\u5740\u662f <code>0x7e8d8</code> \uff0c\u800c <code>b</code> \u4e0e <code>c</code> \u7684\u5730\u5740\u662f\u4ee5 <code>0x7f</code> \u5f00\u5934\u7684\u3002</p> <p>\u591a\u6b21\u8fd0\u884c a.out \u53ef\u4ee5\u53d1\u73b0\uff0cmain \u548c a \u7684\u5730\u5740\u662f\u56fa\u5b9a\u7684\uff0c\u800c b \u548c c \u7684\u5730\u5740\u5747\u4ee5 0x7f \u5f00\u5934\uff0c\u4f46\u662f\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\uff0c\u4e94\u4e2a <code>c</code> \u7684\u5730\u5740\u4e4b\u95f4\u5747\u76f8\u5dee\u56fa\u5b9a\u7684 <code>0x30</code>\u3002</p> <p>\u8fd9\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u5c06 <code>main</code> \u653e\u7f6e\u5230\u4e86 <code>.text</code> \u6bb5\uff0c<code>a</code> \u653e\u7f6e\u5230\u4e86\u7a0b\u5e8f\u7684 <code>.data</code> \u6bb5\uff0c\u8fd9\u4e24\u4e2a\u7b26\u53f7\u62e5\u6709\u56fa\u5b9a\u7684\u5730\u5740\uff1b\u800c <code>b</code> \u4e0e <code>c</code> \u5219\u662f\u5728\u7a0b\u5e8f\u7684\u6808\u4e0a\u5206\u914d\u7684\u3002</p>"},{"location":"zh/lab/lab2/#aout","title":"\u53cd\u6c47\u7f16 a.out","text":"<p>\u6211\u4eec\u901a\u8fc7 <code>objdump</code> \u5de5\u5177\u67e5\u770b\u7f16\u8bd1\u4ea7\u7269 <code>a.out</code> \u4e2d <code>main</code> \u7b26\u53f7\u7684\u6c47\u7f16\u4ee3\u7801\uff0c<code>--disassemble=main</code> \u8868\u793a\u53ea\u53cd\u6c47\u7f16 <code>main</code> \u7b26\u53f7\uff0c<code>-S</code> \u8868\u793a\u5728\u53cd\u6c47\u7f16\u4e0a\u6807\u6ce8\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\u3002</p> <pre><code>$ riscv64-linux-gnu-objdump --disassemble=main -S a.out\n\na.out:     file format elf64-littleriscv\n\nDisassembly of section .text:\n\n00000000000105e0 &lt;main&gt;:\nint main() {\n   105e0:       fe010113                addi    sp,sp,-32\n   105e4:       00113c23                sd      ra,24(sp)\n   105e8:       00813823                sd      s0,16(sp)\n   105ec:       02010413                addi    s0,sp,32\n    int b;\n    printf(\"main is at: %p\\n\", &amp;main);\n   105f0:       00000597                auipc   a1,0x0\n   105f4:       ff058593                addi    a1,a1,-16 # 105e0 &lt;main&gt;\n   105f8:       0003f517                auipc   a0,0x3f\n   105fc:       63850513                addi    a0,a0,1592 # 4fc30 &lt;__rseq_flags+0x1c&gt;\n   10600:       1ad000ef                jal     10fac &lt;_IO_printf&gt;\n    printf(\"a is at: %p\\n\", &amp;a);\n   10604:       84018593                addi    a1,gp,-1984 # 7e8d8 &lt;a&gt;\n   10608:       0003f517                auipc   a0,0x3f\n   1060c:       63850513                addi    a0,a0,1592 # 4fc40 &lt;__rseq_flags+0x2c&gt;\n   10610:       19d000ef                jal     10fac &lt;_IO_printf&gt;\n    printf(\"b is at: %p\\n\", &amp;b);\n   10614:       fec40793                addi    a5,s0,-20\n   10618:       00078593                mv      a1,a5\n   1061c:       0003f517                auipc   a0,0x3f\n   10620:       63450513                addi    a0,a0,1588 # 4fc50 &lt;__rseq_flags+0x3c&gt;\n   10624:       189000ef                jal     10fac &lt;_IO_printf&gt;\n    recursive(0);\n   10628:       00000513                li      a0,0\n   1062c:       f45ff0ef                jal     10570 &lt;recursive&gt;\n   10630:       00000793                li      a5,0\n   10634:       00078513                mv      a0,a5\n   10638:       01813083                ld      ra,24(sp)\n   1063c:       01013403                ld      s0,16(sp)\n   10640:       02010113                addi    sp,sp,32\n   10644:       00008067                ret\n</code></pre> <p>\u8f93\u51fa\u7684\u7b2c\u4e00\u884c\u544a\u8bc9\u6211\u4eec <code>a.out</code> \u6587\u4ef6\u7684\u683c\u5f0f\u662f <code>elf64-littleriscv</code>\uff0c\u8fd9\u4ee3\u8868\u8fd9\u662f\u4e00\u4e2a 64 \u4f4d ELF \u6587\u4ef6\uff0c\u67b6\u6784\u4e3a RISC-V \u5c0f\u7aef\u5e8f\u3002\u7b2c\u4e8c\u884c\u8868\u793a\u6211\u4eec\u6b63\u5728\u53cd\u6c47\u7f16\u5176\u4e2d\u7684 <code>.text</code> \u6bb5\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728 <code>10600</code>\u3001<code>10610</code> \u548c <code>10624</code> \u5904\uff0c\u5206\u522b\u6709\u4e09\u6b21 <code>jal 10fac &lt;_IO_printf&gt;</code>\uff0c\u8fd9\u8868\u793a\u8c03\u7528\u4e86 <code>printf</code> \u51fd\u6570\uff0c\u800c <code>printf</code> \u51fd\u6570\u5730\u5740\u4e3a <code>0x10fac</code>\u3002</p>"},{"location":"zh/lab/lab2/#_4","title":"\u6c47\u7f16\u4e2d\u7684\u5bfb\u5740","text":"<p>\u5728\u8fd9\u4e00\u5c0f\u8282\uff0c\u6211\u4eec\u4e3b\u8981\u63a2\u8ba8\u5728\u6c47\u7f16\u5c42\u9762\u4e0a\uff0c\u7f16\u8bd1\u5668\u662f\u5982\u4f55\u751f\u6210\u6c47\u7f16\u6307\u4ee4\u6765\u627e\u5230\u67d0\u4e2a\u7b26\u53f7\u7684\u5730\u5740\u7684\u3002</p> <p>\u5728\u4e0a\u8ff0\u7a0b\u5e8f\u8c03\u7528 printf \u65f6\uff0c\u6211\u4eec\u4f20\u5165\u4e86\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u67d0\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u3002</p> <p>\u6839\u636e <code>jal</code> \u6307\u4ee4\u524d\u7684\u6307\u4ee4\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u6d4b <code>jal printf</code> \u524d\u7684\u5bc4\u5b58\u5668\u503c\u3002\u5e76\u4e14\uff0c\u6839\u636e RISC-V \u67b6\u6784\u4e0b\u7684\u51fd\u6570\u8c03\u7528\u7ea6\u5b9a (Calling Convention, \u524d 8 \u4e2a\u6574\u6570\u53c2\u6570\u901a\u8fc7 a0-a7 \u4f20\u9012)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8c03\u7528 <code>printf</code> \u7684\u5177\u4f53\u53c2\u6570\uff1a</p> <pre><code># \u7b2c\u4e00\u6b21\uff1a\n   105f0:       00000597                auipc   a1,0x0\n   105f4:       ff058593                addi    a1,a1,-16 # 105e0 &lt;main&gt;\n   105f8:       0003f517                auipc   a0,0x3f\n   105fc:       63850513                addi    a0,a0,1592 # 4fc30 &lt;__rseq_flags+0x1c&gt;\n# a0 = 0x4fc30, a1 = 0x105e0\n# printf(0x4fc30, 0x105e0)\n   10600:       1ad000ef                jal     10fac &lt;_IO_printf&gt;\n\n# \u7b2c\u4e8c\u6b21\uff1a\n   10604:       84018593                addi    a1,gp,-1984 # 7e8d8 &lt;a&gt;\n   10608:       0003f517                auipc   a0,0x3f\n   1060c:       63850513                addi    a0,a0,1592 # 4fc40 &lt;__rseq_flags+0x2c&gt;\n# a0 = 0x4fc40, a1 = 0x7e8d8\n# printf(0x4fc40, 0x7e8d8)\n   10610:       19d000ef                jal     10fac &lt;_IO_printf&gt;\n</code></pre> <p>auipc</p> <p>AUIPC (add upper immediate to pc) is used to build pc-relative addresses and uses the U-type format. AUIPC appends 12 low-order zero bits to the 20-bit U-immediate, sign-extends the result to 64 bits, then adds it to the pc and places the result in register rd.</p> <p>AUIPC \u662f RISC-V \u4e2d\u5b9e\u73b0 PC-Relative Addressing (PC\u76f8\u5bf9\u5bfb\u5740) \u7684\u65b9\u5f0f\u3002AUIPC \u4f1a\u5c06 20 \u4f4d\u7684\u7acb\u5373\u6570\u5de6\u79fb 12 \u4f4d\uff0c\u7b26\u53f7\u6269\u5c55\u540e\u52a0\u4e0a pc \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5e76\u4fdd\u5b58\u5230\u6307\u5b9a\u7684 rd \u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>\u4f8b\u5982\uff0c<code>auipc   a1,0x0</code>\uff0c\u5c06 pc (0x105f0) \u52a0\u4e0a 0x0\uff0c\u5b58\u5165 a1 \u4e2d\u3002<code>addi    a1,a1,-16</code> \u5c06 a1 \u51cf\u53bb 0x01\uff0c\u5f97\u5230 0x105e0\uff0c\u5373 <code>main</code> \u7684\u5730\u5740\u3002</p> <p>\u6839\u636e <code>printf</code> \u7684\u5b9a\u4e49: <code>int printf(const char *restrict format, ...);</code>\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570 a0 \u5e94\u8be5\u662f\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>objdump</code> \u89c2\u5bdf\u6307\u5b9a\u5730\u5740\u5904\u7684\u503c\u6765\u9a8c\u8bc1\u8fd9\u4e00\u70b9\uff1a</p> <pre><code>$ riscv64-linux-gnu-objdump -s --start-address=0x4fc30 --stop-address=0x4fc60\n\na.out:     file format elf64-littleriscv\n\nContents of section .rodata:\n 4fc30 6d61696e 20697320 61743a20 25700a00  main is at: %p..\n 4fc40 61206973 2061743a 2025700a 00000000  a is at: %p.....\n 4fc50 62206973 2061743a 2025700a 00000000  b is at: %p.....\n</code></pre> <p><code>objdump</code> \u7684\u8f93\u51fa\u4e2d\uff0c\u6700\u5de6\u4fa7\u662f\u5185\u5b58\u5730\u5740 <code>4fc30</code>\uff0c\u540e\u9762\u8ddf\u968f\u7684\u662f\u8be5\u5730\u5740\u4e0a0x10 (32) bytes \u7684\u4e8c\u8fdb\u5236\u5185\u5bb9\uff0c\u800c\u6700\u540e\u662f\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u5185\u5bb9\u7684 ASCII \u89e3\u7801\u3002</p> <p><code>objdump</code> \u7684\u7ed3\u679c\u8868\u793a\uff0c<code>0x4fc30</code> \u5230 <code>0x4fc60</code> \u662f .rodata \u6bb5\u7684\u5185\u5bb9\uff1b\u5730\u5740 <code>0x4fc30</code> \u5904\u662f\u4e00\u4e2a NULL-terminated \u7684\u5b57\u7b26\u4e32 <code>main is at: %p..</code>\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u8c03\u7528 <code>printf</code> \u65f6\u6307\u5b9a\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u53c2\u6570 a1 \u5219\u5206\u522b\u662f <code>0x105e0</code> \u548c <code>0x7e8d8</code>\uff0c\u5b83\u4eec\u5206\u522b\u662f <code>main</code> \u548c <code>a</code> \u7684\u5730\u5740\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4eec\u5206\u522b\u662f\u901a\u8fc7 <code>auipc + addi</code> \u548c <code>addi a1,gp,xxx</code> \u8ba1\u7b97\u51fa\u6765\u7684\u3002</p> <p>\u5bfb\u5740 (Addressing)</p> <p>\u5bfb\u5740\u6a21\u5f0f\u8868\u793a\u4e86\u5982\u4f55\u8ba1\u7b97\u5185\u5b58\u5730\u5740\uff0c\u5728 RISC-V \u4e2d\uff0c\u5bfb\u5740\u6a21\u5f0f (Addressing Mode) \u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>PC-relative: auipc, jal, branch \u7b49\u6307\u4ee4\uff0c\u901a\u8fc7\u5f53\u524d\u6307\u4ee4\u7684 PC \u503c\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\u5f97\u5230</li> <li>Register-offset: jalr, ld, sw \u7b49\u6240\u6709\u8bbf\u5b58\u6307\u4ee4\uff0c\u901a\u8fc7\u67d0\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u52a0\u4e0a\u4e00\u4e2a\u504f\u79fb\u91cf\u5f97\u5230</li> <li>Absolute: lui \u6307\u4ee4\uff0c\u76f4\u63a5\u901a\u8fc7\u7acb\u5373\u6570\u5f97\u5230\u5730\u5740</li> </ul> <p>\u6211\u4eec\u53d1\u73b0\uff0cRISC-V \u7f16\u8bd1\u5668\u901a\u5e38\u4f1a\u4f7f\u7528 auipc + addi \u7684\u65b9\u5f0f\u4f7f\u7528 PC-Relative \u6765\u5f97\u5230\u76ee\u6807\u7b26\u53f7\u7684\u5730\u5740\u3002</p>"},{"location":"zh/lab/lab2/#_5","title":"\u7b26\u53f7\u89e3\u6790","text":"<p>\u6211\u4eec\u5728\u4e4b\u524d\u7f16\u8bd1 <code>lab1-1.c</code> \u65f6\uff0c\u4f7f\u7528\u4e86 gcc \u76f4\u63a5\u7f16\u8bd1\u3002\u5b9e\u9645\u4e0a gcc \u4f1a\u8fdb\u884c\u7f16\u8bd1\u5e76\u94fe\u63a5\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5728\u7f16\u8bd1 <code>lab1-1.c</code> \u65f6\u52a0\u5165 <code>-c</code> \u53c2\u6570\uff0c\u544a\u8bc9 gcc \u53ea\u8981\u8fdb\u884c\u7f16\u8bd1\u800c\u4e0d\u8fdb\u884c\u94fe\u63a5\uff0c\u8fd9\u4e00\u6b65\u4f1a\u751f\u6210Relocatable Object file <code>lab1-1.o</code></p> <pre><code>$ riscv64-linux-gnu-gcc -O0 -g -static -march=rv64g -c lab1-1.c\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528 <code>llvm-readelf</code> \u5de5\u5177\u89e3\u6790\u7f16\u8bd1\u4ea7\u7269 <code>lab1-1.o</code>\uff1a</p> <pre><code>$ llvm-readelf-17 --all lab1-1.o\n\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              REL (Relocatable file)\n  Machine:                           RISC-V\n  Version:                           0x1\n  Entry point address:               0x0\n  Start of program headers:          0 (bytes into file)\n  Start of section headers:          6856 (bytes into file)\n  Flags:                             0x4, double-float ABI\n  Size of this header:               64 (bytes)\n  Size of program headers:           0 (bytes)\n  Number of program headers:         0\n  Size of section headers:           64 (bytes)\n  Number of section headers:         23\n  Section header string table index: 22\nThere are 23 section headers, starting at offset 0x1ac8:\n\nSection Headers:\n  [Nr] Name              Type            Address          Off    Size   ES Flg Lk Inf Al\n  [ 0]                   NULL            0000000000000000 000000 000000 00      0   0  0\n  [ 1] .text             PROGBITS        0000000000000000 000040 0000f4 00  AX  0   0  4\n  [ 2] .rela.text        RELA            0000000000000000 000fb8 000390 18   I 20   1  8\n  [ 3] .data             PROGBITS        0000000000000000 000134 000000 00  WA  0   0  1\n  [ 4] .bss              NOBITS          0000000000000000 000134 000004 00  WA  0   0  4\n  [ 5] .rodata           PROGBITS        0000000000000000 000138 000045 00   A  0   0  8\n  [ 6] .debug_info       PROGBITS        0000000000000000 00017d 000108 00      0   0  1\n  [ 7] .rela.debug_info  RELA            0000000000000000 001348 000288 18   I 20   6  8\n  [ 8] .debug_abbrev     PROGBITS        0000000000000000 000285 0000c8 00      0   0  1\n  [ 9] .debug_aranges    PROGBITS        0000000000000000 00034d 000030 00      0   0  1\n  [10] .rela.debug_aranges RELA          0000000000000000 0015d0 000060 18   I 20   9  8\n  [11] .debug_line       PROGBITS        0000000000000000 00037d 0000a3 00      0   0  1\n  [12] .rela.debug_line  RELA            0000000000000000 001630 0002d0 18   I 20  11  8\n  [13] .debug_str        PROGBITS        0000000000000000 000420 0000e9 01  MS  0   0  1\n  [14] .debug_line_str   PROGBITS        0000000000000000 000509 00009e 01  MS  0   0  1\n  [15] .comment          PROGBITS        0000000000000000 0005a7 00001f 01  MS  0   0  1\n  [16] .note.GNU-stack   PROGBITS        0000000000000000 0005c6 000000 00      0   0  1\n  [17] .eh_frame         PROGBITS        0000000000000000 0005c8 000068 00   A  0   0  8\n  [18] .rela.eh_frame    RELA            0000000000000000 001900 0000f0 18   I 20  17  8\n  [19] .riscv.attributes RISCV_ATTRIBUTES 0000000000000000 000630 000061 00      0   0  1\n  [20] .symtab           SYMTAB          0000000000000000 000698 0007c8 18     21  79  8\n  [21] .strtab           STRTAB          0000000000000000 000e60 000156 00      0   0  1\n  [22] .shstrtab         STRTAB          0000000000000000 0019f0 0000d2 00      0   0  1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  R (retain), p (processor specific)\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> <ol> <li> <p>ELF Header \u4e2d\u7684 Type \u662f <code>REL (Relocatable file)</code>\uff0c\u8fd9\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\u3002</p> </li> <li> <p>ELF \u6587\u4ef6\u4e2d\u4e00\u5171\u6709 23 \u4e2a Section\uff0c\u6bcf\u4e2a Section \u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57 (Name)\u3001\u7c7b\u578b (Type)\u3001\u5730\u5740 (Address)\u3001\u5728 ELF \u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u91cf (Off)\u3001\u5927\u5c0f (Size) \u548c Flag</p> </li> <li> <p>Flag \u4e2d\u6807\u5fd7\u4e86\u6bcf\u4e2a Section \u7684\u4e00\u4e9b\u5c5e\u6027\uff0c\u4f8b\u5982 <code>A (alloc)</code>\u3001<code>W (write)</code>\u3001<code>X (execute)</code>\u3002<code>A (alloc)</code> \u8868\u793a\u5728\u52a0\u8f7d ELF \u65f6\uff0c\u8fd9\u4e2a Section \u5e94\u8be5\u88ab\u5206\u914d\u5185\u5b58\u5e76\u52a0\u8f7d\u3002\u800c <code>W</code> \u4e0e <code>X</code> \u5219\u8868\u793a\u6bb5\u662f\u5426\u53ef\u5199\u548c\u53ef\u6267\u884c\u3002</p> </li> <li> <p>\u6211\u4eec\u53d1\u73b0\u4e86\u5e38\u89c1\u7684 <code>.text</code> \u6bb5\uff0c\u5b83\u662f AX \uff1a\u9700\u8981\u88ab\u52a0\u8f7d\u3001\u53ef\u6267\u884c\u7684\u3002<code>.data</code> \u6bb5\u548c <code>.bss</code> \u6bb5\u662f AW \u7684\uff1a\u9700\u8981\u88ab\u52a0\u8f7d\u3001\u53ef\u5199\u7684\u3002\u800c <code>.rodata</code> \u662f\u8fd1\u9700\u8981\u88ab\u52a0\u8f7d\u7684\uff0c\u4e0d\u53ef\u5199\u548c\u4e0d\u53ef\u6267\u884c\u7684\u3002</p> </li> <li> <p>\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4e2a\u7279\u6b8a\u7684 Section <code>.symtab</code>\uff0c\u5b83\u5b58\u50a8\u7740\u8fd9\u4e2a Relocatable file \u7684 Symbol Table \u7b26\u53f7\u8868\u3002</p> </li> </ol> <p>\u7b26\u53f7\u8868\u662f\u8fde\u63a5\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u7684\u91cd\u8981\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u89c2\u5bdf <code>lab1-1.o</code> \u7684\u7b26\u53f7\u8868\uff1a</p> <pre><code>$ llvm-readelf-17 --symbols lab1-1.o\nSymbol table '.symtab' contains 83 entries:\n   Num:    Value          Size Type    Bind   Vis       Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT   UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS lab1-1.c\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT     1 .text\n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT     3 .data\n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT     4 .bss\n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT     5 .rodata\n    ...\n    79: 0000000000000000     4 OBJECT  GLOBAL DEFAULT     4 a\n    80: 0000000000000000   120 FUNC    GLOBAL DEFAULT     1 recursive\n    81: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND printf\n    82: 0000000000000078   124 FUNC    GLOBAL DEFAULT     1 main\n</code></pre> <p>\u7b26\u53f7\u8868\u4e2d\u6709 83 \u6761 Symbol\uff0c\u6bcf\u4e00\u6761\u5747\u6709\u4e00\u4e2a\u503c\u3001\u5927\u5c0f\u3001\u7c7b\u578b\u3001\u53ef\u89c1\u57df (Bind)\u3001\u540d\u5b57 (Name)\uff0c\u9664\u6b64\u4e4b\u5916\uff0cNdx \u4e00\u5217\u8868\u793a\u4e86\u8fd9\u4e2a\u7b26\u53f7\u662f\u5c5e\u4e8e\u54ea\u4e2a Section \u7684\u3002</p> <p>\u4f8b\u5982\uff0c<code>main</code> \u548c <code>recursize</code> \u662f\u4e24\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u7c7b\u578b\u662f FUNC\uff0cNdx \u4e3a 1\uff0c\u8868\u660e\u5b83\u5c5e\u4e8e Section Headers \u4e2d\u7684 1 \u53f7 Section <code>.text</code>\u3002 <code>a</code> \u662f\u4e00\u4e2a\u672a\u88ab\u521d\u59cb\u5316\u7684 int \u53d8\u91cf\uff0c\u6240\u4ee5\u5b83\u7684\u7c7b\u578b\u662f OBJECT\uff0c\u6240\u5c5e\u4e8e <code>.bss</code> \u6bb5\uff0c\u5927\u5c0f\u4e3a 4 \u4e2a\u5b57\u8282\u3002 \u7279\u522b\u7684\uff0c\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u5f15\u7528\u4e86\u5916\u90e8\u7b26\u53f7 (\u6ca1\u6709\u5728 lab1-1.c \u4e2d\u5b9a\u4e49) printf\uff0c\u5b83\u7684 Ndx \u662f UND (\u8868\u660e\u8fd9\u4e2a\u7b26\u53f7\u88ab\u8be5\u6587\u4ef6\u5f15\u7528\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u5728\u8be5\u6587\u4ef6\u4e2d\u88ab\u5b9a\u4e49)\uff0c\u5e76\u4e14\u6211\u4eec\u4e5f\u4e0d\u77e5\u9053\u5b83\u7684\u7c7b\u578b\u3002</p> <p>\u94fe\u63a5\u5668\u4f1a\u8bfb\u53d6\u6240\u6709\u8981\u94fe\u63a5\u7684 .o \u6587\u4ef6\u7684\u7b26\u53f7\u8868\uff0c\u7ed3\u5408\u6240\u6709\u88ab\u5b9a\u4e49\u7684\u7b26\u53f7\uff0c\u548c\u88ab\u5f15\u7528\u7684\u5916\u90e8\u7b26\u53f7\u3002\u8fd9\u4e00\u6b65\u88ab\u6210\u4e3a\u7b26\u53f7\u89e3\u6790 (Symbol Resolution)\u3002</p>"},{"location":"zh/lab/lab2/#_6","title":"\u7b26\u53f7\u91cd\u5b9a\u4f4d","text":"<p>\u6211\u4eec\u4f7f\u7528 <code>objdump</code> \u89c2\u5bdf\u751f\u6210\u7684 lab1-1.o \u6587\u4ef6\u3002</p> <pre><code>$ riscv64-linux-gnu-objdump --disassemble=main -S lab1-1.o\n\nDisassembly of section .text:\n\n0000000000000078 &lt;main&gt;:\nint main() {\n  78:   fe010113                addi    sp,sp,-32\n  7c:   00113c23                sd      ra,24(sp)\n  80:   00813823                sd      s0,16(sp)\n  84:   02010413                addi    s0,sp,32\n    int b;\n    printf(\"main is at: %p\\n\", &amp;main);\n  88:   00000597                auipc   a1,0x0\n  8c:   00058593                mv      a1,a1\n  90:   00000517                auipc   a0,0x0\n  94:   00050513                mv      a0,a0\n  98:   00000097                auipc   ra,0x0\n  9c:   000080e7                jalr    ra # 98 &lt;main+0x20&gt;\n    printf(\"a is at: %p\\n\", &amp;a);\n  a0:   00000597                auipc   a1,0x0\n  a4:   00058593                mv      a1,a1\n  a8:   00000517                auipc   a0,0x0\n  ac:   00050513                mv      a0,a0\n  b0:   00000097                auipc   ra,0x0\n  b4:   000080e7                jalr    ra # b0 &lt;main+0x38&gt;\n    printf(\"b is at: %p\\n\", &amp;b);\n</code></pre> <p>\u6211\u4eec\u5bf9\u6bd4 <code>a.out</code> \u548c <code>lab1-1.o</code> \u4e2d\u7b2c\u4e00\u6b21 <code>printf</code> \u65f6\u7684\u6c47\u7f16\u4ee3\u7801\uff1a</p> <pre><code># lab1-1.o:\n  88:          00000597                auipc   a1,0x0\n  8c:          00058593                mv      a1,a1\n  90:          00000517                auipc   a0,0x0\n  94:          00050513                mv      a0,a0\n  98:          00000097                auipc   ra,0x0\n  9c:          000080e7                jalr    ra # 98 &lt;main+0x20&gt;\n# a.out:\n  105f0:       00000597                auipc   a1,0x0\n  105f4:       ff058593                addi    a1,a1,-16 # 105e0 &lt;main&gt;\n  105f8:       0003f517                auipc   a0,0x3f\n  105fc:       63850513                addi    a0,a0,1592 # 4fc30 &lt;__rseq_flags+0x1c&gt;\n  10600:       1ad000ef                jal     10fac &lt;_IO_printf&gt;\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c<code>lab1-1.o</code> \u4e2d\uff0c<code>auipc</code> \u548c <code>mv</code> \u6307\u4ee4\u4e2d\u7684\u7acb\u5373\u6570\u5747\u4e3a 0\u3002\u8fd9\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e9b\u7b26\u53f7 (main\u51fd\u6570\u3001printf\u51fd\u6570\u3001\u53d8\u91cfa\u7b49) \u5c06\u4f1a\u88ab\u94fe\u63a5\u5668\u5b89\u6392\u5230\u4ec0\u4e48\u5730\u5740\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u53ea\u80fd\u6446\u70c2\uff0c\u751f\u6210\u4e86\u4e00\u4e9b\u5360\u4f4d\u6307\u4ee4\uff0c\u5e76\u751f\u6210\u4e86\u4e00\u4e9b Relocation \u4fe1\u606f\uff0c\u5c06\u6700\u7ec8\u786e\u8ba4\u5730\u5740\u7684\u4efb\u52a1\u7559\u7ed9\u4e86\u94fe\u63a5\u5668\u5904\u7406\u3002</p> <p>\u5728\u9759\u6001\u94fe\u63a5\u4e2d\uff0c\u51fd\u6570\u7684\u5730\u5740\u548c\u5168\u5c40\u53d8\u91cf\u7684\u5730\u5740\u5728\u94fe\u63a5\u9636\u6bb5\u88ab\u786e\u5b9a\u3002\u94fe\u63a5\u5668\u4f1a\u6839\u636e Linker Script \u5408\u5e76\u6240\u6709 object \u6587\u4ef6\u4e2d\u7684\u6240\u6709\u7b26\u53f7\uff0c\u5e76\u4e3a\u5176\u5206\u914d\u5730\u5740\u3002 \u5728\u5206\u914d\u5730\u5740\u7ed3\u675f\u540e\uff0c\u94fe\u63a5\u5668\u4f1a\u6839\u636e\u7f16\u8bd1\u5668\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u5728\u6307\u5b9a\u6c47\u7f16\u4ee3\u7801\u7684\u4f4d\u7f6e\u586b\u5165\u7acb\u5373\u6570\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u5bfb\u5740\u4ee3\u7801\u80fd\u6b63\u786e\u7684\u627e\u5230\u5b83\u4eec\u6240\u5f15\u7528\u7684\u7b26\u53f7\u3002\u8fd9\u4e00\u6b65\u88ab\u6210\u4e3a Relocation \u91cd\u5b9a\u4f4d\u3002</p> <p>\u5728 lab1-1.o \u4e2d\uff0c<code>main</code> \u7684\u5730\u5740\u662f 0x0078\uff0c\u800c\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c<code>main</code> \u7684\u5730\u5740\u662f <code>0x105e0</code>\u3002\u8fd9\u662f\u56e0\u4e3a\u94fe\u63a5\u5668\u5b8c\u6210\u4e86\u5bf9 lab1-1.o \u4e2d <code>main</code> \u51fd\u6570\u7684\u91cd\u5b9a\u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>main</code> \u51fd\u6570\u6700\u7ec8\u88ab\u91cd\u5b9a\u4f4d\u5230\u4e86 <code>0x105e0</code>\u3002\u5e76\u4e14\uff0c<code>printf</code> \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4e5f\u88ab\u6b63\u786e\u5b9a\u4f4d\u4e86 (0x4fc30)\u3002</p> <p>\u6211\u4eec\u4f7f\u7528 <code>readelf</code> \u5de5\u5177\u67e5\u9605 lab1-1.o \u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53d1\u73b0 <code>.rela.text</code> \u6bb5\u4e2d\u6709\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <pre><code>$ llvm-readelf-17 --relocs lab1-1.o\n\nRelocation section '.rela.text' at offset 0xfb8 contains 38 entries:\n    Offset             Info             Type               Symbol's Value  Symbol's Name + Addend\n0000000000000088  0000005200000017 R_RISCV_PCREL_HI20     0000000000000078 main + 0\n0000000000000098  0000005100000013 R_RISCV_CALL_PLT       0000000000000000 printf + 0\n</code></pre> <p>\u8fd9\u8868\u793a\u4e86\u5728 lab1-1.o \u6c47\u7f16\u7684 0x88 \u5904\u5f15\u7528\u4e86 <code>main</code> \u7b26\u53f7\u7684\u5730\u5740\uff0c\u5e76\u5728 0x98 \u5904\u8c03\u7528\u4e86 <code>printf</code> \u51fd\u6570\uff0c\u8fd9\u4e0e\u6211\u4eec\u89c2\u5bdf\u5230 lab1-1.o \u4e2d\u7684\u6c47\u7f16\u884c\u4e3a\u76f8\u7b26\u5408\u3002\u94fe\u63a5\u5668\u9700\u8981\u5904\u7406\u8fd9\u4e9b Relocation \u4fe1\u606f\u5e76\u6700\u7ec8\u751f\u6210\u6700\u540e\u7684 a.out \u6587\u4ef6\u3002</p>"},{"location":"zh/lab/lab2/#_7","title":"\u603b\u7ed3","text":"<p>\u7efc\u4e0a\uff0c\u5728\u9759\u6001\u94fe\u63a5\u4e2d\uff0c\u94fe\u63a5\u5668\u4e3b\u8981\u5b8c\u6210\u4e86\u4e24\u4ef6\u4e8b\u60c5\uff1a</p> <ul> <li> <p>\u89e3\u6790\u7b26\u53f7\uff1a\u786e\u5b9a object \u6587\u4ef6\u4e2d\u5f15\u7528\u7684 Symbol \u5177\u4f53\u4e3a\u54ea\u4e2a</p> </li> <li> <p>\u91cd\u5b9a\u4f4d\uff1a\u91cd\u5b9a\u4f4d object \u6587\u4ef6\u4e2d\u7684\u6bb5\uff0c\u5e76\u91cd\u5b9a\u4f4d\u5176\u4e2d\u5bf9 Symbol \u7684\u5f15\u7528</p> </li> </ul> <p>\u5728\u7b2c\u4e8c\u6b65\u4e2d\uff0cld \u4f1a\u6839\u636e Linker Script \u6307\u793a\u8fdb\u884c\u91cd\u5b9a\u4f4d\uff0c\u6240\u6709\u51fd\u6570\u3001\u5168\u5c40\u53d8\u91cf\uff0c\u5747\u62e5\u6709\u4e86\u81ea\u5df1\u6240\u5c5e\u7684\u7a7a\u95f4\u4ee5\u53ca\u5176\u5730\u5740\u3002</p>"},{"location":"zh/lab/lab2/#ex-libc","title":"Ex: libc","text":"<p>main.c \u4e2d\u5e76\u6ca1\u6709\u5b9a\u4e49 <code>printf</code> \u51fd\u6570\uff0c\u5b83\u5728\u5934\u6587\u4ef6 <code>stdio.h</code> \u4e2d\u88ab\u58f0\u660e\u4e86\u3002</p> <p>\u4f46\u662f\uff0c\u6211\u4eec\u5728\u94fe\u63a5\u65f6\u4e5f\u5e76\u6ca1\u6709\u989d\u5916\u6307\u5b9a\u5176\u4ed6 .o \u6587\u4ef6\u3002\u8fd9\u662f\u56e0\u4e3a <code>printf</code> \u662f C \u6807\u51c6\u5e93 (libc) \u7684\u4e00\u90e8\u5206\uff0c\u800c\u9ed8\u8ba4\u7684\u94fe\u63a5\u53c2\u6570\u4e2d\u5747\u4f1a\u94fe\u63a5\u4e0a libc\u3002</p> <p>\u6211\u4eec\u5728\u7f16\u8bd1\u94fe\u63a5 lab1-1.o \u65f6\uff0c\u4f7f\u7528 <code>-Wl,-v</code> \u663e\u793a\u94fe\u63a5\u5668 ld \u7684\u5177\u4f53\u53c2\u6570\uff1a</p> <pre><code>$ riscv64-linux-gnu-gcc -O0 -g -static -march=rv64g lab1-1.o -Wl,-v\ncollect2 version 14.2.0\n/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/bin/ld -plugin /usr/libexec/gcc-cross/riscv64-linux-gnu/14/liblto_plugin.so -plugin-opt=/usr/libexec/gcc-cross/riscv64-linux-gnu/14/lto-wrapper -plugin-opt=-fresolution=/tmp/cc0dIN9b.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_eh -plugin-opt=-pass-through=-lc --sysroot=/ --build-id -hash-style=gnu --as-needed -melf64lriscv -X -static /usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/lib/crt1.o /usr/lib/gcc-cross/riscv64-linux-gnu/14/crti.o /usr/lib/gcc-cross/riscv64-linux-gnu/14/crtbeginT.o -L/usr/lib/gcc-cross/riscv64-linux-gnu/14 -L/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/lib -L/lib/riscv64-linux-gnu -L/usr/lib/riscv64-linux-gnu lab1-1.o -v --start-group -lgcc -lgcc_eh -lc --end-group /usr/lib/gcc-cross/riscv64-linux-gnu/14/crtend.o /usr/lib/gcc-cross/riscv64-linux-gnu/14/crtn.o\nGNU ld (GNU Binutils for Debian) 2.43.1\n</code></pre> <p>\u5176\u4e2d\u5305\u542b\u4e86 <code>-L/usr/lib/gcc-cross/riscv64-linux-gnu/14</code> \u6307\u5b9a\u4e86\u94fe\u63a5\u8be5\u76ee\u5f55\u4e0b\u9762\u7684\u67d0\u4e9b Object \u6587\u4ef6\uff0c<code>--start-group -lgcc -lgcc_eh -lc --end-group</code> \u8868\u793a\u4e86\u94fe\u63a5 libc \u5e93\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>-nostdlib</code> \u6765\u7981\u6b62\u94fe\u63a5\u6807\u51c6\u5e93\uff1a</p> <pre><code>$ riscv64-linux-gnu-gcc -O0 -g -static -march=rv64g lab1-1.o -Wl,-v -nostdlib\ncollect2 version 14.2.0\n/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/bin/ld -plugin /usr/libexec/gcc-cross/riscv64-linux-gnu/14/liblto_plugin.so -plugin-opt=/usr/libexec/gcc-cross/riscv64-linux-gnu/14/lto-wrapper -plugin-opt=-fresolution=/tmp/cceuW8LP.res --sysroot=/ --build-id -hash-style=gnu --as-needed -melf64lriscv -X -static -L/usr/lib/gcc-cross/riscv64-linux-gnu/14 -L/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/lib -L/lib/riscv64-linux-gnu -L/usr/lib/riscv64-linux-gnu lab1-1.o -v\nGNU ld (GNU Binutils for Debian) 2.43.1\n/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/bin/ld: warning: cannot find entry symbol _start; defaulting to 000000000001017c\n/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/bin/ld: lab1-1.o: in function `recursive':\nlab1-1.c:8:(.text+0x40): undefined reference to `printf'\n/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/bin/ld: lab1-1.o: in function `main':\nlab1-1.c:14:(.text+0x94): undefined reference to `printf'\n/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/bin/ld: lab1-1.c:15:(.text+0xac): undefined reference to `printf'\n/usr/lib/gcc-cross/riscv64-linux-gnu/14/../../../../riscv64-linux-gnu/bin/ld: lab1-1.c:16:(.text+0xc4): undefined reference to `printf'\ncollect2: error: ld returned 1 exit status\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5c3d\u7ba1 ld \u88ab\u6307\u5b9a\u4e86\u4e00\u4e9b\u94fe\u63a5\u76ee\u5f55 <code>-L</code> \u4f46\u662f\u6ca1\u6709\u6307\u5b9a <code>-lc</code>\u3002\u56e0\u6b64 ld \u62a5\u9519\u4e86 undefined reference\uff0c\u63d0\u793a\u627e\u4e0d\u5230 <code>printf</code> \u8fd9\u4e2a\u7b26\u53f7\u3002</p>"},{"location":"zh/lab/lab2/#_8","title":"\u7ed3\u6784\u4f53","text":"<p>C \u8bed\u8a00\u4e2d\uff0c\u7ed3\u6784\u4f53\u662f\u5bf9\u4e00\u4e9b\u6570\u636e\u7684\u8868\u793a\u3002(A structure is a programmer-defined data type made up of variables of other data types (possibly including other structure types).)</p> <p>\u6211\u4eec\u901a\u8fc7 <code>struct</code> \u5173\u952e\u5b57\u58f0\u660e\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002 \u901a\u5e38\uff0c\u6211\u4eec\u5c06\u4e00\u4e9b\u76f8\u5173\u8054\u7684\u6570\u636e\u653e\u7f6e\u5728\u540c\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e0a\u3002</p> <p>\u7ed3\u6784\u4f53\u6709\u7740\u7f16\u8bd1\u671f\u5c31\u5df2\u77e5\u7684\u56fa\u5b9a\u5927\u5c0f\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u7ed3\u6784\u4f53\u4e2d\u7684\u53d8\u91cf\u4f1a\u4f9d\u6b21\u5728\u5185\u5b58\u4e2d\u6392\u5e03\uff0c\u4f46\u662f\u53d8\u91cf\u4e4b\u95f4\u53ef\u80fd\u4f1a\u5b58\u5728\u4e00\u4e9b Padding\uff0c\u786e\u4fdd\u7ed3\u6784\u4f53\u4e2d\u7684\u53d8\u91cf\u88ab\u6b63\u786e\u5bf9\u9f50\u4e86\u3002</p> <pre><code>struct proc {\n    enum procstate state;   // Process state\n    int pid;                // Process ID\n    uint64 pagetable;  // User page table\n    uint64 ustack;          // Virtual address of kernel stack\n    uint64 kstack;          // Virtual address of kernel stack\n    struct trapframe *trapframe; // data page for trampoline.S\n    struct context context; // swtch() here to run process\n    struct proc *parent;    // Parent process\n};\n</code></pre> <p>\u4f8b\u5982\uff0c\u5728\u6211\u4eec\u7684 uCore \u5185\u6838\u4e0a\uff0c\u63cf\u8ff0\u8fdb\u7a0b\u7684\u7ed3\u6784\u4f53 <code>struct proc</code> \u5305\u542b\u4e86 \u8fdb\u7a0b\u72b6\u6001 <code>state</code>\uff0cPID\uff0c\u9875\u8868\uff0c\u7528\u6237\u6808\u548c\u5185\u6838\u6808\u5730\u5740\u7b49\u4fe1\u606f\u3002</p> <p>\u5728\u5bf9\u7ed3\u6784\u4f53\u6307\u9488\u8bbf\u95ee\u5176\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u6211\u4eec\u4f7f\u7528 <code>-&gt;</code> \u64cd\u4f5c\u7b26\u3002 \u5728\u5bf9\u7ed3\u6784\u4f53\u8bbf\u95ee\u5176\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u6211\u4eec\u4f7f\u7528 <code>.</code> \u64cd\u4f5c\u7b26\u3002</p> <p>\u5728\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf <code>current_proc</code>\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u5411 <code>struct proc</code> \u7ed3\u6784\u4f53\u7684\u6307\u9488\uff1b\u6211\u4eec\u4e5f\u5b9a\u4e49\u4e86\u4e00\u4e2a <code>idle</code> \u53d8\u91cf\uff0c\u5b83\u7684\u7c7b\u578b\u662f <code>struct proc</code> \u7ed3\u6784\u4f53\u3002</p> <pre><code>struct proc *current_proc;\nstruct proc idle;\n\nvoid proc_init()\n{\n    current_proc = &amp;idle;\n}\n\nvoid test()\n{\n    current_proc-&gt;pid = 0x114514;\n}\n</code></pre> <p>\u5728\u5185\u5b58\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5c06\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\u6392\u5217\uff1a</p> <p></p> <p>\u5728 <code>proc_init</code> \u521d\u59cb\u5316\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u5c06 <code>idle</code> \u7684\u5730\u5740\u8d4b\u4e88 <code>current_proc</code>\uff08<code>&amp;</code> \u662f\u53d6\u5730\u5740\u7b26\uff09\u3002\u6b64\u65f6\uff0c<code>current_proc</code> \u7684\u503c\u5373\u662f <code>idle</code> \u53d8\u91cf\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p>\u4e3a\u4ec0\u4e48\u662f\u8d77\u59cb\u5730\u5740\uff1f</p> <p>\u8bb8\u591a\u4f53\u7cfb\u7ed3\u6784 (x86, ARM, RISC-V) \u5747\u5305\u542b Base displacement addressing (\u57fa\u5730\u5740 + \u504f\u79fb\u91cf) \u7684\u5bfb\u5740\u6a21\u5f0f\u3002 \u56e0\u4e3a\u7ed3\u6784\u4f53\u4e2d\u67d0\u4e2a\u53d8\u91cf\u76f8\u5bf9\u4e8e\u7ed3\u6784\u4f53\u57fa\u5730\u5740\u7684\u504f\u79fb\u91cf\u662f\u5728\u7f16\u8bd1\u671f\u5df2\u77e5\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67d0\u4e2a\u5bc4\u5b58\u5668\u4fdd\u5b58\u8be5\u7ed3\u6784\u4f53\u7684\u57fa\u5730\u5740\uff0c\u4f7f\u7528 ld/sw \u6307\u4ee4\u4e2d\u7684\u7acb\u5373\u6570\u504f\u79fb\u91cf\u8bbf\u95ee\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u3002</p> <p>\u6211\u4eec\u5c06\u4ece\u6c47\u7f16\u5c42\u9762\u4e86\u89e3\u5982\u4f55\u8fdb\u884c\u7ed3\u6784\u4f53\u8bbf\u95ee\uff1a</p> <pre><code>        current_proc-&gt;pid = 0x114514;\n    802013c4:   004bb717                auipc   a4,0x4bb\n    802013c8:   c4c70713                addi    a4,a4,-948 # 806bc010 &lt;current_proc&gt;\n    802013cc:   00073683                ld      a3,0(a4)\n    802013d0:   001147b7                lui     a5,0x114\n    802013d4:   51478793                addi    a5,a5,1300 # 114514\n    802013d8:   00f6a223                sw      a5,4(a3)\n</code></pre> <p>\u8fd9\u4e00\u4e32\u6c47\u7f16\u5bf9\u5e94\u7684\u662f <code>current_proc-&gt;pid = 0x114514;</code> \u8bed\u53e5\u3002</p> <p>\u524d\u4e24\u884c\u6c47\u7f16\u901a\u8fc7 auipc + addi \u8ba1\u7b97\u51fa\u6765\u4e86 <code>current_proc</code> \u8fd9\u4e2a\u53d8\u91cf\u7684\u5730\u5740\uff1a</p> <pre><code>    802013c4:   004bb717                auipc   a4,0x4bb\n    802013c8:   c4c70713                addi    a4,a4,-948 # 806bc010 &lt;current_proc&gt;\n</code></pre> <p>\u7136\u540e\uff0c\u5c06\u8be5\u5730\u5740\u5904\u7684\u503c\u8bfb\u53d6\u5230 a3 \u4e2d\u3002\u6b64\u65f6\uff0ca3 \u4e2d\u5b58\u653e\u7684\u5373\u662f\u67d0\u4e2a <code>struct proc</code> \u7ed3\u6784\u4f53\u7684\u57fa\u5730\u5740\u3002</p> <pre><code>    802013cc:   00073683                ld      a3,0(a4)\n</code></pre> <p>\u7136\u540e\uff0c\u901a\u8fc7 lui + addi \u6784\u9020\u7acb\u5373\u6570 0x114514\uff1a</p> <pre><code>    802013d0:   001147b7                lui     a5,0x114\n    802013d4:   51478793                addi    a5,a5,1300 # 114514\n</code></pre> <p>\u6700\u540e\uff0c\u5c06\u7acb\u5373\u6570 a5 \u5199\u5165 a3 + 4 \u7684\u5730\u5740\u5904\u3002\u8fd9\u91cc\u5373\u662f <code>struct proc</code> \u7ed3\u6784\u4f53\u4e2d\u7684 pid \u53d8\u91cf\u7684\u5730\u5740\u3002</p> <pre><code>    802013d8:   00f6a223                sw      a5,4(a3)\n</code></pre> <p>NULL-Pointer Dereference</p> <p>\u5f53\u6211\u4eec\u5c1d\u8bd5\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u7684\u53d8\u91cf\u65f6\uff0c\u5982\u679c\u7ed3\u6784\u4f53\u6307\u9488\u662f\u4e00\u4e2a\u7a7a\u6307\u9488\uff0c\u90a3\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f</p> <p>\u5728 <code>sw a5,4(a3)</code> \u65f6\uff0ca3 \u672c\u5e94\u8be5\u5b58\u50a8\u7740\u4e00\u4e2a\u5408\u6cd5\u5730\u5740\uff1b\u4f46\u662f\uff0c\u5f53\u5b83\u7684\u503c\u662f\u7a7a\u6307\u9488 0x0 \u65f6\uff0cCPU \u5c31\u4f1a\u5bf9 0x00000004 \u8fd9\u4e2a\u5730\u5740\u53d1\u8d77\u5199\u5165\uff0c\u8fd9\u4f1a\u89e6\u53d1 CPU \u7684\u8bbf\u5b58\u5f02\u5e38\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u7ec8\u6b62\u3002</p> <p>\u73b0\u5728\uff0c\u4f60\u80fd\u731c\u5230\u4e3a\u4ec0\u4e48\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u5d29\u6e83 \"The instruction at 0xdeadbeef referenced memory at 0x00000008. The memory could not be written.\" \u4e86\u5417\uff1f</p>"},{"location":"zh/lab/lab3/","title":"\u8fd0\u884c\u88f8\u673a\u7a0b\u5e8f : xv6-lab1","text":"<p>\u5f53\u6211\u4eec\u5728\u4e3a Linux \u73af\u5883\u7f16\u7a0b\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u53ea\u9700\u8981\u8003\u8651\u7a0b\u5e8f\u7684\u903b\u8f91\u3001\u5e76\u4f7f\u7528\u548c libc \u51fd\u6570\u548c\u5176\u5c01\u88c5\u7684\u7cfb\u7edf\u8c03\u7528\u5b8c\u6210\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u548c\u7528\u6237\u7684\u4ea4\u4e92\uff1b\u4f8b\u5982\u4f7f\u7528 printf \u548c scanf \u5728\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u6d41\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u7684\u7528\u6237\u6001\u8fd0\u884c\u73af\u5883\u662f\u7531 libc \u63d0\u4f9b\u7684\uff0c\u800c\u5185\u6838\u662f\u7531 Linux Kernel \u63d0\u4f9b\u7684\u3002</p> <p>\u5f53\u6211\u4eec\u5728\u5199\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u5e76\u6ca1\u6709 Linux \u6216\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u8fd0\u884c\u73af\u5883\uff0c\u800c\u662f\u76f4\u63a5\u4e0e CPU \u548c\u786c\u4ef6\u4ea4\u4e92\uff0c\u8fd9\u79cd\u7a0b\u5e8f\u88ab\u79f0\u4e3a\u88f8\u673a\u7a0b\u5e8f (bare-metal program)\u3002</p> <p>\u4ec0\u4e48\u662f\u88f8\u673a\u7a0b\u5e8f</p> <p>A bare-metal program is a type of software that runs directly on the hardware of a device without relying on an underlying operating system (OS). Essentially, it's code that interacts with the hardware at the most fundamental level, controlling the processor, memory, input/output (I/O) devices, and other components directly.</p> <p>\u5728\u6211\u4eec\u7684 xv6 \u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u5728 RISC-V \u4f53\u7cfb\u67b6\u6784\u4e0a\u7f16\u5199\u64cd\u4f5c\u7cfb\u7edf\u7a0b\u5e8f\u3002</p>"},{"location":"zh/lab/lab3/#privilege-level","title":"\u7279\u6743\u7ea7 (Privilege Level)","text":"<p>Privilege Levels (riscv-privileged.pdf)</p> <p>\u7279\u6743\u7ea7\uff08Privilege Level\uff09\u662f\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u7528\u4e8e\u5b9a\u4e49\u4e0d\u540c\u8fdb\u7a0b\u6216\u7528\u6237\u5728\u7cfb\u7edf\u4e2d\u6240\u62e5\u6709\u7684\u8bbf\u95ee\u63a7\u5236\u548c\u6743\u9650\u7684\u6982\u5ff5\u3002 \u7279\u6743\u7ea7\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u4fdd\u62a4\u7cfb\u7edf\u8d44\u6e90\u3001\u786e\u4fdd\u5b89\u5168\u6027\uff0c\u5e76\u6839\u636e\u53ef\u4fe1\u5ea6\u548c\u529f\u80fd\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u9694\u79bb\u3002</p> <p>At any time, a RISC-V hardware thread (hart) is running at some privilege level encoded as a mode in one or more CSRs (control and status registers). </p> <p>Three RISC-V privilege levels are currently defined as shown in Table 1.1. </p> <p>Privilege levels are used to provide protection between different components of the software stack, and attempts to perform operations not permitted by the current privilege mode will cause an exception to be raised. </p> <p>These exceptions will normally cause traps into an underlying execution environment.</p> <p>\u7279\u6743\u7ea7\u662fCPU\u8fd0\u884c\u65f6\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u72b6\u6001\uff0c\u5b83\u8868\u793a\u4e86\u5f53\u524d\u8fd0\u884c\u7684\u7a0b\u5e8f\u6709\u591a\u9ad8\u7684\u7279\u6743\u6765\u6267\u884c\u4ee3\u7801\u3002\u4f8b\u5982\uff0c\u4f4e\u7279\u6743\u72b6\u6001\u4e0d\u5141\u8bb8\u8bbf\u95ee\u9ad8\u7279\u6743\u7684\u5185\u5b58\u548cCSR\u5bc4\u5b58\u5668\uff1b\u4f46\u662f\u9ad8\u7279\u6743\u7ea7\u5141\u8bb8CPU\u8fd0\u884c\u5728\u4f4e\u7279\u6743\u7ea7\u65f6\uff0c\u4e3b\u52a8\u6216\u88ab\u52a8\u5730\u5207\u6362\u81f3\u9ad8\u7279\u6743\u7ea7\u5e76\u6267\u884c\u9884\u5b9a\u7684\u4ee3\u7801\u3002</p> <p>\u7279\u6743\u7ea7\u7684\u533a\u5206\u662f\u5728 CPU \u786c\u4ef6\u7535\u8def\u4e0a\u5b9e\u73b0\u7684\u3002\u5728 RISC-V \u4e0a\uff0c\u7279\u6743\u7ea7\u4f7f\u7528 2bit \u8fdb\u884c\u533a\u5206\uff0c\u5206\u4e3a M mode\uff0cS mode\uff0c\u548c U mode\u3002</p> <p></p> <p>The machine level has the highest privileges and is the only mandatory privilege level for a RISC-V hardware platform. Code run in machine-mode (M-mode) is usually inherently trusted, as it has low-level access to the machine implementation. M-mode can be used to manage secure execution environments on RISC-V. User-mode (U-mode) and supervisor-mode (S-mode) are intended for conventional application and operating system usage respectively.</p> <p>M mode \u4e3a RISC-V \u67b6\u6784\u4e2d\u7684\u6700\u9ad8\u7279\u6743\uff0c\u4e00\u822c\u8fd0\u884c OpenSBI \u56fa\u4ef6\u7a0b\u5e8f\uff0c\u62e5\u6709\u5bf9\u7269\u7406\u5185\u5b58\u7684\u76f4\u63a5\u8bbf\u95ee\uff1bS mode \u662f\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u7684\u7279\u9009\u7b49\u7ea7\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u865a\u62df\u5185\u5b58\uff1bU mode \u662f\u4e3a\u7528\u6237\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u7279\u6743\u7b49\u7ea7\uff0c\u62e5\u6709\u6700\u5c0f\u7684\u7279\u6743\uff0c\u4e5f\u9002\u7528\u4e8e\u865a\u62df\u5185\u5b58\u3002</p> <p>\u5728\u88f8\u673a\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5b8c\u6210\u5bf9 CPU \u72b6\u6001\u7684\u521d\u59cb\u5316\uff0c\u5305\u62ec\u4e86\u9875\u8868\u3001\u4e2d\u65ad\u7b49\u57fa\u672c\u529f\u80fd\u3002 \u8fd9\u4e9b CPU \u7684\u72b6\u6001\u662f\u901a\u8fc7 CSR (Control and Status Registers) \u63a7\u5236\u7684\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e00\u822c\u53ea\u5141\u8bb8\u9ad8\u7279\u6743\u7ea7\u7684\u7528\u6237\u8fdb\u884c\u8bbf\u95ee\u548c\u4fee\u6539\u3002</p>"},{"location":"zh/lab/lab3/#aarch64-x86","title":"AArch64 &amp; x86","text":"<p>\u73b0\u4ee3\u7684\u6307\u4ee4\u96c6\u67b6\u6784\u5747\u6709\u8bbe\u7f6e\u4e0d\u540c\u7684\u7279\u6743\u7ea7\u3002</p> <p>\u79fb\u52a8\u8bbe\u5907\u4e0a\u6700\u5e38\u4f7f\u7528\u7684 arm64 (AArch64) CPU \u67b6\u6784\u5b9a\u4e49\u4e86\u56db\u79cd\u7279\u6743\u7ea7(Exception Levels)\uff0c\u4ece\u4f4e\u5230\u9ad8\uff1a EL0\u3001EL1\u3001EL2\u548cEL3\u3002 \u4e0e RISC-V \u67b6\u6784\u7c7b\u4f3c\uff08\u5176\u5b9e\u662f RISC-V \u6284 AArch64 \u7684\uff09\uff0c\u6700\u9ad8\u7279\u6743\u7ea7 EL3 \u8fd0\u884c\u6700\u5e95\u5c42\u7684\u56fa\u4ef6(Secure Monitor)\uff0cEL1 \u7279\u6743\u7ea7\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf(OS)\uff0cEL0 \u7279\u6743\u7ea7\u8fd0\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u800cEL2\u7279\u6743\u7ea7\u8fd0\u884c\u865a\u62df\u673a\u7a0b\u5e8f(Hypervisor)\u3002</p> <p>\u800c x86 (IA32 &amp; AMD64) \u67b6\u6784\u5b9a\u4e49\u7279\u6743\u7ea7\u4e3a\u56db\u4e2a Ring \uff1aRing 0 \u4ee3\u8868\u6700\u9ad8\u7279\u6743\u7ea7\uff0c\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf\uff1b\u800c Ring 3 \u4ee3\u8868\u6700\u4f4e\u7279\u6743\u7ea7\uff0c\u8fd0\u884c\u7528\u6237\u7a0b\u5e8f\u3002\u901a\u5e38\u6765\u8bf4\uff0cx86\u67b6\u6784\u4e0a\u53ea\u4f1a\u4f7f\u7528\u5230 Ring 0 \u548c Ring 3 \u4e24\u79cd\u7279\u6743\u7ea7\u3002</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u8981\u5b9a\u4e49\u7279\u6743\u7ea7</p> <p>\u901a\u8fc7\u5bf9\u6bd4\u4e0a\u8ff0\u4e09\u79cd\u4f53\u7cfb\u7ed3\u6784\u5b9a\u4e49\u7684\u7279\u6743\u7ea7\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7528\u6237\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u73af\u5883\u88ab\u4e25\u683c\u5207\u5206\uff0c\u8fd9\u4f7f\u5f97\u64cd\u4f5c\u7cfb\u7edf\u80fd\u6b63\u786e\u9694\u79bb\u7528\u6237\u7a0b\u5e8f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7528\u6237\u7a0b\u5e8f\u4e4b\u95f4\u7684\u8bbf\u95ee\u3002 </p>"},{"location":"zh/lab/lab3/#_1","title":"\u8fd0\u884c\u73af\u5883","text":"<p>\u5728 RISC-V \u7684\u4e09\u4e2a\u7279\u6743\u7ea7\u4e0a\uff0cRISC-V\u67b6\u6784\u5b9a\u4e49\u4e86\u4e09\u79cd\u8fd0\u884c\u72b6\u6001\uff1a\u5206\u522b\u662f\u56fa\u4ef6(M mode)\u3001\u64cd\u4f5c\u7cfb\u7edf(S mode)\u548c\u7528\u6237\u6001(U mode)\u3002</p> <p>\u5728 RISC-V \u67b6\u6784\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf (Supervisor) \u5411\u5e94\u7528\u7a0b\u5e8f (Application) \u63d0\u4f9b\u7684\u8fd0\u884c\u73af\u5883\u88ab\u79f0\u4e3a ABI (Application Binary Interface)\uff0c\u800c\u56fa\u4ef6 (supervisor execution environment) \u4e3a\u64cd\u4f5c\u7cfb\u7edf (Supervisor) \u63d0\u4f9b\u7684\u8fd0\u884c\u73af\u5883\u5219\u88ab\u79f0\u4e3a Supervisor Binary Interface (SBI)\u3002</p> <p>\u56fa\u4ef6 (OpenSBI) \u4e2d\u62bd\u8c61\u4e86\u5bf9\u5e95\u5c42\u786c\u4ef6\u7684\u8bbf\u95ee\uff0c\u5e76\u901a\u8fc7\u7c7b\u4f3c syscall \u7684\u65b9\u5f0f\u4e3a S Mode \u7684\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e9b\u57fa\u672c\u7684\u8bbf\u95ee\u786c\u4ef6\u7684\u63a5\u53e3\uff0c\u5176\u4e2d\u5c31\u5305\u542b\u4e86\u57fa\u672c\u7684\u4e32\u53e3\u8f93\u5165\u8f93\u51fa\u51fd\u6570\uff0c<code>sbi_console_putchar</code> \u548c <code>sbi_console_getchar</code>\u3002</p> <p></p>"},{"location":"zh/lab/lab3/#_2","title":"\u7b2c\u4e00\u4e2a\u88f8\u673a\u7a0b\u5e8f","text":"<p>xv6-lab1 \u4ee3\u7801</p> <p>https://github.com/yuk1i/SUSTech-OS-2025/tree/xv6-lab1</p> <p>\u5728 git clone \u4e0a\u8ff0\u4ee3\u7801\u4ed3\u5e93\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u8fd0\u884c <code>make</code> \u6765\u7f16\u8bd1 xv6 \u5185\u6838\uff1a</p> <pre><code>$ /d/o/SUSTech-OS-2025 (xv6-lab1)&gt; make\nriscv64-unknown-elf-gcc -fPIE -fno-pic -fno-plt -Wall -Wno-unused-variable -Werror -O -fno-omit-frame-pointer -ggdb -march=rv64g -MD -mcmodel=medany -ffreestanding -fno-common -nostdlib -mno-relax -Ios -std=gnu17 -fno-stack-protector -D LOG_LEVEL_ERROR -c os/console.c -o build/os/console.o\nriscv64-unknown-elf-gcc -fPIE -fno-pic -fno-plt -Wall -Wno-unused-variable -Werror -O -fno-omit-frame-pointer -ggdb -march=rv64g -MD -mcmodel=medany -ffreestanding -fno-common -nostdlib -mno-relax -Ios -std=gnu17 -fno-stack-protector -D LOG_LEVEL_ERROR -c os/main.c -o build/os/main.o\nriscv64-unknown-elf-gcc -fPIE -fno-pic -fno-plt -Wall -Wno-unused-variable -Werror -O -fno-omit-frame-pointer -ggdb -march=rv64g -MD -mcmodel=medany -ffreestanding -fno-common -nostdlib -mno-relax -Ios -std=gnu17 -fno-stack-protector -D LOG_LEVEL_ERROR -c os/printf.c -o build/os/printf.o\nriscv64-unknown-elf-gcc -fPIE -fno-pic -fno-plt -Wall -Wno-unused-variable -Werror -O -fno-omit-frame-pointer -ggdb -march=rv64g -MD -mcmodel=medany -ffreestanding -fno-common -nostdlib -mno-relax -Ios -std=gnu17 -fno-stack-protector -D LOG_LEVEL_ERROR -c os/sbi.c -o build/os/sbi.o\nriscv64-unknown-elf-gcc -fPIE -fno-pic -fno-plt -Wall -Wno-unused-variable -Werror -O -fno-omit-frame-pointer -ggdb -march=rv64g -MD -mcmodel=medany -ffreestanding -fno-common -nostdlib -mno-relax -Ios -std=gnu17 -fno-stack-protector -D LOG_LEVEL_ERROR -c os/string.c -o build/os/string.o\nriscv64-unknown-elf-gcc -fPIE -fno-pic -fno-plt -Wall -Wno-unused-variable -Werror -O -fno-omit-frame-pointer -ggdb -march=rv64g -MD -mcmodel=medany -ffreestanding -fno-common -nostdlib -mno-relax -Ios -std=gnu17 -fno-stack-protector -D LOG_LEVEL_ERROR -c os/entry.S -o build/os/entry.o\nriscv64-unknown-elf-ld -z max-page-size=4096 -T os/kernel.ld -o build/kernel build/os/console.o build/os/main.o build/os/printf.o build/os/sbi.o build/os/string.o build/os/entry.o\nriscv64-unknown-elf-objcopy -O binary build/kernel build/kernel.bin\nriscv64-unknown-elf-objdump -S build/kernel &gt; build/kernel.asm\nriscv64-unknown-elf-objdump -t build/kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$/d' &gt; build/kernel.sym\nBuild kernel done\n</code></pre> <p>\u4ec0\u4e48\u662f make, Makefile</p> <p>Makefile \u662f\u4e00\u79cd\u63cf\u8ff0\u7f16\u8bd1\u6d41\u7a0b\u7684\u6587\u4ef6\uff0c\u800c <code>make</code> \u547d\u4ee4\u5219\u6309\u7167 Makefile \u4e2d\u6307\u5b9a\u7684\u6d41\u7a0b\u8fdb\u884c\u7f16\u8bd1\u3002</p> <p>\u63a8\u8350\u89c2\u770b\uff1ahttps://www.bilibili.com/video/BV188411L7d2</p>"},{"location":"zh/lab/lab3/#_3","title":"\u7f16\u8bd1\u94fe\u63a5\u53c2\u6570","text":"<p>gcc \u662f\u6211\u4eec\u5e38\u7528\u7684 C \u8bed\u8a00\u7f16\u8bd1\u5668\uff0c\u800c <code>riscv64-unknown-elf-gcc</code> \u5219\u8868\u793a\u4f7f\u7528 RISC-V 64 \u4f4d\u3001\u9762\u5411\u672a\u77e5\u5e73\u53f0\u3001\u4ea7\u51fa ELF \u683c\u5f0f\u7684 gcc \u5957\u4ef6\u3002</p> <p>\u5269\u4e0b\u7684\u7f16\u8bd1\u53c2\u6570\u6211\u4eec\u53ef\u4ee5\u5206\u5f00\u7406\u89e3\uff1a</p> <ul> <li> <p><code>-march=rv64g -mcmodel=medany -mno-relax</code></p> <p>\u8fd9\u8868\u793a\u6211\u4eec\u7684\u76ee\u6807\u67b6\u6784\u662f rv64g\uff0c\u5bfb\u5740\u6a21\u578b\u662f <code>medany</code>\uff0c\u5e76\u4e14\u94fe\u63a5\u5668\u4e0d\u8981\u8fdb\u884c Relax\u3002</p> <p>See also: https://gcc.gnu.org/onlinedocs/gcc/RISC-V-Options.html</p> </li> <li> <p><code>-ffreestanding -fno-common -nostdlib</code></p> <p>\u8fd9\u8868\u793a\u6211\u4eec\u4e0d\u4f7f\u7528\u6807\u51c6\u5e93\u51fd\u6570\uff0c\u4e5f\u4e0d\u5047\u8bbe\u4e00\u4e9b\u901a\u7528\u51fd\u6570\uff08\u5982 memset\uff09\u7684\u5b9a\u4e49\u4e0e\u6807\u51c6\u51fd\u6570\u5e93\u5b9a\u4e49\u4e00\u81f4\u3002</p> </li> <li> <p><code>-fno-pie -no-pie -fno-plt -fno-omit-frame-pointer -fno-stack-protector</code></p> <p>\u8fd9\u8868\u793a\u751f\u6210\u7684 ELF \u6587\u4ef6\u4e0d\u8981\u4f7f\u7528\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801 (Position-Independent Executable)\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u5bfc\u81f4\u751f\u6210 got \u548c plt \u6bb5\uff0c\u8fd9\u662f\u5185\u6838\u4e2d\u4e0d\u9700\u8981\u7684\u3002 \u5e76\u4e14\uff0c\u4fdd\u7559 frame-pointer\uff0c\u7981\u7528\u6808\u4fdd\u62a4\u3002</p> </li> <li> <p><code>-Wall -Wno-unused-variable -Werror -ggdb</code></p> <p>\u8fd9\u8868\u793a\u663e\u793a\u6240\u6709\u8b66\u544a\u3001\u4f46\u662f\u4e0d\u63d0\u793a\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u8b66\u544a\u3001\u5e76\u5c06\u6240\u6709 warning \u5f53\u4f5c error\u3002\u6700\u540e <code>-ggdb</code> \u8868\u793a\u4f7f\u7528 gdb \u8c03\u8bd5\u3002</p> </li> <li> <p><code>-Ios -std=gnu17 -O2 -c os/entry.S -o build/os/entry.o</code></p> <p>\u8868\u793a\u4f7f\u7528 os \u76ee\u5f55\u4f5c\u4e3a include \u76ee\u5f55\uff0c\u4f7f\u7528 gnu17 C\u6807\u51c6\uff0c\u542f\u7528 O2 \u4f18\u5316\u3002</p> <p>\u7f16\u8bd1 (<code>-c</code>) \u539f\u6587\u4ef6 <code>os/entry.S</code>\uff0c\u8f93\u51fa\u5230 <code>build/os/entry.o</code> \u4e2d\u3002</p> </li> </ul> <p>ld \u8868\u793a\u94fe\u63a5\u5668\uff0c\u6211\u4eec\u4f7f\u7528 ld \u5c06\u6240\u6709\u7f16\u8bd1\u5668\u4ea7\u751f\u7684 .o \u6587\u4ef6\u94fe\u63a5\u4e3a\u6700\u7ec8\u7684 kernel ELF \u6587\u4ef6\u3002</p> <p><code>riscv64-unknown-elf-ld -z max-page-size=4096 -T os/kernel.ld -o build/kernel build/os/console.o build/os/main.o build/os/printf.o build/os/sbi.o build/os/string.o build/os/entry.o</code></p> <p>\u8fd9\u4e00\u4e32\u547d\u4ee4\u8868\u793a\uff1a</p> <ul> <li>\u4f7f\u7528 os/kernel.ld \u4f5c\u4e3a\u94fe\u63a5\u811a\u672c</li> <li>\u8f93\u51fa\u4e3a <code>build/kernel</code></li> <li>\u8f93\u5165\u4e3a\u6240\u6709 .o \u6587\u4ef6</li> </ul>"},{"location":"zh/lab/lab3/#linker-script","title":"Linker Script","text":"<p>\u7f16\u8bd1\u811a\u672c\u8868\u793a\uff1a\u94fe\u63a5\u5668\u5e94\u8be5\u5982\u4f55\u6392\u5217\u6240\u6709 .o \u6587\u4ef6\u4e2d\u7684\u6bb5\uff08Section\uff09\uff0c\u5373\u5185\u5b58\u5e03\u5c40 (Memory Layout)\uff0c\u5e76\u6307\u660e\u4ea7\u751f\u7684 ELF \u6587\u4ef6\u5e94\u8be5\u5982\u4f55\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d (Program Header)\u3002</p> <pre><code>OUTPUT_ARCH(riscv)\nENTRY(_entry)\nBASE_ADDRESS = 0x80200000;\n\nSECTIONS\n{\n    . = BASE_ADDRESS;\n    skernel = .;\n\n    s_text = .;\n    .text : {\n        *(.text.entry)\n        *(.text .text.*)\n        . = ALIGN(4K);\n        e_text = .;\n        s_trampolime = .;\n        *(trampsec)\n    }\n\n    . = ALIGN(4K);\n    s_rodata = .;\n    .rodata : {\n        *(.rodata .rodata.*)\n    }\n\n    . = ALIGN(4K);\n    e_rodata = .;\n    s_data = .;\n    .data : {\n        *(.data.apps)\n        *(.data .data.*)\n        *(.sdata .sdata.*)\n    }\n\n    . = ALIGN(4K);\n    e_data = .;\n    .bss : {\n        *(.bss.stack)\n        s_bss = .;\n        *(.bss .bss.*)\n        *(.sbss .sbss.*)\n    }\n\n    . = ALIGN(4K);\n    e_bss = .;\n    ekernel = .;\n\n    /DISCARD/ : {\n        *(.eh_frame)\n    }\n}\n</code></pre> <p>\u5f00\u5934\u7684 <code>OUTPUT_ARCH</code> \u8868\u793a\u751f\u6210\u7684 ELF \u6587\u4ef6\u9002\u7528\u4e0e RISC-V \u67b6\u6784\uff0c<code>ENTRY</code> \u8868\u793a ELF \u7684\u5165\u53e3\u70b9\u4e3a\u7b26\u53f7 <code>_entry</code>\u3002\u7136\u540e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5e38\u91cf\u4e3a <code>BASE_ADDRESS</code> \u4f7f\u5b83\u7b49\u4e8e 0x80200000\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u5185\u6838\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p>\u5728 <code>SECTIONS</code> \u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u5f53\u524d\u5730\u5740 (<code>.</code> \u7b26\u53f7) (\u60f3\u8c61\u94fe\u63a5\u5668\u6b63\u5728\u7ed9\u6240\u6709 section \u5b89\u6392\u4f4d\u7f6e) \u4e3a 0x80200000\uff0c\u5e76\u5bfc\u51fa <code>skernel</code> \u548c <code>s_text</code> \u7b26\u53f7\u7684\u503c\u4e3a\u5f53\u524d\u5730\u5740\u3002</p> <p>\u968f\u540e\uff0c\u6211\u4eec\u5b9a\u4e49 (.text) \u6bb5\uff0c\u8fd9\u901a\u5e38\u8868\u793a\u4ee3\u7801\u6bb5\uff1a</p> <pre><code>.text : {\n    *(.text.entry)\n    *(.text .text.*)\n    . = ALIGN(4K);\n    e_text = .;\n    s_trampolime = .;\n    *(trampsec)\n}\n</code></pre> <p>\u9996\u5148\u6392\u5217\u6240\u6709\u4f4d\u4e8e <code>.text.entry</code> \u7684\u7b26\u53f7\uff0c\u968f\u540e\u6392\u5217\u6240\u6709\u4f4d\u4e8e <code>.text</code> \u7684\u7b26\u53f7\u3002</p> <p>\u6211\u4eec\u5728 <code>.text</code> \u6bb5\u4e2d\u9996\u5148\u5305\u542b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684 Section <code>.text.entry</code>\uff0c\u8fd9\u4e2a section \u662f\u5728 <code>entry.S</code> \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\uff1a</p> <pre><code>    .section .text.entry\n    .globl _entry\n_entry:\n</code></pre> <p>\u6211\u4eec\u5728 <code>entry.S</code> \u6587\u4ef6\u4e2d\u6307\u5b9a <code>_entry</code> \u7b26\u53f7\u5e94\u8be5\u88ab\u653e\u7f6e\u5230 <code>.text.entry</code> \u6bb5\uff0c\u5e76\u5728\u94fe\u63a5\u811a\u672c\u4e2d\u6307\u5b9a\u8fd9\u4e2a\u6bb5\u4e3a\u5185\u6838\u7684\u5f00\u59cb\u5730\u5740\u3002\u8fd9\u6837\u6211\u4eec\u5373\u53ef\u786e\u4fdd _entry \u4f1a\u88ab\u653e\u7f6e\u5230\u5185\u6838\u8d77\u59cb\u5730\u5740\u3002\u5f53\u6211\u4eec\u542f\u52a8\u5185\u6838\u65f6\uff0c\u6211\u4eec\u4f1a\u4ece\u8fd9\u4e2a\u8d77\u59cb\u5730\u5740\u5f00\u59cb\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u6267\u884c\u4e86\u5185\u6838\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u7f16\u8bd1 <code>build/kernel</code> \u6765\u89c2\u5bdf\u8fd9\u4e00\u70b9\uff1a</p> <pre><code>$ /d/o/SUSTech-OS-2025 (xv6-lab1)&gt; llvm-objdump-19 -d build/kernel| less\nbuild/kernel:   file format elf64-littleriscv\n\nDisassembly of section .text:\n\n0000000080200000 &lt;skernel&gt;:\n80200000: 0000100f      fence.i\n80200004: 00007117      auipc   sp, 0x7\n80200008: ffc10113      addi    sp, sp, -0x4\n8020000c: 00000097      auipc   ra, 0x0\n80200010: 164080e7      jalr    0x164(ra) &lt;main&gt;\n</code></pre> <p>\u7136\u540e\uff0c\u5c06\u5f53\u524d\u5730\u5740\u5bf9\u9f50\u5230 4K \u8fb9\u754c\uff0c\u5bfc\u51fa <code>e_text</code> \u548c <code>s_trampolime</code> \u7b26\u53f7\uff0c\u6700\u540e\u6392\u5217\u4f4d\u4e8e <code>trampsec</code> \u7684\u7b26\u53f7\u3002</p> <p>\u5269\u4f59\u7684 <code>.rodata</code>, <code>.data</code> \u548c <code>.bss</code> \u5219\u8868\u793a\u6570\u636e\u6bb5\uff0c\u4f46\u662f\u7565\u6709\u4e0d\u540c\uff1a</p> <ul> <li><code>.rodata</code> \u8868\u793a\u53ea\u8bfb\u7684\u6570\u636e\u6bb5</li> <li><code>.data</code> \u8868\u793a\u53ef\u8bfb\u53ef\u5199\u7684\u6570\u636e\u6bb5</li> <li><code>.bss</code> \u8868\u793a\u5e94\u8be5\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u88ab\u6e050\u7684\u6570\u636e\u6bb5</li> </ul> <p>\u5f53\u7136\uff0c\u6240\u6709\u6570\u636e\u6bb5\u5747\u662f\u4e0d\u53ef\u6267\u884c\u7684\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>readelf</code> \u5de5\u5177\u89c2\u5bdf\u6700\u540e\u4ea7\u51fa\u7684 kernel ELF \u6587\u4ef6\uff1a</p> <pre><code>$ /d/o/SUSTech-OS-2025 (xv6-lab1)&gt; llvm-readelf-19 -a build/kernel\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              EXEC (Executable file)\n  Machine:                           RISC-V\n  Version:                           0x1\n  Entry point address:               0x80200000\n  Start of program headers:          64 (bytes into file)\n  Start of section headers:          29280 (bytes into file)\n  Flags:                             0x4, double-float ABI\n  Size of this header:               64 (bytes)\n  Size of program headers:           56 (bytes)\n  Number of program headers:         3\n  Size of section headers:           64 (bytes)\n  Number of section headers:         20\n  Section header string table index: 19\nThere are 20 section headers, starting at offset 0x7260:\n\nSection Headers:\n  [Nr] Name              Type            Address          Off    Size   ES Flg Lk Inf Al\n  [ 0]                   NULL            0000000000000000 000000 000000 00      0   0  0\n  [ 1] .text             PROGBITS        0000000080200000 001000 001000 00  AX  0   0  4\n  [ 2] .rodata           PROGBITS        0000000080201000 002000 000181 00   A  0   0  8\n  [ 3] .srodata          PROGBITS        0000000080201188 002188 000048 00   A  0   0  8\n  [ 4] .data             PROGBITS        0000000080202000 003000 000008 00  WA  0   0  8\n  [ 5] .bss              NOBITS          0000000080203000 003008 004000 00  WA  0   0  1\n  [ 6] .debug_info       PROGBITS        0000000000000000 003008 0010a1 00      0   0  1\n  [ 7] .debug_abbrev     PROGBITS        0000000000000000 0040a9 0006e5 00      0   0  1\n  [ 8] .debug_loclists   PROGBITS        0000000000000000 00478e 0004f3 00      0   0  1\n  [ 9] .debug_aranges    PROGBITS        0000000000000000 004c90 000130 00      0   0 16\n  [10] .debug_line       PROGBITS        0000000000000000 004dc0 001003 00      0   0  1\n  [11] .debug_str        PROGBITS        0000000000000000 005dc3 0003b0 01  MS  0   0  1\n  [12] .debug_line_str   PROGBITS        0000000000000000 006173 0000e4 01  MS  0   0  1\n  [13] .comment          PROGBITS        0000000000000000 006257 00001b 01  MS  0   0  1\n  [14] .riscv.attributes RISCV_ATTRIBUTES 0000000000000000 006272 000052 00      0   0  1\n  [15] .debug_frame      PROGBITS        0000000000000000 0062c8 0004b0 00      0   0  8\n  [16] .debug_rnglists   PROGBITS        0000000000000000 006778 00007c 00      0   0  1\n  [17] .symtab           SYMTAB          0000000000000000 0067f8 000720 18     18  32  8\n  [18] .strtab           STRTAB          0000000000000000 006f18 000273 00      0   0  1\n  [19] .shstrtab         STRTAB          0000000000000000 00718b 0000d5 00      0   0  1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  R (retain), p (processor specific)\n\nElf file type is EXEC (Executable file)\nEntry point 0x80200000\nThere are 3 program headers, starting at offset 64\n\nProgram Headers:\n  Type           Offset   VirtAddr           PhysAddr           FileSiz  MemSiz   Flg Align\n  ATTRIBUTES     0x006272 0x0000000000000000 0x0000000000000000 0x000052 0x000000 R   0x1\n  LOAD           0x001000 0x0000000080200000 0x0000000080200000 0x0011d0 0x0011d0 R E 0x1000\n  LOAD           0x003000 0x0000000080202000 0x0000000080202000 0x000008 0x005000 RW  0x1000\n\nSection to Segment mapping:\n  Segment Sections...\n   00     .riscv.attributes \n   01     .text .rodata .srodata \n   02     .data .bss \n   None   .debug_info .debug_abbrev .debug_loclists .debug_aranges .debug_line .debug_str .debug_line_str .comment .debug_frame .debug_rnglists .symtab .strtab .shstrtab \n</code></pre> <ul> <li>\u6700\u7ec8\u7684\u6587\u4ef6\u7c7b\u578b\u4e3a\uff1a<code>Type: EXEC (Executable file)</code></li> <li>\u5165\u53e3\u5730\u5740\u4e3a\uff1a <code>Entry point address: 0x80200000</code></li> <li>\u4e00\u5171\u6709 19 \u4e2a Sections\uff1a<ul> <li>Sections\u6709\u81ea\u5df1\u7684 Flags,\u5176\u4e2d A \u8868\u793a\u8fd9\u4e00\u4e2a Section \u5728\u52a0\u8f7d\u65f6\u5e94\u8be5\u88ab\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0cW \u8868\u793a\u53ef\u4ee5\u5199\u5165\uff0cX \u8868\u793a\u53ef\u4ee5\u6267\u884c\u3002</li> </ul> </li> <li>\u4e00\u5171\u6709 3 \u4e2a Program Headers\uff0c\u5176\u4e2d\u6709\u4e24\u4e2a LOAD:<ul> <li>\u7b2c\u4e00\u4e2a LOAD \u8868\u793a\uff1a<ul> <li>\u5728\u865a\u62df\u5730\u5740 (VirtAddr) 0x80200000\u5904\uff0c\u6620\u5c04\u7269\u7406\u5730\u5740 (PhysAddr) 0x80200000\uff0c\u5206\u914d 0x0011d0 \u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4 (MemSiz)\uff0c\u8be5\u5185\u5b58\u6bb5\u7684\u6743\u9650\u4e3a RE (Read &amp; Executable)\u3002</li> <li>\u4ece\u8be5 ELF \u6587\u4ef6\u7684 (Offset) 0x001000 \u5904\u590d\u5236 0x0011d0 \u5b57\u8282 (FileSiz) \u5230\u4e0a\u8ff0\u5185\u5b58\u7a7a\u95f4\u3002</li> </ul> </li> <li>\u7b2c\u4e8c\u4e2a LOAD \u8868\u793a\uff1a<ul> <li>\u5728\u865a\u62df\u5730\u5740 0x80202000 \u5904\uff0c\u6620\u5c04\u7269\u7406\u5730\u5740 0x80202000\uff0c\u5206\u914d 0x005000 \u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8be5\u5185\u5b58\u6bb5\u6743\u9650\u4e3a RW (Read &amp; Write)\u3002</li> <li>\u4ece\u8be5 ELF \u6587\u4ef6\u7684 0x3000 \u5904\uff0c\u590d\u5236 0x0008 \u5b57\u8282\u5230\u8be5\u5185\u5b58\u6bb5\u3002</li> </ul> </li> </ul> </li> <li>\u5728 <code>Section to Segment mapping:</code> \u5904\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff1a<ul> <li>\u7b2c\u4e00\u4e2a Program Headers \u5305\u542b .text, .rodata \u548c .srodata \u4e09\u4e2a Sections\u3002</li> <li>\u7b2c\u4e8c\u4e2a Program Headers \u5305\u542b .data \u548c .bss \u6bb5\u3002</li> </ul> </li> </ul> <p>\u95ee\u9898 1</p> <p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7b2c\u4e00\u4e2a LOAD \u7684 FileSiz \u548c MemSiz \u662f\u76f8\u540c\u7684\uff0c\u800c\u7b2c\u4e8c\u4e2a\u662f\u4e0d\u540c\u7684\u3002</p> <p>\u8bf7\u4f60\u731c\u6d4b\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\uff1f</p>"},{"location":"zh/lab/lab3/#xx","title":"XX\uff0c\u542f\u52a8\uff01","text":"<p>\u5728 <code>make</code> \u7f16\u8bd1\u5185\u6838\u6210\u529f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>make run</code> \u8c03\u7528 qemu \u6765\u8fd0\u884c\u6211\u4eec\u7684 xv6-lab1 \u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p><code>make run</code> \u4f1a\u8c03\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a<code>qemu-system-riscv64 -nographic -machine virt -cpu rv64,svadu=off -m 512 -kernel build/kernel</code>\uff0c\u8fd9\u8868\u793a\uff1a</p> <ul> <li>\u4f7f\u7528 <code>qemu-system-riscv64</code> \u6a21\u62df\u4e00\u4e2a RISC-V 64\u4f4d CPU</li> <li><code>-nographic</code>\uff1a\u7981\u7528\u56fe\u5f62\u8f93\u51fa</li> <li><code>-machine virt</code>\uff1a\u4f7f\u7528 <code>virt</code> \u673a\u5668\u6a21\u578b</li> <li><code>-cpu rv64,svadu=off</code>\uff1a\u4f7f\u7528 riscv64 \u4f4d CPU,\u5e76\u7981\u7528 svadu \u7279\u6027</li> <li><code>-m 512</code>\uff1a\u6307\u5b9a\u5185\u5b58\u5927\u5c0f 512MiB</li> <li><code>-kernel build/kernel</code>\uff1a\u6307\u5b9a\u52a0\u8f7d\u7684\u5185\u6838\u6587\u4ef6\u4e3a build/kernel</li> </ul> <pre><code>$ /d/o/SUSTech-OS-2025 (xv6-lab1)&gt; make run\nqemu-system-riscv64 -nographic -machine virt -cpu rv64,svadu=off -m 512 -kernel build/kernel \n\nOpenSBI v1.5\n   ____                    _____ ____ _____\n  / __ \\                  / ____|  _ \\_   _|\n | |  | |_ __   ___ _ __ | (___ | |_) || |\n | |  | | '_ \\ / _ \\ '_ \\ \\___ \\|  _ &lt; | |\n | |__| | |_) |  __/ | | |____) | |_) || |_\n  \\____/| .__/ \\___|_| |_|_____/|____/_____|\n        | |\n        |_|\n\nPlatform Name             : riscv-virtio,qemu\nPlatform Features         : medeleg\nPlatform HART Count       : 1\nPlatform IPI Device       : aclint-mswi\nPlatform Timer Device     : aclint-mtimer @ 10000000Hz\nPlatform Console Device   : uart8250\nPlatform HSM Device       : ---\nPlatform PMU Device       : ---\nPlatform Reboot Device    : syscon-reboot\nPlatform Shutdown Device  : syscon-poweroff\nPlatform Suspend Device   : ---\nPlatform CPPC Device      : ---\nFirmware Base             : 0x80000000\nFirmware Size             : 327 KB\nFirmware RW Offset        : 0x40000\nFirmware RW Size          : 71 KB\nFirmware Heap Offset      : 0x49000\nFirmware Heap Size        : 35 KB (total), 2 KB (reserved), 11 KB (used), 21 KB (free)\nFirmware Scratch Size     : 4096 B (total), 416 B (used), 3680 B (free)\nRuntime SBI Version       : 2.0\n\nDomain0 Name              : root\nDomain0 Boot HART         : 0\nDomain0 HARTs             : 0*\nDomain0 Region00          : 0x0000000000100000-0x0000000000100fff M: (I,R,W) S/U: (R,W)\nDomain0 Region01          : 0x0000000010000000-0x0000000010000fff M: (I,R,W) S/U: (R,W)\nDomain0 Region02          : 0x0000000002000000-0x000000000200ffff M: (I,R,W) S/U: ()\nDomain0 Region03          : 0x0000000080040000-0x000000008005ffff M: (R,W) S/U: ()\nDomain0 Region04          : 0x0000000080000000-0x000000008003ffff M: (R,X) S/U: ()\nDomain0 Region05          : 0x000000000c400000-0x000000000c5fffff M: (I,R,W) S/U: (R,W)\nDomain0 Region06          : 0x000000000c000000-0x000000000c3fffff M: (I,R,W) S/U: (R,W)\nDomain0 Region07          : 0x0000000000000000-0xffffffffffffffff M: () S/U: (R,W,X)\nDomain0 Next Address      : 0x0000000080200000\nDomain0 Next Arg1         : 0x000000009fe00000\nDomain0 Next Mode         : S-mode\nDomain0 SysReset          : yes\nDomain0 SysSuspend        : yes\n\nBoot HART ID              : 0\nBoot HART Domain          : root\nBoot HART Priv Version    : v1.12\nBoot HART Base ISA        : rv64imafdch\nBoot HART ISA Extensions  : sstc,zicntr,zihpm,zicboz,zicbom,sdtrig\nBoot HART PMP Count       : 16\nBoot HART PMP Granularity : 2 bits\nBoot HART PMP Address Bits: 54\nBoot HART MHPM Info       : 16 (0x0007fff8)\nBoot HART Debug Triggers  : 2 triggers\nBoot HART MIDELEG         : 0x0000000000001666\nBoot HART MEDELEG         : 0x0000000000f0b509\n\nclean bss: 0x0000000080207000 - 0x0000000080207000\nKernel booted.\nHello World!\nsysregs:\nsstatus : 0x8000000200006000\nscause  : 0x0000000000000000\nsepc    : 0x0000000000000000\nstval   : 0x0000000000000000\nsip     : 0x0000000000000000\nsie     : 0x0000000000000000\nsatp    : 0x0000000000000000\n</code></pre> <p>QEMU \u542f\u52a8\u540e\u4f1a\u9996\u5148\u52a0\u8f7d OpenSBI\uff0c\u8fd9\u662f\u8fd0\u884c\u5728 M mode \u7684\u56fa\u4ef6\u3002\u968f\u540e\uff0cOpenSBI \u6307\u5b9a\u4e0b\u4e00\u9636\u6bb5\u7684\u542f\u52a8\u662f\u6211\u4eec\u7684\u5185\u6838\uff1a</p> <pre><code>Domain0 Next Address      : 0x0000000080200000\nDomain0 Next Arg1         : 0x000000009fe00000\nDomain0 Next Mode         : S-mode\n</code></pre> <p>\u5728 OpenSBI \u521d\u59cb\u5316\u5b8c\u6210\u540e\uff0cOpenSBI\u4f1a\u964d\u7ea7\u5230 S-mode \u5e76\u5c06 PC \u6307\u9488\u6307\u5411\u6211\u4eec\u7684\u5185\u6838\u8d77\u59cb\u5730\u5740 0x80200000\u3002\u8be5\u5730\u5740\u4e0a\u4fdd\u5b58\u7740\u5185\u6838\u7684\u7b2c\u4e00\u4e2a\u5165\u53e3 _entry \u7684\u4ee3\u7801\uff1a</p> <pre><code>80200000: 0000100f      fence.i\n80200004: 00007117      auipc   sp, 0x7\n80200008: ffc10113      addi    sp, sp, -0x4\n8020000c: 00000097      auipc   ra, 0x0\n80200010: 164080e7      jalr    0x164(ra) &lt;main&gt;\n</code></pre> <p>\u6e90\u4ee3\u7801\uff1a</p> <pre><code>    .section .text.entry\n    .globl _entry\n_entry:\n    fence.i\n\n    lla sp, boot_stack_top\n    call main\n\n    .section .bss.stack\n    .globl boot_stack\nboot_stack:\n    .space 4096 * 4\n    .globl boot_stack_top\nboot_stack_top:\n</code></pre> <ul> <li>\u9996\u5148\u6267\u884c fence.i \u6307\u4ee4\uff0c\u6211\u4eec\u6682\u4e14\u4e0d\u9700\u8981\u7406\u89e3\u8fd9\u4e00\u6761\u6307\u4ee4\u7684\u4f5c\u7528\u3002</li> <li>\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>auipc</code> \u548c <code>addi</code> \u6307\u4ee4\uff0c\u5c06\u6808\u6307\u9488\u6307\u5411 <code>boot_stack_top</code>\uff0c\u8fd9\u662f\u6211\u4eec\u63d0\u524d\u4e3a\u7b2c\u4e00\u4e2a\u5185\u6838\u5165\u53e3\u5f00\u8f9f\u7684\u6808\u3002</li> <li>\u6700\u540e\uff0c\u6211\u4eec\u901a\u8fc7 <code>auipc</code> \u548c <code>jr</code> \u6307\u4ee4\uff0c\u8df3\u8f6c\u5230 main \u51fd\u6570\u7ee7\u7eed\u6267\u884c\u3002</li> </ul> <p>\u4e3a\u4ec0\u4e48\u9700\u8981\u4f7f\u7528\u6c47\u7f16\u4f5c\u4e3a\u5185\u6838\u5165\u53e3</p> <p>\u56e0\u4e3a\u5728\u5185\u6838\u5165\u53e3\u5904\uff0cOpenSBI\u6ca1\u6709\u4e3a\u6211\u4eec\u8bbe\u7f6e sp \u6808\u6307\u9488\uff0c\u800c C \u8bed\u8a00\u7684\u8fd0\u884c\u73af\u5883\u8981\u6c42\u6709\u6808\u4f5c\u4e3a\u4fdd\u5b58\u6808\u4e0a\u53d8\u91cf\u548c\u51fd\u6570\u8c03\u7528\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u5730\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u9700\u8981\u4f7f\u7528\u6c47\u7f16\u521d\u59cb\u5316 sp \u5bc4\u5b58\u5668\u3002</p> <p>\u8be5 lab \u7684\u5185\u6838\u975e\u5e38\u7b80\u5355\uff0c\u89c2\u5bdf main.c \u4e2d\u7684 main \u51fd\u6570\uff1a</p> <pre><code>void main() {\n    printf(\"\\n\");\n    printf(\"clean bss: %p - %p\\n\", s_bss, e_bss);\n    memset(s_bss, 0, e_bss - s_bss);\n    printf(\"Kernel booted.\\n\");\n    printf(\"Hello World!\\n\");\n\n    printf(\"sysregs:\\n\");\n    print_sysregs();\n    printf(\"%d\", global_variable);\n\n    while (1);\n}\n</code></pre> <ul> <li>\u9996\u5148\u6e05\u7a7a .bss \u6bb5\uff08\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u4e00\u6b65\u662f Linux Kernel \u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u73b0\u5728\u6211\u4eec\u5c31\u662f Kernel\uff0c\u6240\u4ee5\u8fd9\u4ef6\u4e8b\u60c5\u5f97\u81ea\u5df1\u5e72\uff09</li> <li>\u7136\u540e\u7528 printf \u6253\u5370\u4e00\u4e9b\u4fe1\u606f\uff0c\u968f\u540e\u5f00\u59cb\u6b7b\u5faa\u73af\u3002</li> </ul> <pre><code>clean bss: 0x0000000080207000 - 0x0000000080207000\nKernel booted.\nHello World!\n</code></pre>"},{"location":"zh/lab/lab3/#sbi-call","title":"SBI Call","text":"<p>\u5728\u8fd9\u4e2alab\u7684\u5185\u6838\u4e2d\uff0cprintf \u4f1a\u8c03\u7528 <code>consputc</code> \u6765\u5411\u63a7\u5236\u53f0\u6253\u5370\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u8fd9\u4e2a\u51fd\u6570\u6700\u7ec8\u4f1a\u8c03\u7528 <code>sbi_call(SBI_CONSOLE_PUTCHAR, c, 0, 0)</code>\u3002</p> <p><code>\u8fd0\u884c\u73af\u5883</code> \u4e00\u7ae0\u5df2\u7ecf\u4ecb\u7ecd\u4e86 OpenSBI \u5411\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7 SBI \u63a5\u53e3\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u7840\u7684\u8fd0\u884c\u73af\u5883\u3002\u5176\u4e2d\u5c31\u5305\u62ec <code>sbi_console_putchar</code> \u548c <code>sbi_console_getchar</code> \u51fd\u6570\u3002</p> <p>\u5728\u6211\u4eec\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u901a\u8fc7\u8bbe\u7f6e a0\u3001a1 \u7b49\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u901a\u8fc7 <code>ecall</code> \u6307\u4ee4\u5411 M Mode \u7684\u7a0b\u5e8f\uff0c\u5373 OpenSBI,\u53d1\u8d77\u8bf7\u6c42\u3002</p> <p>Calling Convention</p> <p>Calling Convention \u8868\u793a\u5728\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u8c03\u7528\u8005 (Caller) \u548c \u88ab\u8c03\u7528\u8005 (Callee) \u6240\u9075\u5faa\u7684\u89c4\u8303\u3002</p> <p>\u8fd9\u901a\u5e38\u5305\u542b\u4e86\uff1a</p> <ol> <li>\u53c2\u6570\u4e0e\u8fd4\u56de\u503c\u662f\u5982\u4f55\u4f20\u9012</li> <li>Caller \u548c Callee \u9700\u8981\u4fdd\u5b58\u54ea\u4e9b\u5bc4\u5b58\u5668</li> </ol> <p>SBI \u7684 Calling Convention \u5b9a\u4e49\u5982\u4e0b (riscv-sbi.pdf)\uff1a</p> <p>All SBI functions share a single binary encoding, which facilitates the mixing of SBI extensions. The SBI specification follows the below calling convention.</p> <ul> <li>An ECALL is used as the control transfer instruction between the supervisor and the SEE.</li> <li>a7 encodes the SBI extension ID (EID),</li> <li>a6 encodes the SBI function ID (FID) for a given extension ID encoded in a7 for any SBI extension defined in or after SBI v0.2.</li> <li>All registers except a0 &amp; a1 must be preserved across an SBI call by the callee.</li> <li>SBI functions must return a pair of values in a0 and a1, with a0 returning an error code. </li> </ul> <p>\u800c\u6211\u4eec\u8981\u4f7f\u7528\u7684 putchar \u548c getchar \u662f\u6765\u81ea Legacy Extensions\uff1a</p> <ul> <li>Nothing is returned in a1 register.</li> <li>All registers except a0 must be preserved across an SBI call by the callee.</li> <li>The value returned in a0 register is SBI legacy extension specific.</li> </ul> <p>\u6309\u7167 RISC-V \u7684 Calling Convention\uff0c\u53c2\u6570\u662f\u901a\u8fc7 a \u7cfb\u5217\u5bc4\u5b58\u5668\u4fdd\u5b58\uff0c\u4ece a0 \u5f00\u59cb\u3002</p>"},{"location":"zh/lab/lab3/#sbi_call","title":"<code>sbi_call</code>","text":"<p>\u5728 <code>sbi_call</code> \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u58f0\u660e\u4e864\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u6ce8\u660e\u4ed6\u4eec\u5e94\u8be5\u76f4\u63a5\u88ab\u5206\u914d\u5230\u76f8\u5e94\u7684\u5bc4\u5b58\u5668\u4e0a (<code>register</code>, <code>asm(\"a0\")</code>)\u3002</p> <p>\u968f\u540e\uff0c\u6211\u4eec\u5c06 a7 \u8d4b\u503c\u4e3a\u6211\u4eec\u8981\u8c03\u7528\u54ea\u4e2a SBI \u51fd\u6570\uff0c\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u8d4b\u503c\u7ed9 a0, a1 \u548c a2\u3002</p> <p>\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 asm volatile \u8fdb\u884c ecall \u8c03\u7528\u3002</p> <p>\u6700\u540e\uff0c\u8fd4\u56de a0 \u5bc4\u5b58\u5668\u7684\u503c\u3002</p> <pre><code>const uint64 SBI_CONSOLE_PUTCHAR = 1;\nconst uint64 SBI_CONSOLE_GETCHAR = 2;\n\nint inline sbi_call(uint64 which, uint64 arg0, uint64 arg1, uint64 arg2) {\n    register uint64 a0 asm(\"a0\") = arg0;\n    register uint64 a1 asm(\"a1\") = arg1;\n    register uint64 a2 asm(\"a2\") = arg2;\n    register uint64 a7 asm(\"a7\") = which;\n    asm volatile(\"ecall\" : \"=r\"(a0) : \"r\"(a0), \"r\"(a1), \"r\"(a2), \"r\"(a7) : \"memory\");\n    return a0;\n}\n\nvoid console_putchar(int c) {\n    sbi_call(SBI_CONSOLE_PUTCHAR, c, 0, 0);\n}\n</code></pre> <p><code>asm volatile</code> \u8868\u793a\u5728 C \u4ee3\u7801\u4e2d\u76f4\u63a5\u63d2\u5165\u6c47\u7f16\u4ee3\u7801\uff0c\u5b83\u5206\u4e3a\u56db\u90e8\u5206\uff1a</p> <pre><code>asm asm-qualifiers ( AssemblerTemplate \n                 : OutputOperands \n                 [ : InputOperands\n                 [ : Clobbers ] ])\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528 <code>volatile</code> \u4f5c\u4e3a asm-qualifiers \u8868\u793a\u7981\u6b62\u7f16\u8bd1\u5668\u5bf9\u8fd9\u4e00\u6bb5\u4ee3\u7801\u8fdb\u884c\u53ef\u80fd\u7684\u4f18\u5316\u3002</p> <p>AssemblerTemplate \u8868\u793a\u6c47\u7f16\u7684\u6a21\u677f\uff0cOutputOperands \u8868\u793a\u54ea\u4e9b C \u53d8\u91cf\u4f1a\u88ab\u8fd9\u4e00\u6bb5\u6c47\u7f16\u4ee3\u7801\u4fee\u6539\uff0cInputOperands \u8868\u793a\u54ea\u4e9b C \u53d8\u91cf\u4f1a\u88ab\u8fd9\u4e00\u6bb5\u6c47\u7f16\u4ee3\u7801\u8bfb\u53d6\uff0cClobbers \u8868\u793a\u54ea\u4e00\u4e9b\u5bc4\u5b58\u5668\u4f1a\u88ab\u8fd9\u4e00\u6bb5\u6c47\u7f16\u4ee3\u7801\u4fee\u6539\u3002</p> <p>See also: https://gcc.gnu.org/onlinedocs/gcc-12.1.0/gcc/Extended-Asm.html</p>"},{"location":"zh/lab/xv6lab-paging/","title":"\u5185\u6838\u5185\u5b58\u7ba1\u7406","text":""},{"location":"zh/lab/xv6lab-paging/#satp","title":"satp","text":"<p>satp (Supervisor Address Translation and Protection) \u5bc4\u5b58\u5668\u662f\u63a7\u5236 S mode \u548c U mode \u4e0b\u5730\u5740\u7ffb\u8bd1\u7684\u5bc4\u5b58\u5668\uff0c\u5176\u4e2d\u5305\u542b\u4e09\u4e2a\u5c5e\u6027\uff1a<code>MODE</code>, <code>ASID</code> \u548c <code>PPN</code>\u3002</p> <p>This register holds the physical page number (PPN) of the root page table, i.e., its supervisor physical address divided by 4 KiB; an address space identifier (ASID), which facilitates address-translation fences on a per-address-space basis; and the MODE field, which selects the current address-translation scheme. Further details on the access to this register are described in Section 3.1.6.5.</p> <p></p> <p>Mode \u8868\u793a\u4f7f\u7528\u7684\u5730\u5740\u7ffb\u8bd1\u6a21\u5f0f\uff0c0 \u5219\u8868\u793a\u7981\u7528\u5730\u5740\u7ffb\u8bd1\uff0c\u6240\u6709\u8bf7\u6c42\u7684\u5730\u5740\u5747\u4f5c\u4e3a\u7269\u7406\u5730\u5740\u770b\u5f85\uff0c<code>PPN</code> \u8868\u793a\u6839\u9875\u8868\u7684\u57fa\u5730\u5740\u3002\u5728\u6211\u4eec\u7684\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Sv39 \u4f5c\u4e3a\u9875\u8868\u6a21\u5f0f\u3002</p> <p>\u6211\u4eec\u6682\u4e14\u4e0d\u9700\u8981\u7406\u89e3 ASID \u7684\u4f5c\u7528\u3002</p> <p></p>"},{"location":"zh/lab/xv6lab-paging/#sv39","title":"Sv39","text":"<p>RISC-V \u7684 Sv39 \u6a21\u5f0f\u652f\u6301\u4e86 39-bit \u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u9875\u9762\u5927\u5c0f 4KiB\u3002</p> <p>\u6709\u6548\u7684\u865a\u62df\u5730\u5740\u4e3a 64 \u4f4d\uff0c\u4f46\u662f 63-39 \u4f4d\u5fc5\u987b\u4e0e\u7b2c 38 \u4f4d\u76f8\u540c\uff0c\u5426\u5219\u4f1a\u4ea7\u751f Page Fault \u5f02\u5e38\u3002\u6240\u4ee5\uff0cSv39 \u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e00\u5171\u4e3a <code>(1 &lt;&lt; 39) = 512 GiB</code> \u7684\u7a7a\u95f4\uff0c\u5176\u4e2d\u5206\u4e3a\u9ad8\u5730\u5740\u548c\u4f4e\u5730\u5740\u5404 <code>256 GiB</code> \u7684\u7a7a\u95f4\u3002</p> <p>Sv39 implementations support a 39-bit virtual address space, divided into 4 KiB pages. An Sv39 address is partitioned as shown in Figure 4.19. Instruction fetch addresses and load and store effective addresses, which are 64 bits, must have bits 63\u201339 all equal to bit 38, or else a page-fault exception will occur. The 27-bit VPN is translated into a 44-bit PPN via a three-level page table, while the 12-bit page offset is untranslated.</p> <p></p> <p>\u865a\u62df\u5730\u5740\u5206\u4e3a\u56db\u90e8\u5206\uff1aVPN[2-0] (Virtual Page Number) \u548c page offset\u3002\u4e09\u7ea7 VPN \u8868\u793a\u5728\u4e09\u7ea7\u9875\u8868\u4e2d\u7684 index, \u800c page offset \u8868\u793a\u5f53\u524d\u5730\u5740\u5728\u88ab\u7ffb\u8bd1\u7684\u9875\u9762\u4e2d\u7684\u504f\u79fb\u91cf\u3002</p> <p>Sv39 \u4e2d\u7684 PTE \u957f\u5ea6\u4e3a 8-byte\uff0c\u5206\u4e3a\u4e24\u90e8\u5206\uff1aPPN \u548c Flags\u3002PPN (Physical Page Number) \u548c\u865a\u62df\u5730\u5740\u4e2d\u7684 page offset \u7ec4\u6210\u6700\u7ec8\u7684\u7269\u7406\u5730\u5740\uff0cFlags \u5219\u8868\u793a\u8be5\u865a\u62df\u5730\u5740\u9875\u9762\u7684\u8bbf\u95ee\u6743\u9650\u7b49\u4fe1\u606f\u3002</p> <p>Flags \u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>D, A: Dirty, Accessed\u3002\u8868\u793a\u8be5\u9875\u9762\u6700\u8fd1\u88ab\u8bbf\u95ee / \u5199\u5165\u8fc7\u3002</li> <li>G: Global\u3002\u8868\u793a\u8be5\u6620\u5c04\u5173\u7cfb\u5728\u6240\u6709\u9875\u8868\u4e2d\u5747\u5b58\u5728\u3002</li> <li>U: User\u3002\u8868\u793a\u8be5\u6620\u5c04\u5173\u7cfb\u5141\u8bb8\u5728\u7528\u6237\u6743\u9650\u4e0b\u8bbf\u95ee\u3002</li> <li>V: Valid\u3002\u8be5 bit \u8868\u793a\u6b64 PTE \u4e3a\u6709\u6548 PTE\uff0c\u5426\u5219\u6574\u4e2a PTE \u89c6\u4e3a\u65e0\u6548\u3002</li> <li>R, W, X: Read, Write, Executable \u6743\u9650</li> </ul> <p>RWX \u5b9a\u4e49\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u6ce8\u610f XWR == 3b000 \u7684\u60c5\u51b5\u8868\u793a\u7269\u7406\u5730\u5740 [PPN: 12b0] \u4e3a\u4e0b\u4e00\u7ea7\u9875\u8868\u7684\u57fa\u5730\u5740\u3002</p> <p></p> <p>\u5730\u5740\u7ffb\u8bd1\u7684\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>See also: riscv-privilege.pdf, 4.3.2 Virtual Address Translation Process</p> <p>\u6587\u5b57\u63cf\u8ff0\uff0c\u4ee5\u4e0b <code>{xx | yy}</code> \u8868\u793a\u5728 <code>xx</code> bit \u53f3\u8fb9\u5e76\u4e0a <code>yy</code> bit\uff0c\u7c7b\u4f3c\u4e8e Verilog \u7684\u5199\u6cd5\u3002</p> <ol> <li><code>{ 25b'signed_ext, 9b'VPN2, 9b'VPN1, 9b'VPN0, 12b'pgoff} = 64b'VirtualAddress</code></li> <li>\u5c06 satp \u5bc4\u5b58\u5668\u4e2d\u7b2c\u4e8c\u7ea7\u9875\u8868\u7684\u57fa\u5730\u5740\u53d6\u51fa</li> <li>\u4f7f\u7528 VPN2 \u4f5c\u4e3a index \u5728\u7b2c\u4e8c\u7ea7\u9875\u8868\u4e2d\u627e\u5230 PTE\u3002    \u8fd9\u4e00\u6b65\u7b49\u6548\u4e8e C \u4ee3\u7801\uff1a<code>uint64 pte2 = *(uint64*)(satp.base + VPN2 * 8);</code></li> <li>\u5982\u679c pte2.WXR != 3b000\uff0c\u5219\u8868\u793a\u8be5 PTE \u4e3a 1GiB \u5927\u9875\u6620\u5c04\u3002    \u68c0\u67e5 PPN \u662f\u5426\u5bf9\u9f50\u5230 1GiB\uff0caka\uff1a<code>pte2.PPN1 == 9b0 &amp;&amp; pte2.PPN0 == 9b0</code>\u3002\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u8df3\u8f6c\u81f3 10.\uff0c\u5426\u5219 Page Fault\u3002</li> <li>\u5426\u5219\uff0c<code>{pte2.PPN, 12b'0}</code> \u4e3a\u7b2c\u4e00\u7ea7\u9875\u8868\u7684\u57fa\u5730\u5740</li> <li>\u4f7f\u7528 VPN1 \u4f5c\u4e3a index \u5728\u7b2c\u4e00\u7ea7\u9875\u8868\u4e2d\u627e\u5230 PTE\u3002    \u8fd9\u4e00\u6b65\u7b49\u6548\u4e8e C \u4ee3\u7801\uff1a<code>uint64 pte1 = *(uint64*)((pte2.ppn &lt;&lt; 12) + VPN1 * 8);</code></li> <li>\u5982\u679c pte1.WXR != 3b000\uff0c\u5219\u8868\u793a\u8be5 PTE \u4e3a 2MiB \u5927\u9875\u6620\u5c04\u3002    \u68c0\u67e5 PPN \u662f\u5426\u5bf9\u9f50\u5230 2MiB\uff0caka\uff1a<code>pte2.PPN0 == 9b0</code>\u3002\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u8df3\u8f6c\u81f3 10.\uff0c\u5426\u5219 Page Fault\u3002</li> <li>\u5426\u5219\uff0c<code>{pte1.PPN | 12b'0}</code> \u4e3a\u7b2c\u96f6\u7ea7\u9875\u8868\u7684\u57fa\u5730\u5740</li> <li>\u4f7f\u7528 VPN0 \u4f5c\u4e3a index \u5728\u7b2c\u96f6\u7ea7\u9875\u8868\u4e2d\u627e\u5230 PTE\u3002    \u8fd9\u4e00\u6b65\u7b49\u6548\u4e8e C \u4ee3\u7801\uff1a<code>uint64 pte0 = *(uint64*)((pte1.ppn &lt;&lt; 12) + VPN0 * 8);</code></li> <li>\u5f97\u5230\u6700\u7ec8\u7684\u7269\u7406\u5730\u5740\uff1a<code>PA = (final_pte.ppn &lt;&lt; 12) | final_page_offset</code>\uff0c     \u5982\u679c\u4e3a 2MiB \u5927\u9875\u6620\u5c04\uff0c<code>final_page_offset = {9b'VPN0, 12b'pgoff}</code>\u3002     \u5982\u679c\u4e3a 1GiB \u5927\u9875\u6620\u5c04\uff0c<code>final_page_offset = {9b'VPN1, 9b'VPN0, 12b'pgoff}</code>     \u5426\u5219\uff0c<code>final_page_offset = pgoff</code></li> <li>\u6743\u9650\u68c0\u67e5\uff1a\u68c0\u67e5 <code>final_pte.rwx</code> \u662f\u5426\u4e0e\u8bbf\u5b58\u8bf7\u6c42\u76f8\u540c\u3002</li> </ol>"},{"location":"zh/lab/xv6lab-paging/#a-d","title":"A &amp; D","text":"<p>\u6bcf\u4e2a\u53f6 PTE \u5305\u542b Accessed \u548c Dirty \u4e24\u4e2a bits\uff1a</p> <ul> <li>A \u8868\u793a\uff1a\u81ea\u4ece\u4e0a\u6b21 A bit \u88ab\u6e05\u96f6\uff0c\u8be5\u865a\u62df\u9875\u9762\u66fe\u7ecf\u88ab\u8bfb\u53d6\u3001\u5199\u5165\u3001\u53d6\u6307 \uff08Instruction Fetch\uff09\u3002</li> <li>D \u8868\u793a\uff1a\u81ea\u4ece\u4e0a\u6b21 D bit \u88ab\u6e05\u96f6\uff0c\u8be5\u865a\u62df\u9875\u9762\u66fe\u7ecf\u88ab\u5199\u5165\u3002</li> </ul> <p>RISC-V \u786c\u4ef6\u5b9e\u73b0\u5141\u8bb8\u4e24\u79cd\u65b9\u5f0f\u6765\u66f4\u65b0 A &amp; D bits:</p> <p>\u5f53\u8bbf\u95ee\u7684\u865a\u62df\u9875\u9762\u88ab\u8bbf\u95ee\u65f6\uff0cA bit \u662f 0\u3001\u6216\u88ab\u5199\u5165\u65f6\uff0cD bit \u662f 0\uff1a</p> <ol> <li>\u53d1\u51fa PageFault\uff0cSupervisor \u7684\u5f02\u5e38\u5904\u7406\u51fd\u6570\u9700\u8981\u624b\u52a8\u8bbe\u7f6e A / D bits.</li> <li>\u7531\u786c\u4ef6\u8bbe\u7f6e A / D bits.</li> </ol> <p>Supervisor \u8f6f\u4ef6\u5e94\u5f53\u6b63\u786e\u5904\u7406\u4ee5\u4e0a\u4e24\u79cd\u60c5\u51b5\u3002</p> <p>Each leaf PTE contains an accessed (A) and dirty (D) bit.</p> <ul> <li>The A bit indicates the virtual page has been read, written, or fetched from since the last time the A bit was cleared.</li> <li>The D bit indicates the virtual page has been written since the last time the D bit was cleared.</li> </ul> <p>Two schemes to manage the A and D bits are permitted:</p> <p>\u00881. When a virtual page is accessed and the A bit is clear, or is written and the D bit is clear, a page-fault exception is raised. \u00882. When a virtual page is accessed and the A bit is clear, or is written and the D bit is clear, the implementation sets the corresponding bit(s) in the PTE.</p> <p>See also: \"riscv-privilege.pdf\" \"4.3.1 Addressing and Memory Protection\"</p>"},{"location":"zh/lab/xv6lab-paging/#_2","title":"\u6743\u9650\u68c0\u67e5","text":"<p>\u51ed\u76f4\u89c9\u7684\uff0c\u8bfb\u53d6\u7684\u9875\u9762\u8981\u5e26\u6709 R bit\uff0c\u5199\u5165\u7684\u9875\u9762\u8981\u5e26\u6709 W bit\uff0c\u6267\u884c\u7684\u9875\u9762\u8981\u5e26\u6709 X bit\u3002</p> <p>\u4f46\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u9875\u9762\u7684\u6743\u9650\u5e26\u6709 U bit\uff0c\u5e76\u4e14\u73b0\u5728 CPU \u6838\u5fc3\u8fd0\u884c\u5728 S mode \u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u6b64\u8fdb\u884c\u989d\u5916\u68c0\u67e5\uff1a\u5982\u679c <code>sstatus.SUM == 1</code> \u5219\u8bbf\u95ee\u88ab\u5141\u8bb8\uff0c\u5426\u5219 Page Fault.</p> <p>The SUM (permit Supervisor User Memory access) bit modifies the privilege with which S-mode loads and stores access virtual memory. When SUM=0, S-mode memory accesses to pages that are accessible by U-mode (U=1 in Figure 4.18) will fault. When SUM=1, these accesses are permitted.</p> <p>\u901a\u5e38\u6765\u8bf4\uff0cS mode \u4e00\u822c\u8fd0\u884c\u5728 <code>sstatus.SUM == 0</code> \u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u9875\u8868\u53bb\u8bbf\u95ee\u7528\u6237\u6570\u636e\u65f6\uff0c\u6211\u4eec\u4f1a\u5c06\u8be5 flag \u7f6e 1\uff0c\u5e76\u5728\u8bbf\u95ee\u7ed3\u675f\u540e\u6e05\u96f6\u3002\u8be5\u8fc7\u7a0b\u4e00\u822c\u88ab\u79f0\u4e3a uaccess \u539f\u8bed (primitive).</p> <p>See also: https://github.com/torvalds/linux/blob/master/arch/riscv/include/asm/uaccess.h</p>"},{"location":"zh/lab/xv6lab-paging/#risc-v","title":"RISC-V \u7269\u7406\u5730\u5740\u5e03\u5c40","text":"<p>RISC-V \u5c06\u7269\u7406\u5185\u5b58 (DDR / DRAM) \u7684\u8d77\u59cb\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740 <code>0x8000_0000</code> \u4e0a\uff0c\u800c\u4e0d\u662f\u7269\u7406\u5730\u5740 <code>0x0000_0000</code> \u5904\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6709 128 MiB (0x0800_0000) \u7684 DRAM \u5927\u5c0f\uff0cRISC-V \u6838\u5fc3\u4f1a\u5c06 DRAM \u7a7a\u95f4\u6620\u5c04\u5230 <code>[0x8000_0000, 0x8800_0000)</code> \u4e0a\u9762\u3002</p> <p>\u5bf9\u4e8e QEMU \u7684 virt \u673a\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u7ffb\u9605 qemu \u7684\u6e90\u4ee3\u7801\u627e\u5230\u5176\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\uff1a</p> <pre><code>static const MemMapEntry virt_memmap[] = {\n    [VIRT_DEBUG] =        {        0x0,         0x100 },\n    [VIRT_MROM] =         {     0x1000,        0xf000 },\n    [VIRT_TEST] =         {   0x100000,        0x1000 },\n    [VIRT_RTC] =          {   0x101000,        0x1000 },\n    [VIRT_CLINT] =        {  0x2000000,       0x10000 },\n    [VIRT_ACLINT_SSWI] =  {  0x2F00000,        0x4000 },\n    [VIRT_PCIE_PIO] =     {  0x3000000,       0x10000 },\n    [VIRT_PLATFORM_BUS] = {  0x4000000,     0x2000000 },\n    [VIRT_PLIC] =         {  0xc000000, VIRT_PLIC_SIZE(VIRT_CPUS_MAX * 2) },\n    [VIRT_APLIC_M] =      {  0xc000000, APLIC_SIZE(VIRT_CPUS_MAX) },\n    [VIRT_APLIC_S] =      {  0xd000000, APLIC_SIZE(VIRT_CPUS_MAX) },\n    [VIRT_UART0] =        { 0x10000000,         0x100 },\n    [VIRT_VIRTIO] =       { 0x10001000,        0x1000 },\n    [VIRT_FW_CFG] =       { 0x10100000,          0x18 },\n    [VIRT_FLASH] =        { 0x20000000,     0x4000000 },\n    [VIRT_IMSIC_M] =      { 0x24000000, VIRT_IMSIC_MAX_SIZE },\n    [VIRT_IMSIC_S] =      { 0x28000000, VIRT_IMSIC_MAX_SIZE },\n    [VIRT_PCIE_ECAM] =    { 0x30000000,    0x10000000 },\n    [VIRT_PCIE_MMIO] =    { 0x40000000,    0x40000000 },\n    [VIRT_DRAM] =         { 0x80000000,           0x0 },\n};\n</code></pre> <p>\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 gdb \u8fde\u63a5\u5230 qemu \u4e0a\u65f6\uff0c\u8f93\u5165 <code>monitor info mtree -f</code> \u67e5\u770b Memory Tree \u7684\u7ed3\u6784\uff1a</p> <pre><code>(qemu) gef\u27a4  monitor info mtree -f\nFlatView #0\n AS \"memory\", root: system\n AS \"cpu-memory-0\", root: system\n Root memory region: system\n  0000000000001000-000000000000ffff (prio 0, rom): riscv_virt_board.mrom\n  0000000000100000-0000000000100fff (prio 0, i/o): riscv.sifive.test\n  0000000000101000-0000000000101023 (prio 0, i/o): goldfish_rtc\n  0000000002000000-0000000002003fff (prio 0, i/o): riscv.aclint.swi\n  0000000002004000-000000000200bfff (prio 0, i/o): riscv.aclint.mtimer\n  0000000003000000-000000000300ffff (prio 0, i/o): gpex_ioport_window\n  000000000c000000-000000000c5fffff (prio 0, i/o): riscv.sifive.plic\n  0000000010000000-0000000010000007 (prio 0, i/o): serial\n  0000000010001000-00000000100011ff (prio 0, i/o): virtio-mmio\n  0000000010002000-00000000100021ff (prio 0, i/o): virtio-mmio\n  0000000010003000-00000000100031ff (prio 0, i/o): virtio-mmio\n  0000000010004000-00000000100041ff (prio 0, i/o): virtio-mmio\n  0000000010005000-00000000100051ff (prio 0, i/o): virtio-mmio\n  0000000010006000-00000000100061ff (prio 0, i/o): virtio-mmio\n  0000000010007000-00000000100071ff (prio 0, i/o): virtio-mmio\n  0000000010008000-00000000100081ff (prio 0, i/o): virtio-mmio\n  0000000010100000-0000000010100007 (prio 0, i/o): fwcfg.data\n  0000000010100008-0000000010100009 (prio 0, i/o): fwcfg.ctl\n  0000000010100010-0000000010100017 (prio 0, i/o): fwcfg.dma\n  0000000020000000-0000000021ffffff (prio 0, romd): virt.flash0\n  0000000022000000-0000000023ffffff (prio 0, romd): virt.flash1\n  0000000030000000-000000003fffffff (prio 0, i/o): pcie-mmcfg-mmio\n  0000000040000000-000000007fffffff (prio 0, i/o): gpex_mmio_window @0000000040000000\n  0000000080000000-000000009fffffff (prio 0, ram): riscv_virt_board.ram\n  0000000400000000-00000007ffffffff (prio 0, i/o): gpex_mmio_window @0000000400000000\n</code></pre> <p>\u5728\u6211\u4eec\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8 DRAM \u7a7a\u95f4\u548c\u4e00\u4e9b\u5916\u8bbe(PLIC, UART)\u5373\u53ef</p> <code>Base</code> Size Description <code>0x0000_1000</code> <code>0x0000_f000</code> BootROM <code>0x0c00_0000</code> <code>0x0060_0000</code> PLIC <code>0x1000_0000</code> <code>0x0000_0100</code> Serial UART <code>0x8000_0000</code> DRAM Size DRAM <p>\u5b9e\u9645\u4e0a OpenSBI \u5728\u52a0\u8f7d\u65f6\u4e5f\u4f1a\u5360\u7528\u4e00\u90e8\u5206 DRAM \u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 gdb \u4e0b\u7528 <code>monitor info roms</code> \u67e5\u770b QEMU \u542f\u52a8\u65f6\u6240\u52a0\u8f7d\u7684\u6587\u4ef6\uff1a</p> <pre><code>(qemu) gef\u27a4  monitor info roms\naddr=0000000000001000 size=0x000028 mem=rom name=\"mrom.reset\"\naddr=0000000000001028 size=0x000030 mem=rom name=\"mrom.finfo\"\naddr=0000000080000000 size=0x042868 mem=ram name=\"/usr/share/qemu/opensbi-riscv64-generic-fw_dynamic.bin\"\naddr=0000000080200000 size=0x002790 mem=ram name=\"build/kernel ELF program header segment 1\"\naddr=0000000080203000 size=0x009048 mem=ram name=\"build/kernel ELF program header segment 2\"\naddr=000000009fe00000 size=0x0012b8 mem=ram name=\"fdt\"\n</code></pre> <p>\u5176\u4e2d\uff0c<code>0x1000</code> \u4e0a\u653e\u7f6e\u7684\u662f BootROM\uff0c\u662f CPU \u4e0a\u7535\u540e\u7684\u6267\u884c\u7684\u7b2c\u4e00\u5757\u4ee3\u7801\u3002\uff08\u7c7b\u4f3c\u4e8e\u5728\u7ec4\u6210\u539f\u7406\u8bfe\u7a0b\u91cc\u9762\u4f7f\u7528\u7684 BlockRAM\uff09 OpenSBI \u88ab\u52a0\u8f7d\u5230 DRAM \u7a7a\u95f4\u5f00\u59cb\u7684 <code>0x8000_0000</code>\u3002\uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5185\u6838\u7684 BASE_ADDRESS \u4e0d\u80fd\u662f <code>0x8000_0000</code> \u800c\u5f97\u662f <code>0x8020_0000</code>\uff09 \u5185\u6838ELF \u88ab\u52a0\u8f7d\u5230 <code>0x8020_0000</code> \u7684\u5730\u5740\u3002</p> <code>Base</code> Size Description <code>0x8000_0000</code> <code>0x0004_2868</code> OpenSBI <code>0x8020_0000</code> <code>0x0000_2790</code> kernel segment 1 <code>0x8020_3000</code> <code>0x0000_9048</code> kernel segment 1 <p></p>"},{"location":"zh/lab/xv6lab-paging/#_3","title":"\u5185\u6838\u5185\u5b58\u5e03\u5c40","text":"<p>Sv39 \u865a\u62df\u5730\u5740\u7684\u9ad8\u4f4d\u662f Sign-Extension \u7684\uff0c\u5728 <code>&lt; 256 GiB</code> \u548c <code>256 GiB ~ 512 GiB</code> \u4e4b\u95f4\u6709\u7740\u5de8\u5927\u7684 gap\uff0c\u6211\u4eec\u5229\u7528\u6b64\u7279\u6027\u5728\u5730\u5740\u4e0a\u533a\u5206\u7528\u6237\u5730\u5740\uff08\u4f4e\uff0c\u4ee5 0x0000 \u5f00\u5934\uff09\u548c\u5185\u6838\u5730\u5740\uff08\u9ad8\uff0c\u4ee5 0xffff \u5f00\u5934\uff09\u3002</p> <code>Base Address</code> Description <code>0x0000_003f_ffff_f000</code> Trampoline <code>0xffff_ffc0_0000_0000</code> Kernel Direct Mapping of all available physical pages <code>0xffff_fffd_0000_0000</code> Kernel Heap (fixed-size object) <code>0xffff_ffff_8020_0000</code> Kernel Image (.text, .data, .bss) <code>0xffff_ffff_a000_0000</code> Device Memory-Mapped IO <code>0xffff_ffff_d000_0000</code> Kernel stack for processes <code>0xffff_ffff_ff00_0000</code> Kernel stack for per-cpu scheduler <ul> <li>Trampoline (n. \u8e66\u5e8a) \u662f\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u7684\u8df3\u677f\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5b83\u653e\u5728\u4f4e 128 GiB \u7684\u6700\u9ad8\u5904\u3002</li> <li>\u7136\u540e\uff0c\u6211\u4eec\u5c06\u5185\u6838\u7684\u955c\u50cf\uff0c\u5373 build/kernel ELF \u6587\u4ef6\uff0c\u6620\u5c04\u5230 <code>0xffff_ffff_8020_0000</code>\u3002</li> <li>\u5176\u6b21\uff0c\u6620\u5c04\u4e00\u4e9b\u5185\u6838 setup \u6240\u9700\u8981\u7684\u9875\u9762\uff0c\u5982\u6bcf\u4e2a CPU \u7684 scheduler \u6240\u7528\u7684\u6808\uff0c\u4ee5\u53ca\u5916\u8bbe\u6240\u9700\u8981\u7684 MMIO\u3002</li> <li>\u6700\u540e\uff0c\u5269\u4e0b\u7684\u6240\u6709\u53ef\u7528\u7684\u7269\u7406\u9875\u9762\u5c06\u88ab Direct Mapping \u5230 <code>0xffff_ffc0_0000_0000</code>\uff0c\u5e76\u4ea4\u7ed9 kalloc \u7ba1\u7406\u3002</li> </ul> <p></p> <p>Direct Mapping \u7684\u4f5c\u7528\u662f\u8ba9 Kernel \u80fd\u76f4\u63a5\u64cd\u7eb5\u6240\u6709\u53ef\u7528\u7684\u7269\u7406\u5185\u5b58\uff0c\u4f46\u662f\u9664\u4e86\u5185\u6838\u672c\u8eab\u955c\u50cf\u4ee5\u5916\u3002</p> <p>\u5982\u679c\u6ca1\u6709 Direct Mapping\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u9700\u8981\u5c06\u65b0\u5206\u914d\u7684\u9875\u9762\u6620\u5c04\u5230\u5185\u6838\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0a\uff0c\u624d\u80fd\u901a\u8fc7\u865a\u62df\u5730\u5740\u53bb\u8bbf\u95ee\u8be5\u7269\u7406\u9875\u9762\u3002 \u800c\u6709\u4e86 Direct Mapping \u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u7269\u7406\u5730\u5740\u52a0\u4e0a\u4e00\u4e2a\u5e38\u91cf\u504f\u79fb\u91cf\uff0c\u5f97\u5230\u4e00\u4e2a\u5185\u6838\u53ef\u8bbf\u95ee\u7684\u865a\u62df\u5730\u5740\uff1a</p> <pre><code>#define KERNEL_DIRECT_MAPPING_BASE  0xffffffc000000000ull\n\n#define KVA_TO_PA(x) (((uint64)(x)) - KERNEL_DIRECT_MAPPING_BASE)\n#define PA_TO_KVA(x) (((uint64)(x)) + KERNEL_DIRECT_MAPPING_BASE)\n</code></pre> <ul> <li>kalloc \u5305\u542b\u4e24\u4e2a\u529f\u80fd\uff1a<ol> <li>\u5bf9\u7269\u7406\u9875\u9762\u7684\u5206\u914d</li> <li>\u5bf9\u56fa\u5b9a\u5927\u5c0f\u5bf9\u8c61\u7684\u52a8\u6001\u5206\u914d\u548c\u56de\u6536</li> </ol> </li> <li>\u5728 kalloc \u63a5\u7ba1\u5269\u4f59\u7684\u7269\u7406\u5185\u5b58\u540e\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5b83\u5206\u914d\uff1a<ol> <li>\u6bcf\u4e2a object allocator \u7684\u5185\u5b58\u6c60</li> <li>\u6bcf\u4e2a process \u7684 kernel stack</li> <li>\u6bcf\u4e2a cpu \u7684 scheduler stack</li> </ol> </li> </ul>"},{"location":"zh/lab/xv6lab-paging/#relocation","title":"Relocation","text":"<p>\u5bf9\u4e8e\u5185\u6838\u672c\u8eab(\u5373\u7f16\u8bd1\u51fa\u6765\u7684 ELF \u6587\u4ef6\uff1a<code>build/kernel</code>\uff0c\u4e5f\u79f0\u4e3a \u5185\u6838\u955c\u50cf)\uff0c\u6211\u4eec\u91c7\u7528\u57fa\u5730\u5740\u504f\u79fb\u6620\u5c04\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5185\u6838\u4e2d\u5b9a\u4e49 (Defined) \u7684\u7b26\u53f7(\u53d8\u91cf\u3001\u51fd\u6570)\uff0c\u5b83\u4eec\u4f1a\u88ab OpenSBI \u52a0\u8f7d\u5230\u6307\u5b9a\u7684\u7269\u7406\u5730\u5740 <code>0x0000_0000_8020_abcd</code>\uff0c\u800c\u8be5\u7b26\u53f7\u6240\u5bf9\u5e94\u7684\u865a\u62df\u5730\u5740\u662f <code>0xffff_ffff_8020_abcd</code>\u3002\u5bf9\u4e8e\u6240\u6709\u7b26\u53f7\uff0c\u8fd9\u4e24\u4e2a\u5730\u5740\u4e4b\u95f4\u6c38\u8fdc\u76f8\u5dee\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\u3002\u6211\u4eec\u5c06\u8be5\u503c\u5b9a\u4e49\u4e3a\u5185\u6838\u504f\u79fb\u91cf (kernel offset)\u3002</p> <p>\u8be5\u503c\u5b9a\u4e49\u4e3a\u5b8f <code>KERNEL_OFFSET</code>\uff0c\u5e76\u5b9a\u4e49\u5b8f <code>KIVA_TO_PA</code> \u548c <code>PA_TO_KIVA</code> \u5728\u4fbf\u4e8e\u4e24\u8005\u4e4b\u95f4\u8f6c\u6362\u3002</p> <pre><code>// (Kernel Image Virtual Address) TO (Physical Address)\n#define KIVA_TO_PA(x) (((uint64)(x)) - KERNEL_OFFSET)\n#define PA_TO_KIVA(x) (((uint64)(x)) + KERNEL_OFFSET)\n\n#define KERNEL_VIRT_BASE 0xffffffff80200000ull\n#define KERNEL_PHYS_BASE 0x80200000ull\n#define KERNEL_OFFSET    ((uint64)(KERNEL_VIRT_BASE - KERNEL_PHYS_BASE))\n</code></pre> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u504f\u79fb\u6574\u4e2a\u955c\u50cf\u6587\u4ef6\u52a0\u8f7d\u7684\u57fa\u5730\u5740\u5e76\u4e0d\u4f1a\u6539\u53d8\u4e24\u4e2a\u7b26\u53f7\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a</p> <ol> <li>\u7b26\u53f7 a \u88ab\u52a0\u8f7d\u5230 PA_a <code>0x0000_0000_8020_dead</code>\uff0c\u7b26\u53f7 b \u88ab\u52a0\u8f7d\u5230 PA_b <code>0x0000_0000_8020_beef</code>\u3002</li> <li>\u7b26\u53f7 a \u5c06\u4f1a\u88ab\u6620\u5c04\u5230 VA_a <code>0xffff_ffff_8020_dead</code>\uff0c\u7b26\u53f7 b \u5c06\u4f1a\u88ab\u52a0\u8f7d\u5728 VA_b <code>0xffff_ffff_8020_beef</code></li> <li><code>PA_a - PA_b = VA_a - VA_b</code></li> </ol> <p>\u8fd9\u4e2a\u6027\u8d28\u5141\u8bb8\u6211\u4eec\u5728\u4f7f\u7528 <code>PC-relative</code> \u5bfb\u5740\u65f6\uff0c\u80fd\u4e0d\u4f9d\u8d56\u94fe\u63a5\u5668\u4e3a\u7b26\u53f7\u8bbe\u7f6e\u7684\u5730\u5740\uff0c\u800c\u4ec5\u4f9d\u8d56\u4e8e\u67d0\u6761\u6307\u4ee4\u7684 pc \u548c\u8be5\u7b26\u53f7\u5730\u5740\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u800c\u8fd9\u4e2a\u5dee\u503c\u5728 \u94fe\u63a5\u5668 \u6240\u770b\u5230\u7684\u865a\u62df\u5730\u5740\u4e0b\u548c \u5b9e\u9645\u955c\u50cf\u88ab\u52a0\u8f7d\u7684\u5730\u5740\u4e0b\u4e00\u81f4\u5373\u53ef\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2a ELF \u955c\u50cf\u7684\u57fa\u5730\u5740\u91cd\u5b9a\u4f4d\u5230\u4efb\u4f55\u8d77\u59cb\u5730\u5740\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u6240\u6709 Program Headers \u4e4b\u95f4\u7684\u504f\u79fb\u91cf\u662f\u56fa\u5b9a\u7684\u5373\u53ef\u3002\uff08\u5f53\u7136\u6211\u4eec\u7684\u5185\u6838\u5728\u5185\u5b58\u5730\u5740\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u57fa\u5730\u5740\u4e00\u81f4\u5373\u53ef\uff09\u3002\u8fd9\u4e00\u6761\u6027\u8d28\u4e5f\u662f Linux Kernel \u80fd\u5b9e\u73b0\u5bf9\u81ea\u8eab\u955c\u50cf\u7684 KASLR (Kernel address space layout randomization) \u7684\u539f\u7406\u3002</p> <p>See also: https://lwn.net/Articles/569635/</p> <p>\u6211\u4eec\u671f\u671b\u5185\u6838\u4f1a\u8fd0\u884c\u5728 <code>0xffff_ffff_8020_0000</code> \u7684\u9ad8\u5730\u5740\u4e0a\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 <code>kernel.ld</code> \u4f7f\u94fe\u63a5\u5668\u80fd\u6b63\u786e\u94fe\u63a5\u5185\u6838\u3002</p> <pre><code>OUTPUT_ARCH(riscv)\nENTRY(_entry)\nBASE_ADDRESS = 0xffffffff80200000;\n</code></pre> <p>\u6b64\u65f6 OpenSBI \u65e0\u6cd5\u6b63\u786e\u52a0\u8f7d kernel ELF \u5230\u7269\u7406\u5730\u5740\u4e0a\uff0c\u56e0\u4e3a kernel ELF \u7684 Program Header \u7684\u9884\u8ba1\u52a0\u8f7d\u7684\u7269\u7406\u5730\u5740 (PhysAddr) \u662f <code>0xffff_ffff_8020_0000</code> \u7684\u9ad8\u5730\u5740\uff0c\u7136\u800c\u8fd9\u4e2a\u5730\u5740\u53ea\u80fd\u5728\u5730\u5740\u7ffb\u8bd1\u542f\u7528\u65f6\u88ab\u4f7f\u7528\u3002 \u4f46\u662f\uff0c\u5728\u63a7\u5236\u6743\u4ece OpenSBI \u8f6c\u4ea4\u81f3\u6211\u4eec\u7684\u5185\u6838\u65f6\uff0cCPU \u7684\u5730\u5740\u7ffb\u8bd1\u529f\u80fd\u662f\u6ca1\u6709\u542f\u7528\u7684\u3002</p> <p>Question 1</p> <ol> <li>\u4f7f\u7528 <code>make</code> \u7f16\u8bd1\u5185\u6838\uff0c\u4f7f\u7528 <code>make run</code> \u542f\u52a8\u5185\u6838\uff0c\u89c2\u5bdf\u5185\u6838\u662f\u5426\u80fd\u591f\u542f\u52a8\u3002</li> <li>\u4f7f\u7528 <code>readelf -a build/kernel</code> \u6253\u5370\u51fa kernel ELF \u7684\u7ed3\u6784\uff0c\u5e76\u89e3\u91ca\u91cc\u9762\u7684 Program Headers\u3002</li> </ol> <p>\u968f\u540e\uff0c\u5c06 <code>kernel.ld</code> \u7684\u5185\u5bb9\u8986\u76d6\u4e3a <code>kernel-backup.ld</code> \u4e2d\u7684\u5185\u5bb9\u3002</p> <ol> <li>\u4f7f\u7528 <code>make</code> \u7f16\u8bd1\u5185\u6838\uff0c\u4f7f\u7528 <code>make run</code> \u542f\u52a8\u5185\u6838\uff0c\u89c2\u5bdf\u5185\u6838\u662f\u5426\u80fd\u591f\u542f\u52a8\u3002</li> <li>\u4f7f\u7528 <code>readelf -a build/kernel</code> \u6253\u5370\u51fa kernel ELF \u7684\u7ed3\u6784\uff0c\u5e76\u89e3\u91ca\u91cc\u9762\u7684 Program Headers\u3002</li> </ol> <p>\u4f7f\u7528 <code>make debug</code> \u5f00\u542f\u4e00\u4e2a\u5e26\u8c03\u8bd5\u7684 qemu\uff0c\u5e76\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u542f\u52a8 <code>gdb-multiarch</code>\u3002\u5728\u5185\u6838\u5165\u53e3 <code>0x8020_0000</code> \u5904\u6253\u4e0a\u65ad\u70b9 (<code>b *0x80200000</code>)\uff0c\u65ad\u70b9\u547d\u4e2d\u540e\u6253\u5370 satp \u5bc4\u5b58\u5668\u7684\u503c (<code>print $satp</code>)\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u518d\u6b21\u4fee\u6539 <code>kernel.ld</code> \u4f7f\u94fe\u63a5\u5668\u4ea7\u751f\u7684 ELF \u7684 Program Headers \u62e5\u6709 <code>VirtAddr = 0xffff_ffff_8020_0000</code>\uff0c\u4ee5\u53ca <code>PhysAddr = 0x8020_0000</code>\u3002</p> <p>\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u6bb5 <code>.text</code> \u540e\u9762\u6ce8\u660e <code>AT(0x80200000)</code>\uff0c\u8868\u793a\u8fd9\u4e2a\u6bb5\u4f1a\u88ab\u52a0\u8f7d\u5230\u7269\u7406\u5730\u5740 <code>0x8020_0000</code>\u3002</p> <pre><code>BASE_ADDRESS = 0xffffffff80200000;\nSECTIONS\n{\n    . = BASE_ADDRESS;\n    skernel = .;\n    s_text = .;\n\n    .text : AT(0x80200000) {\n        *(.text.entry)\n        // ...\n    }\n    // ...\n}\n</code></pre> <p>\u6b64\u65f6\u518d <code>make run</code> \u8fd0\u884c\u5185\u6838\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 OpenSBI \u6b63\u786e\u627e\u5230\u4e86\u6211\u4eec\u5185\u6838\u7684\u5165\u53e3\u70b9\uff1a</p> <pre><code>Domain0 Next Address      : 0x0000000080200000\nDomain0 Next Arg1         : 0x000000009fe00000\nDomain0 Next Mode         : S-mode\n...\nclean bss: 0x00000000802ac000 - 0x00000000802b3000\nKernel is Relocating...\n</code></pre> <p>Question</p> <p>\u6211\u4eec\u5728 <code>kernel.ld</code> \u91cc\u9762\u6307\u5b9a\u7684\u865a\u62df\u5730\u5740\u662f <code>0xffff_ffff_8020_0000</code>\uff0c\u4f46\u662f <code>entry.S</code> \u4e2d\u4ecd\u7136\u4f7f\u7528\u7684\u662f</p> <pre><code>_entry:\n    lla sp, boot_stack_top\n    call main\n</code></pre> <p>\u8bf7\u601d\u8003\uff1a\u4e3a\u4ec0\u4e48\u5728\u7a0b\u5e8f\u8fd0\u884c\u5728 <code>0x0000_0000_8020_0000</code> \u7684\u5730\u5740\u4e0a\u65f6\uff0c\u4f7f\u7528 <code>lla</code> \u52a0\u8f7d\u7b26\u53f7\u548c <code>call main</code> \u8df3\u8f6c main \u80fd\u627e\u5230\u6b63\u786e\u7684\u7269\u7406\u5730\u5740\uff0c\u800c\u4e0d\u662f\u5728\u6b64\u65f6\u4e3a\u975e\u6cd5\u7684\u865a\u62df\u5730\u5740 <code>0xffff_ffff_8020_0000</code>\uff1f</p> <p>Hint: \u6211\u4eec\u662f\u5982\u4f55\u5bfb\u5740\u7684\uff1f\u56de\u5fc6\u8ba1\u7b97\u673a\u7ec4\u6210\u8bfe\u4e0a\u5b66\u4e60\u7684\u5bfb\u5740\u6a21\u5f0f\u3002</p> <p>\u4e0a\u8ff0 <code>_entry</code> \u4ee3\u7801\u7f16\u8bd1\u540e\u7684\u6c47\u7f16\u662f\uff1a</p> <pre><code>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 code:riscv:RISCV \u2500\u2500\u2500\u2500\n\u25cf\u2192  0x80200000 &lt;skernel+0000&gt;   auipc  sp, 0xac\n    0x80200004 &lt;skernel+0004&gt;   mv     sp, sp\n    0x80200008 &lt;skernel+0008&gt;   auipc  ra, 0x2\n    0x8020000c &lt;skernel+000c&gt;   jalr   488(ra)\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 source:os/entry.S+4 \u2500\u2500\u2500\u2500\n    1      .section .text.entry\n    2      .globl _entry\n    3  _entry:\n\u2192   4      lla sp, boot_stack_top\n    5      call main\n    6  \n    7      .section .bss.stack\n    8      .globl boot_stack\n    9  boot_stack:\n</code></pre> <p>\u5982\u679c\u6211\u4eec\u76f4\u63a5\u6784\u5efa\u4e0a\u56fe\u7684\u9875\u8868\uff0c\u6211\u4eec\u9700\u8981\u4e24\u6761\u6216\u66f4\u591a\u6307\u4ee4\u6765\u8df3\u8f6c\u5230\u9ad8\u5730\u5740\uff1a</p> <ol> <li><code>csrw satp</code>: \u8bbe\u7f6e satp \u5bc4\u5b58\u5668\uff0c\u542f\u7528 Sv39 \u5730\u5740\u7ffb\u8bd1</li> <li><code>mv a0, 0xffff_ffff_8020_xxxx</code></li> <li><code>jr a0</code></li> </ol> <p>\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u6267\u884c\u7b2c 1 \u6761\u6307\u4ee4\u65f6\uff0c\u6211\u4eec\u7684 PC \u8fd8\u6307\u5411\u7740 0x8020_xxxx \u4e0a\u9762\uff0c\u5f53\u8bbe\u7f6e\u5b8c satp \u540e\u9875\u8868\u542f\u7528\uff0c\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5bfb\u5740\u5730\u5740\u662f \u4e0a\u4e00\u4e2aPC + 4\uff0c\u4ecd\u7136\u662f\u5728 0x8020_xxxx \u7684\u8303\u56f4\u91cc\u9762\u3002 \u8fd9\u6837\u6211\u4eec\u7684\u7b2c\u4e8c\u6761\u6307\u4ee4\u5c31\u4f1a\u53d1\u751f Instruction Page Fault \u5f02\u5e38\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u6211\u4eec\u8bbe\u7f6e\u5b8c\u9ad8\u5730\u5740\u7684\u5185\u6838\u9875\u8868\u540e\uff0c\u6211\u4eec\u5e76\u4e0d\u80fd\u76f4\u63a5\u5207\u6362\u5230\u4ec5\u5305\u542b\u9ad8\u5730\u5740\u7684\u9875\u8868\u4e0a\uff0c\u56e0\u4e3a\u6b64\u65f6\u6211\u4eec\u7684 PC \u6307\u9488\u8fd8\u6307\u5411\u4f4e\u5730\u5740\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4e34\u65f6\u9875\u8868\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e24\u4efd\u6620\u5c04\uff1a</p> <ol> <li>VA <code>0x0000_0000_8020_0000</code> -&gt; PA <code>0x8020_0000</code></li> <li>VA <code>0xffff_ffff_8020_0000</code> -&gt; PA <code>0x8020_0000</code></li> </ol> <p>\u5f53\u6267\u884c\u5b8c\u4e0a\u8ff0\u7b2c1\u6761\u6307\u4ee4\u542f\u7528 Sv39 \u540e\uff0c\u6211\u4eec\u76ee\u524d\u7684 PC \u4ecd\u7136\u6307\u5411\u5408\u6cd5\u7684\u865a\u62df\u5730\u5740\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7d\u4e00\u4e2a\u7edd\u5bf9\u5730\u5740\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u7136\u540e\u4f7f\u7528 <code>jr</code> \u6307\u4ee4\u8df3\u8f6c\u5230\u8be5\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u4ece\u800c\u8fdb\u5165\u5230\u5185\u6838\u7684\u9ad8\u5730\u5740\u3002</p> <p>\u6211\u4eec\u5c06\u8fd9\u4e00\u7cfb\u5217\u6b65\u9aa4\u79f0\u4e3a Relocate (\u91cd\u5b9a\u4f4d)\u3002</p> <p>See also: https://0xax.gitbooks.io/linux-insides/content/Booting/linux-bootstrap-6.html</p>"},{"location":"zh/lab/xv6lab-paging/#relocation_start","title":"relocation_start","text":"<p>\u5728 relocation_start \u7684\u4e34\u65f6\u9875\u8868\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 2 MiB \u7684\u5927\u9875\u6620\u5c04\u3002\u6211\u4eec\u5148\u5728 .bss \u6bb5\u4e0a\u5f00\u8f9f\u56db\u4e2a\u5bf9\u9f50\u7684\u7269\u7406\u9875\u9762\uff1a</p> <pre><code>static char relocate_pagetable[PGSIZE] __attribute__((aligned(PGSIZE)));\nstatic char relocate_pagetable_level1_ident[PGSIZE] __attribute__((aligned(PGSIZE)));\nstatic char relocate_pagetable_level1_direct_mapping[PGSIZE] __attribute__((aligned(PGSIZE)));\nstatic char relocate_pagetable_level1_high[PGSIZE] __attribute__((aligned(PGSIZE)));\n</code></pre> <p>\u7136\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u5185\u6838\u955c\u50cf\u7684\u7ec8\u6b62\u70b9 <code>ekernel</code> \u5411\u4e0a\u5bf9\u9f50\u5230 2MiB \u7684\u5927\u5c0f\u3002\u8fd9\u662f\u56e0\u4e3a 2 MiB \u7684\u5927\u9875\u6620\u5c04\u8981\u6c42\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u540c\u65f6\u5bf9\u9f50\u5230 2MiB \u4e0a\u3002</p> <pre><code>// Kernel Start Point must be aligned to 2MiB\nassert(IS_ALIGNED(KERNEL_PHYS_BASE, PGSIZE_2M));\n\n// Calculate Kernel image size, and round up to 2MiB.\nuint64 kernel_size = (uint64)ekernel - (uint64)skernel;\nuint64 kernel_size_4K = ROUNDUP_2N(kernel_size, PGSIZE);\nuint64 kernel_size_2M = ROUNDUP_2N(kernel_size, PGSIZE_2M);\n\nkernel_image_end_4k = KERNEL_PHYS_BASE + kernel_size_4K;\nkernel_image_end_2M = KERNEL_PHYS_BASE + kernel_size_2M;\n\nprintf(\"Kernel size: %p, Rounded to 2MiB: %p\\n\", kernel_size, kernel_size_2M);\n</code></pre> <p>\u5728 <code>kernel_image_end_2M</code> \u540e\u9762\uff0c\u6211\u4eec\u518d\u5f00\u8f9f\u4e00\u4e2a 2MiB \u7684\u9875\u9762\u4f5c\u4e3a Kernel Direct Mapping \u7684\u7b2c\u4e00\u4e2a\u5185\u5b58\u6c60\uff0c\u8fd9\u662f\u4e3a\u4e86\u5728\u540e\u7eed <code>kvmmake</code> \u7533\u8bf7\u6b21\u7ea7\u9875\u8868\u65f6\u63d0\u4f9b\u7269\u7406\u9875\u9762\u3002</p> <pre><code>// Calculate Kernel Mapping Base &amp; End\nuint64 kernel_phys_base = KERNEL_PHYS_BASE;\nuint64 kernel_phys_end = kernel_phys_base + kernel_size_2M;\nuint64 kernel_virt_base = KERNEL_VIRT_BASE;\nuint64 kernel_virt_end = kernel_virt_base + kernel_size_2M;\n\n// Calculate the first Direct Mapping Base &amp; End\nuint64 kernel_la_phy_base = kernel_image_end_2M;\nuint64 kernel_la_base = KERNEL_DIRECT_MAPPING_BASE + kernel_la_phy_base;\nuint64 kernel_la_end = kernel_la_base + PGSIZE_2M;\n</code></pre> <p>\u7136\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u6620\u5c04\uff1aVA <code>0x0000_0000_8020_0000</code> -&gt; PA <code>0x8020_0000</code></p> <ol> <li>\u5728 <code>pgt_root</code> \u4e0a\u6dfb\u52a0\u4e00\u6761PTE\uff0c\u4f7f\u5176\u6307\u5411\u7b2c\u4e00\u7ea7\u9875\u8868 <code>pgt_ident</code>\u3002</li> <li>\u4ece <code>kernel_phys_base</code> \u5230 <code>kernel_phys_end</code>\uff0c\u6bcf 2 MiB \u6dfb\u52a0\u4e00\u4e2a PTE \u6620\u5c04</li> <li>\u8ba1\u7b97\u8be5\u7269\u7406\u5730\u5740\u5e94\u8be5\u88ab\u6620\u5c04\u5230\u54ea\u4e2a\u865a\u62df\u5730\u5740\u4e0a\uff0c\u5728\u8fd9\u4e2a\u6620\u5c04\u4e2d\uff0c<code>va = pa</code>\u3002</li> <li>\u8ba1\u7b97 <code>VPN1</code>\uff0c\u5e76\u5728 <code>pgt_ident</code> \u4e2d\u6dfb\u52a0\u6620\u5c04\u3002</li> </ol> <pre><code>// We will still have some instructions executed on pc 0x8020xxxx before jumping to KIVA.\n// Step 2. Setup Identity Mapping for 0x80200000 -&gt; 0x80200000, using 2MiB huge page.\n{\n    uint64 VPN2 = PX(2, kernel_phys_base);\n    pgt_root[VPN2] = MAKE_PTE((uint64)pgt_ident, 0);\n\n    for (uint64 pa = kernel_phys_base; pa &lt; kernel_phys_end; pa += PGSIZE_2M) {\n        uint64 va = pa;\n        uint64 vpn1 = PX(1, va);\n        pgt_ident[vpn1] = MAKE_PTE(pa, PTE_R | PTE_W | PTE_X | PTE_A | PTE_D);\n        printf(\"Mapping Identity: %p to %p\\n\", va, pa);\n    }\n}\n</code></pre> <p>\u7136\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u6620\u5c04\u5185\u6838 ELF \u7684\u865a\u62df\u5730\u5740\uff1aVA <code>0xffff_ffff_8020_0000</code> -&gt; PA <code>0x8020_0000</code>\u3002</p> <p>\u6b64\u65f6 <code>va = pa + KERNEL_OFFSET</code>\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u6620\u5c04\u7b2c\u4e00\u5757 DIrect Mapping\uff1aVA <code>0xffff_ffc0_80xx_0000</code> -&gt; \u7b2c\u4e00\u4e2a\u7a7a\u95f2\u7684 2 MiB \u7269\u7406\u9875 <code>0x80xx_0000</code></p> <p>Question 2</p> <p>\u8bf7\u4f60\u9605\u8bfb <code>main.c</code> \u91cc\u9762\u7684 <code>relocation_start</code> \u5e76\u6b63\u786e\u6784\u5efa\u4e34\u65f6\u9875\u8868\u3002</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>vm_print_tmp(pgt_root)</code> \u6253\u5370\u4e34\u65f6\u9875\u8868\u3002\u6700\u7ec8\uff0c\u4f60\u7684\u4e34\u65f6\u9875\u8868\u7ed3\u6784\u5e94\u8be5\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <pre><code>=== Temporary PageTable at 0x000000008020b000 ===\n[2], pte[0x000000008020b010]: 0x0000000080000000 -&gt; 0x000000008020a000 -------V\n    [1], pte[0x000000008020a008]: 0x0000000080200000 -&gt; 0x0000000080200000 DA--XWRV\n[102], pte[0x000000008020b810]: 0xffffffc080000000 -&gt; 0x0000000080209000 -------V\n    [2], pte[0x0000000080209010]: 0xffffffc080400000 -&gt; 0x0000000080400000 DA---WRV\n[1fe], pte[0x000000008020bff0]: 0xffffffff80000000 -&gt; 0x0000000080208000 -------V\n    [1], pte[0x0000000080208008]: 0xffffffff80200000 -&gt; 0x0000000080200000 DA--XWRV\n=== END === \n</code></pre>"},{"location":"zh/lab/xv6lab-paging/#_4","title":"\u56fa\u5b9a\u5927\u5c0f\u5bf9\u8c61\u5206\u914d\u5668","text":"<p>TODO</p>"}]}